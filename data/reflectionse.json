{
  "encoded": "Ww0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAxIiwNCiAgICAidG9waWMiOiAiQ29udHJvbCBBbmQgQ2hvaWNlIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiVGhlIGNoaWVmIHRhc2sgaW4gbGlmZSBpcyBzaW1wbHkgdGhpczogdG8gaWRlbnRpZnkgYW5kIHNlcGFyYXRlIG1hdHRlcnMgc28gdGhhdCBJIGNhbiBzYXkgY2xlYXJseSB0byBteXNlbGYgd2hpY2ggYXJlIGV4dGVybmFscyBub3QgdW5kZXIgbXkgY29udHJvbCwgYW5kIHdoaWNoIGhhdmUgdG8gZG8gd2l0aCB0aGUgY2hvaWNlcyBJIGFjdHVhbGx5IGNvbnRyb2wuIFdoZXJlIHRoZW4gZG8gSSBsb29rIGZvciBnb29kIGFuZCBldmlsPyBOb3QgdG8gdW5jb250cm9sbGFibGUgZXh0ZXJuYWxzLCBidXQgd2l0aGluIG15c2VsZiB0byB0aGUgY2hvaWNlcyB0aGF0IGFyZSBteSBvd24uLi4iLA0KICAgICAgICAiYXV0aG9yIjogIkVwaWN0ZXR1cyIsDQogICAgICAgICJzb3VyY2UiOiAiRGlzY291cnNlcywgMi41LjQtNSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGUgc2luZ2xlIG1vc3QgaW1wb3J0YW50IHByYWN0aWNlIGluIFN0b2ljIHBoaWxvc29waHkgaXMgZGlmZmVyZW50aWF0aW5nIGJldHdlZW4gd2hhdCB3ZSBjYW4gY2hhbmdlIGFuZCB3aGF0IHdlIGNhbid0LiBXaGF0IHdlIGhhdmUgaW5mbHVlbmNlIG92ZXIgYW5kIHdoYXQgd2UgZG8gbm90LiBBIGZsaWdodCBpcyBkZWxheWVkIGJlY2F1c2Ugb2Ygd2VhdGhlciZtZGFzaDtubyBhbW91bnQgb2YgeWVsbGluZyBhdCBhbiBhaXJsaW5lIHJlcHJlc2VudGF0aXZlIHdpbGwgZW5kIGEgc3Rvcm0uIE5vIGFtb3VudCBvZiB3aXNoaW5nIHdpbGwgbWFrZSB5b3UgdGFsbGVyIG9yIHNob3J0ZXIgb3IgYm9ybiBpbiBhIGRpZmZlcmVudCBjb3VudHJ5LiBObyBtYXR0ZXIgaG93IGhhcmQgeW91IHRyeSwgeW91IGNhbid0IDxlbT5tYWtlPC9lbT4gc29tZW9uZSBsaWtlIHlvdS4gQW5kIG9uIHRvcCBvZiB0aGF0LCB0aW1lIHNwZW50IGh1cmxpbmcgeW91cnNlbGYgYXQgdGhlc2UgaW1tb3ZhYmxlIG9iamVjdHMgaXMgdGltZSBub3Qgc3BlbnQgb24gdGhlIHRoaW5ncyB3ZSA8ZW0+Y2FuPC9lbT4gY2hhbmdlLjwvcD48cD5UaGUgcmVjb3ZlcnkgY29tbXVuaXR5IHByYWN0aWNlcyBzb21ldGhpbmcgY2FsbGVkIHRoZSBTZXJlbml0eSBQcmF5ZXI6IDxxPkdvZCwgZ3JhbnQgbWUgdGhlIHNlcmVuaXR5IHRvIGFjY2VwdCB0aGUgdGhpbmdzIEkgIGNhbm5vdCBjaGFuZ2UsIHRoZSBjb3VyYWdlIHRvIGNoYW5nZSB0aGUgdGhpbmdzIEkgY2FuLCBhbmQgdGhlIHdpc2RvbSB0byBrbm93IHRoZSBkaWZmZXJlbmNlLjwvcT4gQWRkaWN0cyBjYW5ub3QgY2hhbmdlIHRoZSBhYnVzZSBzdWZmZXJlZCBpbiBjaGlsZGhvb2QuIFRoZXkgY2Fubm90IHVuZG8gdGhlIGNob2ljZXMgdGhleSBoYXZlIG1hZGUgb3IgdGhlIGh1cnQgdGhleSBoYXZlIGNhdXNlZC4gQnV0IHRoZXkgPGVtPmNhbjwvZW0+IGNoYW5nZSB0aGUgZnV0dXJlJm1kYXNoO3Rocm91Z2ggdGhlIHBvd2VyIHRoZXkgaGF2ZSBpbiB0aGUgcHJlc2VudCBtb21lbnQuIEFzIEVwaWN0ZXR1cyBzYWlkLCB0aGV5IGNhbiBjb250cm9sIHRoZSBjaG9pY2VzIHRoZXkgbWFrZSByaWdodCBub3cuPC9wPjxwPlRoZSBzYW1lIGlzIHRydWUgZm9yIHVzIHRvZGF5LiBJZiB3ZSBjYW4gZm9jdXMgb24gbWFraW5nIGNsZWFyIHdoYXQgcGFydHMgb2Ygb3VyIGRheSBhcmUgd2l0aGluIG91ciBjb250cm9sIGFuZCB3aGF0IHBhcnRzIGFyZSBub3QsIHdlIHdpbGwgbm90IG9ubHkgYmUgaGFwcGllciwgd2Ugd2lsbCBoYXZlIGEgZGlzdGluY3QgYWR2YW50YWdlIG92ZXIgb3RoZXIgcGVvcGxlIHdobyBmYWlsIHRvIHJlYWxpemUgdGhleSBhcmUgZmlnaHRpbmcgYW4gdW53aW5uYWJsZSBiYXR0bGUuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkphbnVhcnkgMiIsDQogICAgInRvcGljIjogIkVkdWNhdGlvbiBJcyBGcmVlZG9tIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiV2hhdCBpcyB0aGUgZnJ1aXQgb2YgdGhlc2UgdGVhY2hpbmdzPyBPbmx5IHRoZSBtb3N0IGJlYXV0aWZ1bCBhbmQgcHJvcGVyIGhhcnZlc3Qgb2YgdGhlIHRydWx5IGVkdWNhdGVkJm1kYXNoO3RyYW5xdWlsaXR5LCBmZWFybGVzc25lc3MsIGFuZCBmcmVlZG9tLiBXZSBzaG91bGQgbm90IHRydXN0IHRoZSBtYXNzZXMgd2hvIHNheSBvbmx5IHRoZSBmcmVlIGNhbiBiZSBlZHVjYXRlZCwgYnV0IHJhdGhlciB0aGUgbG92ZXJzIG9mIHdpc2RvbSB3aG8gc2F5IHRoYXQgb25seSB0aGUgZWR1Y2F0ZWQgYXJlIGZyZWUiLA0KICAgICAgICAiYXV0aG9yIjogIkVwaWN0ZXR1cyIsDQogICAgICAgICJzb3VyY2UiOiAiRGlzY291cnNlcywgMi4xLjIxLTIzYSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5XaHkgZGlkIHlvdSBwaWNrIHVwIHRoaXMgYm9vaz8gV2h5IHBpY2sgdXAgYW55IGJvb2s/IE5vdCB0byBzZWVtIHNtYXJ0ZXIsIG5vdCB0byBwYXNzIHRpbWUgb24gdGhlIHBsYW5lLCBub3QgdG8gaGVhciB3aGF0IHlvdSB3YW50IHRvIGhlYXImbWRhc2g7dGhlcmUgYXJlIHBsZW50eSBvZiBlYXNpZXIgY2hvaWNlcyB0aGFuIHJlYWRpbmcuPC9wPjxwPk5vLCB5b3UgcGlja2VkIHVwIHRoaXMgYm9vayBiZWNhdXNlIHlvdSBhcmUgbGVhcm5pbmcgaG93IHRvIGxpdmUuIEJlY2F1c2UgeW91IHdhbnQgdG8gYmUgZnJlZXIsIGZlYXIgbGVzcywgYW5kIGFjaGlldmUgYSBzdGF0ZSBvZiBwZWFjZS4gRWR1Y2F0aW9uJm1kYXNoO3JlYWRpbmcgYW5kIG1lZGl0YXRpbmcgb24gdGhlIHdpc2RvbSBvZiBncmVhdCBtaW5kcyZtZGFzaDtpcyBub3QgdG8gYmUgZG9uZSBmb3IgaXRzIG93biBzYWtlLiBJdCBoYXMgYSBwdXJwb3NlLjwvcD48cD5SZW1lbWJlciB0aGF0IGltcGVyYXRpdmUgb24gdGhlIGRheXMgeW91IHN0YXJ0IHRvIGZlZWwgZGlzdHJhY3RlZCwgd2hlbiB3YXRjaGluZyB0ZWxldmlzaW9uIG9yIGhhdmluZyBhIHNuYWNrIHNlZW1zIGxpa2UgYSBiZXR0ZXIgdXNlIG9mIHlvdXIgdGltZSB0aGFuIHJlYWRpbmcgb3Igc3R1ZHlpbmcgcGhpbG9zb3BoeS4gS25vd2xlZGdlJm1kYXNoO3NlbGYta25vd2xlZGdlIGluIHBhcnRpY3VsYXImbWRhc2g7aXMgZnJlZWRvbS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAzIiwNCiAgICAidG9waWMiOiAiQmUgUnV0aGxlc3MgVG8gVGhlIFRoaW5ncyBUaGF0IERvbid0IE1hdHRlciIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkhvdyBtYW55IGhhdmUgbGFpZCB3YXN0ZSB0byB5b3VyIGxpZmUgd2hlbiB5b3Ugd2VyZW4ndCBhd2FyZSBvZiB3aGF0IHlvdSB3ZXJlIGxvc2luZywgaG93IG1hbnkgd2FzIHdhc3RlZCBpbiBwb2ludGxlc3MgZ3JpZWYsIGZvb2xpc2ggam95LCBncmVlZHkgZGVzaXJlLCBhbmQgc29jaWFsIGFtdXNlbWVudHMmbWRhc2g7aG93IGxpdHRsZSBvZiB5b3VyIG93biB3YXMgbGVmdCB0byB5b3UuIFlvdSB3aWxsIHJlYWxpemUgeW91IGFyZSBkeWluZyBiZWZvcmUgeW91ciB0aW1lISIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJPbiB0aGUgQnJldml0eSBvZiBMaWZlLCAzLjNiIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPk9uZSBvZiB0aGUgaGFyZGVzdCB0aGluZ3MgdG8gZG8gaW4gbGlmZSBpcyB0byBzYXkgPHE+Tm8uPC9xPiBUbyBpbnZpdGF0aW9ucywgdG8gcmVxdWVzdHMsIHRvIG9ibGlnYXRpb25zLCB0byB0aGUgc3R1ZmYgdGhhdCBldmVyeW9uZSBlbHNlIGlzIGRvaW5nLiBFdmVuIGhhcmRlciBpcyBzYXlpbmcgbm8gdG8gY2VydGFpbiB0aW1lLWNvbnN1bWluZyBlbW90aW9uczogYW5nZXIsIGV4Y2l0ZW1lbnQsIGRpc3RyYWN0aW9uLCBvYnNlc3Npb24sIGx1c3QuIE5vbmUgb2YgdGhlc2UgaW1wdWxzZXMgZmVlbHMgbGlrZSBhIGJpZyBkZWFsIGJ5IGl0c2VsZiwgYnV0IHJ1biBhbW9rLCB0aGV5IGJlY29tZSBhIGNvbW1pdG1lbnQgbGlrZSBhbnl0aGluZyBlbHNlLjwvcD48cD5JZiB5b3UncmUgbm90IGNhcmVmdWwsIHRoZXNlIGFyZSBwcmVjaXNlbHkgdGhlIGltcG9zaXRpb25zIHRoYXQgd2lsbCBvdmVyd2hlbG0gYW5kIGNvbnN1bWUgeW91ciBsaWZlLiBEbyB5b3UgZXZlciB3b25kZXIgaG93IHlvdSBjYW4gZ2V0IHNvbWUgb2YgeW91ciB0aW1lIGJhY2ssIGhvdyB5b3UgY2FuIGZlZWwgbGVzcyBidXN5PyBTdGFydCBieSBsZWFybmluZyB0aGUgcG93ZXIgb2YgPHE+Tm8hPC9xPiZtZGFzaDthcyBpbiA8cT5ObywgdGhhbmsgeW91LDwvcT4gYW5kIDxxPk5vLCBJJ20gbm90IGdvaW5nIHRvIGdldCBjYXVnaHQgdXAgaW4gdGhhdCw8L3E+IGFuZCA8cT5ObywgSSBqdXN0IGNhbid0IHJpZ2h0IG5vdy48L3E+IEl0IG1heSBodXJ0IHNvbWUgZmVlbGluZ3MuIEl0IG1heSB0dXJuIHBlb3BsZSBvZmYuIElmIG1heSB0YWtlIHNvbWUgaGFyZCB3b3JrLiBCdXQgdGhlIG1vcmUgeW91IHNheSBubyB0byB0aGUgdGhpbmdzIHRoYXQgZG9uJ3QgbWF0dGVyLCB0aGUgbW9yZSB5b3UgY2FuIHNheSB5ZXMgdG8gdGhlIHRoaW5ncyB0aGF0IGRvLiBUaGlzIHdpbGwgbGV0IHlvdSBsaXZlIGFuZCBlbmpveSB5b3VyIGxpZmUmbWRhc2g7dGhlIGxpZmUgdGhhdCA8ZW0+eW91PC9lbT4gd2FudC48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSA0IiwNCiAgICAidG9waWMiOiAiVGhlIEJpZyBUaHJlZSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkFsbCB5b3UgbmVlZCBhcmUgdGhlc2U6IGNlcnRhaW50eSBvZiBqdWRnbWVudCBpbiB0aGUgcHJlc2VudCBtb21lbnQ7PGJyPmFjdGlvbiBmb3IgdGhlIGNvbW1vbiBnb29kIGluIHRoZSBwcmVzZW50IG1vbWVudDs8YnI+YW5kIGFuIGF0dGl0dWRlIG9mIGdyYXRpdHVkZSBpbiB0aGUgcHJlc2VudCBtb21lbnQgZm9yIGFueXRoaW5nIHRoYXQgY29tZXMgeW91ciB3YXkuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA5LjYiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+UGVyY2VwdGlvbiwgQWN0aW9uLCBXaWxsLiBUaG9zZSBhcmUgdGhlIHRocmVlIG92ZXJsYXBwaW5nIGJ1dCBjcml0aWNhbCBkaXNjaXBsaW5lcyBvZiBTdG9pY2lzbS4gVGhlcmUncyBtb3JlIHRvIHRoZSBwaGlsb3NvcGh5IGNlcnRhaW5seSZtZGFzaDthbmQgd2UgY291bGQgc3BlbmQgYWxsIGRheSB0YWxraW5nIGFib3V0IHRoZSB1bmlxdWUgYmVsaWVmcyBvZiB0aGUgdmFyaW91cyBTdG9pY3M6IDxxPlRoaXMgaXMgd2hhdCBIZXJhY2xpdHVzIHRob3VnaHQgLiAuIC48L3E+IDxxPlplbm8gaXMgZnJvbSBDaXRpdW0sIGEgY2l0eSBpbiBDeXBydXMsIGFuZCBoZSBiZWxpZXZlZCAuIC4gLjwvcT4gQnV0IHdvdWxkIHN1Y2ggZmFjdHMgcmVhbGx5IGhlbHAgeW91IGRheSB0byBkYXk/IFdoYXQgY2xhcml0eSBkb2VzIHRyaXZpYSBwcm92aWRlPzwvcD48cD5JbnN0ZWFkLCB0aGUgZm9sbG93aW5nIGxpdHRsZSByZW1pbmRlciBzdW1zIHVwIHRoZSB0aHJlZSBtb3N0IGVzc2VudGlhbCBwYXJ0cyBvZiBTdG9pYyBwaGlsb3NvcGh5IHdvcnRoIGNhcnJ5aW5nIHdpdGggeW91IGV2ZXJ5IGRheSwgaW50byBldmVyeSBkZWNpc2lvbjogPHVsPjxsaT5Db250cm9sIHlvdXIgcGVyY2VwdGlvbnMuPC9saT48bGk+RGlyZWN0IHlvdXIgYWN0aW9ucyBwcm9wZXJseS48L2xpPjxsaT5XaWxsaW5nbHkgYWNjZXB0IHdoYXQncyBvdXRzaWRlIHlvdXIgY29udHJvbC48L2xpPjwvdWw+PC9wPjxwPlRoYXQncyBhbGwgd2UgbmVlZCB0byBkby48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSA1IiwNCiAgICAidG9waWMiOiAiQ2xhcmlmeSBZb3VyIEludGVudGlvbnMiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJMZXQgYWxsIHlvdXIgZWZmb3J0cyBiZSBkaXJlY3RlZCB0byBzb21ldGhpbmcsIGxldCBpdCBrZWVwIHRoZSBlbmQgaW4gdmlldy4gSXQncyBub3QgYWN0aXZpdHkgdGhhdCBkaXN0dXJicyBwZW9wbGUsIGJ1dCBmYWxzZSBjb25jZXB0aW9ucyBvZiB0aGluZ3MgdGhhdCBkcml2ZSB0aGVtIG1hZC4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiT24gVHJhbnF1aWxpdHkgb2YgTWluZCwgMTIuNSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5MYXcgMjkgb2YgPGNpdGU+VGhlIDQ4IExhd3Mgb2YgUG93ZXI8L2NpdGU+IGlzOiBQbGFuIEFsbCBUaGUgV2F5IFRvIFRoZSBFbmQuIFJvYmVydCBHcmVlbmUgd3JpdGVzLCA8cT5CeSBwbGFubmluZyB0byB0aGUgZW5kIHlvdSB3aWxsIG5vdCBiZSBvdmVyd2hlbG1lZCBieSBjaXJjdW1zdGFuY2VzIGFuZCB5b3Ugd2lsbCBrbm93IHdoZW4gdG8gc3RvcC4gR2VudGx5IGd1aWRlIGZvcnR1bmUgYW5kIGhlbHAgZGV0ZXJtaW5lIHRoZSBmdXR1cmUgb2YgdGhpbmtpbmcgZmFyIGFoZWFkLjwvcT4gVGhlIHNlY29uZCBoYWJpdCBpbiA8Y2l0ZT5UaGUgNyBIYWJpdHMgT2YgSGlnaGx5IFN1Y2Nlc3NmdWwgUGVvcGxlPC9jaXRlPiBpczogYmVnaW4gd2l0aCBhbiBlbmQgaW4gbWluZC48L3A+PHA+SGF2aW5nIGFuIGVuZCBpbiBtaW5kIGlzIG5vIGd1YXJhbnRlZSB0aGF0IHlvdSdsbCByZWFjaCBpdCZtZGFzaDtubyBTdG9pYyB3b3VsZCB0b2xlcmF0ZSB0aGF0IGFzc3VtcHRpb24mbWRhc2g7YnV0IG5vdCBoYXZpbmcgYW4gZW5kIGluIG1pbmQgaXMgYSBndWFyYW50ZWUgeW91IHdvbid0LiBUbyB0aGUgU3RvaWNzLCA8aSBsYW5nPeKAnWVs4oCdPm9pJmVjaXJjO3NpczwvaT4gKGZhbHNlIGNvbmNlcHRpb25zKSBhcmUgcmVzcG9uc2libGUgbm90IGp1c3QgZm9yIGRpc3R1cmJhbmNlcyBpbiB0aGUgc291bCBidXQgZm9yIGNoYW90aWMgYW5kIGR5c2Z1bmN0aW9uYWwgbGl2ZXMgYW5kIG9wZXJhdGlvbnMuIFdoZW4geW91ciBlZmZvcnRzIGFyZSBub3QgZGlyZWN0ZWQgYXQgYSBjYXVzZSBvciBhIHB1cnBvc2UsIGhvdyB3aWxsIHlvdSBrbm93IHdoYXQgdG8gZG8gZGF5IGluIGFuZCBkYXkgb3V0PyBIb3cgd2lsbCB5b3Uga25vdyB3aGF0IHRvIHNheSBubyB0byBhbmQgd2hhdCB0byBzYXkgeWVzIHRvPyBIb3cgd2lsbCB5b3Uga25vdyB3aGVuIHlvdSd2ZSBoYWQgZW5vdWdoLCB3aGVuIHlvdSd2ZSByZWFjaGVkIHlvdXIgZ29hbCwgd2hlbiB5b3UndmUgZ290dGVuIG9mZiB0cmFjaywgaWYgeW91J3ZlIG5ldmVyIGRlZmluZWQgd2hhdCB0aG9zZSB0aGluZ3MgYXJlPzwvcD48cD5UaGUgYW5zd2VyIGlzIHRoYXQgeW91IGNhbm5vdC4gQW5kIHNvIHlvdSBhcmUgZHJpdmVuIGludG8gZmFpbHVyZSZtZGFzaDtvciB3b3JzZSwgaW50byBtYWRuZXNzIGJ5IHRoZSBvYmxpdmlvbiBvZiBkaXJlY3Rpb25sZXNzbmVzcy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSA2IiwNCiAgICAidG9waWMiOiAiV2hlcmUsIFdobywgV2hhdCwgQW5kIFdoeSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkEgcGVyc29uIHdobyBkb2Vzbid0IGtub3cgd2hhdCB0aGUgdW5pdmVyc2UgaXMsIGRvZXNuJ3Qga25vdyB3aGVyZSB0aGV5IGFyZS4gQSBwZXJzb24gd2hvIGRvZXNuJ3Qga25vdyB0aGVpciBwdXJwb3NlIGluIGxpZmUgZG9lc24ndCBrbm93IHdobyB0aGV5IGFyZSBvciB3aGF0IHRoZSB1bml2ZXJzZSBpcy4gQSBwZXJzb24gd2hvIGRvZXNuJ3Qga25vdyBhbnkgb25lIG9mIHRoZXNlIHRoaW5ncyBkb2Vzbid0IGtub3cgd2h5IHRoZXkgYXJlIGhlcmUuIFNvIHdoYXQgdG8gbWFrZSBvZiBwZW9wbGUgd2hvIHNlZWsgb3IgYXZvaWQgdGhlIHByYWlzZSBvZiB0aG9zZSB3aG8gaGF2ZSBubyBrbm93bGVkZ2Ugb2Ygd2hlcmUgb3Igd2hvIHRoZXkgYXJlPyIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgOC41MiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGUgbGF0ZSBjb21lZGlhbiBNaXRjaCBIZWRiZXJnIGhhZCBhIGZ1bm55IHN0b3J5IGhlIHRvbGQgaW4gaGlzIGFjdC4gU2l0dGluZyBkb3duIGZvciBhbiBvbi1haXIgaW50ZXJ2aWV3LCBhIHJhZGlvIERKIGFza2VkIGhpbSwgPHE+U28gd2hvIGFyZSB5b3U/PC9xPiBJbiB0aGF0IG1vbWVudCwgaGUgaGFkIHRvIHRoaW5rLCA8ZW0+SXMgdGhpcyBndXkgcmVhbGx5IGRlZXAgb3IgZGlkIEkgZHJpdmUgdG8gdGhlIHdyb25nIHN0YXRpb24/PC9lbT48L3A+PHA+SG93IG9mdGVuIGFyZSB3ZSBhc2tlZCBhIHNpbXBsZSBxdWVzdGlvbiBsaWtlIDxxPldobyBhcmUgeW91PzwvcT4gb3IgPHE+V2hhdCBkbyB5b3UgZG8/PC9xPiBvciA8cT5XaGVyZSBhcmUgeW91IGZyb20/PC9xPiBDb25zaWRlcmluZyBpdCBhIHN1cGVyZmljaWFsIHF1ZXN0aW9uJm1kYXNoO2lmIHdlIGV2ZW4gY29uc2lkZXIgaXQgYXQgYWxsJm1kYXNoO3dlIGRvbid0IGJvdGhlciB3aXRoIG1vcmUgdGhhbiBhIHN1cGVyZmljaWFsIGFuc3dlci48L3A+PHA+QnV0LCBndW4gdG8gdGhlaXIgaGVhZCwgbW9zdCBwZW9wbGUgY291bGRuJ3QgZ2l2ZSBtdWNoIGluIHRoZSB3YXkgb2YgYSBzdWJzdGFudGl2ZSBhbnN3ZXIuIENvdWxkIHlvdT8gSGF2ZSB5b3UgdGFrZW4gdGhlIHRpbWUgdG8gZ2V0IGNsYXJpdHkgYWJvdXQgd2hvIHlvdSBhcmUgYW5kIHdoYXQgeW91IHN0YW5kIGZvcj8gT3IgYXJlIHlvdSB0b28gYnVzeSBjaGFzaW5nIHVuaW1wb3J0YW50IHRoaW5ncywgbWltaWNraW5nIHRoZSB3cm9uZyBpbmZsdWVuY2VzLCBhbmQgZm9sbG93aW5nIGRpc2FwcG9pbnRpbmcgb3IgdW5mdWxmaWxsaW5nIG9yIG5vbmV4aXN0ZW50IHBhdGhzPzwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKYW51YXJ5IDciLA0KICAgICJ0b3BpYyI6ICJTZXZlbiBDbGVhciBGdW5jdGlvbnMgT2YgVGhlIE1pbmQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJUaGUgcHJvcGVyIHdvcmsgb2YgdGhlIG1pbmQgaXMgdGhlIGV4ZXJjaXNlIG9mIGNob2ljZSwgcmVmdXNhbCwgeWVhcm5pbmcsIHJlcHVsc2lvbiwgcHJlcGFyYXRpb24sIHB1cnBvc2UsIGFuZCBhc3NlbnQuIFdoYXQgdGhlbiBjYW4gcG9sbHV0ZSBhbmQgY2xvZyB0aGUgbWluZCdzIHByb3BlciBmdW5jdGlvbmluZz8gTm90aGluZyBidXQgaXRzIG93biBjb3JydXB0IGRlY2lzaW9ucy4iLA0KICAgICAgICAiYXV0aG9yIjogIkVwaWN0ZXR1cyIsDQogICAgICAgICJzb3VyY2UiOiAiRGlzY291cnNlcywgNC4xMS42LTciDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+TGV0J3MgYnJlYWsgZG93biBlYWNoIG9uZSBvZiB0aG9zZSB0YXNrczogPHVsIHN0eWxlPWxpc3Qtc3R5bGUtdHlwZTpub25lPjxsaT5DaG9pY2UmbWRhc2g7dG8gZG8gYW5kIHRoaW5rIHJpZ2h0PC9saT48bGk+UmVmdXNhbCZtZGFzaDtvZiB0ZW1wdGF0aW9uPC9saT48bGk+WWVhcm5pbmcmbWRhc2g7dG8gYmUgYmV0dGVyPC9saT48bGk+UmVwdWxzaW9uJm1kYXNoO29mIG5lZ2F0aXZpdHksIG9mIGJhZCBpbmZsdWVuY2VzLCBvZiB3aGF0IGlzbid0IHRydWU8L2xpPjxsaT5QcmVwYXJhdGlvbiZtZGFzaDtmb3Igd2hhdCBsaWVzIGFoZWFkIG9yIHdoYXRldmVyIG1heSBoYXBwZW48L2xpPjxsaT5QdXJwb3NlJm1kYXNoO291ciBndWlkaW5nIHByaW5jaWxlIGFuZCBoaWdoZXN0IHByaW9yaXR5PC9saT48bGk+QXNzZW50Jm1kYXNoO3RvIGJlIGZyZWUgb2YgZGVjZXB0aW9uIGFib3V0IHdoYXQncyBpbnNpZGUgYW5kIG91dHNpZGUgb3VyIGNvbnRyb2wgKGFuZCBiZSByZWFkeSB0byBhY2NlcHQgdGhlIGxhdHRlcik8L2xpPjwvdWw+PC9wPjxwPlRoaXMgaXMgd2hhdCB0aGUgbWluZCBpcyBoZXJlIHRvIGRvLiBXZSBtdXN0IG1ha2Ugc3VyZSB0aGF0IGl0IGRvZXMmbWRhc2g7YW5kIHNlZSBldmVyeXRoaW5nIGVsc2UgYXMgcG9sbHV0aW9uIG9yIGEgY29ycnVwdGlvbi48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSA4IiwNCiAgICAidG9waWMiOiAiU2VlaW5nIE91ciBBZGRpY3Rpb25zIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiV2UgbXVzdCBnaXZlIHVwIG1hbnkgdGhpbmdzIHRvIHdoaWNoIHdlIGFyZSBhZGRpY3RlZCwgY29uc2lkZXJpbmcgdGhlbSB0byBiZSBnb29kLiBPdGhlcndpc2UsIGNvdXJhZ2Ugd2lsbCB2YW5pc2gsIHdoaWNoIHNob3VsZCBjb250aW51YWxseSB0ZXN0IGl0c2VsZi4gR3JlYXRuZXNzIG9mIHNvdWwgd2lsbCBiZSBsb3N0LCB3aGljaCBjYW4ndCBzdGFuZCBvdXQgdW5sZXNzIGl0IGRpc2RhaW5zIGFzIHBldHR5IHdoYXQgdGhlIG1vYiByZWdhcmRzIGFzIG1vc3QgZGVzaXJhYmxlLiIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJNb3JhbCBMZXR0ZXJzLCA3NC4xMmItMTMiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+V2hhdCB3ZSBjb25zaWRlciB0byBiZSBoYXJtbGVzcyBpbmR1bGdlbmNlcyBjYW4gZWFzaWx5IGJlY29tZSBmdWxsLWJsb3duIGFkZGljdGlvbnMuIFdlIHN0YXJ0IHdpdGggY29mZmVlIGluIHRoZSBtb3JuaW5nLCBhbmQgc29vbiBlbm91Z2ggd2UgY2FuJ3Qgc3RhcnQgdGhlIGRheSB3aXRob3V0IGl0LiBXZSBjaGVjayBvdXIgZW1haWwgYmVjYXVzZSBpdCdzIHBhcnQgb2Ygb3VyIGpvYiwgYW5kIHNvb24gZW5vdWdoIHdlIGZlZWwgdGhlIHBoYW50b20gYnV6eiBvZiB0aGUgcGhvbmUgaW4gb3VyIHBvY2tldCBldmVyeSBmZXcgc2Vjb25kcy4gU29vbiBlbm91Z2gsIHRoZXNlIGhhcm1sZXNzIGhhYml0cyBhcmUgcnVubmluZyBvdXIgbGl2ZXMuPC9wPjxwPlRoZSBsaXR0bGUgY29tcHVsc2lvbnMgYW5kIGRyaXZlcyB3ZSBoYXZlIG5vdCBvbmx5IGNoaXAgYXdheSBhdCBvdXIgZnJlZWRvbSBhbmQgc292ZXJlaWdudHksIHRoZXkgY2xvdWQgb3VyIGNsYXJpdHkuIFdlIHRoaW5rIHdlJ3JlIGluIGNvbnRyb2wmbWRhc2g7YnV0IGFyZSB3ZSByZWFsbHk/IEFzIG9uZSBhZGRpY3QgcHV0IGl0LCBhZGRpY3Rpb24gaXMgd2hlbiB3ZSd2ZSA8cT5sb3N0IHRoZSBmcmVlZG9tIHRvIGFic3RhaW4uPC9xPiBMZXQgdXMgcmVjbGFpbSB0aGF0IGZyZWVkb20uPC9wPjxwPldoYXQgdGhhdCBhZGRpY3Rpb24gaXMgZm9yIHlvdSBjYW4gdmFyeTogU29kYT8gRHJ1Z3M/IENvbXBsYWluaW5nPyBHb3NzaXA/IFRoZSBJbnRlcm5ldD8gQml0aW5nIHlvdXIgbmFpbHM/IEJ1dCB5b3UgbXVzdCByZWNsYWltIHRoZSBhYmlsaXR5IHRvIGFic3RhaW4gYmVjYXVzZSB3aXRoaW4gaXQgaXMgeW91ciBjbGFyaXR5IGFuZCBzZWxmLWNvbnRyb2wuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkphbnVhcnkgOSIsDQogICAgInRvcGljIjogIldoYXQgV2UgQ29udHJvbCBBbmQgV2hhdCBXZSBEb24ndCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlNvbWUgdGhpbmdzIGFyZSBpbiBvdXIgY29udHJvbCwgd2hpbGUgb3RoZXJzIGFyZSBub3QuIFdlIGNvbnRyb2wgb3VyIG9waW5pb24sIGNob2ljZSwgZGVzaXJlLCBhdmVyc2lvbiwgYW5kIGluIGEgd29yZCwgZXZlcnl0aGluZyBvZiBvdXIgb3duIGRvaW5nLiBXZSBkb24ndCBjb250cm9sIG91ciBib2R5LCBwcm9wZXJ0eSwgcmVwdXRhdGlvbiwgcG9zaXRpb24sIGFuZCBpbiBhIHdvcmQsIGV2ZXJ5dGhpbmcgbm90IG9mIG91ciBvd24gZG9pbmcuIEV2ZW4gbW9yZSwgdGhlIHRoaW5ncyBpbiBvdXIgY29udHJvbCBhcmUgYnkgbmF0dXJlIGZyZWUsIHVuaGluZGVyZWQsIGFuZCB1bm9ic3RydWN0ZWQsIHdoaWxlIHRob3NlIG5vdCBpbiBvdXIgY29udHJvbCBhcmUgd2Vhaywgc2xhdmlzaCwgY2FuIGJlIGhpbmRlcmVkLCBhbmQgYXJlIG5vdCBvdXIgb3duLiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJFbmNoaXJpZGlvbiwgMS4xLTIiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VG9kYXksIHlvdSB3b24ndCBjb250cm9sIHRoZSBleHRlcm5hbCBldmVudHMgdGhhdCBoYXBwZW4uIElzIHRoYXQgc2Nhcnk/IEEgbGl0dGxlLCBidXQgaXQncyBiYWxhbmNlZCB3aGVuIHdlIHNlZSB0aGF0IHdlIGNhbiBjb250cm9sIG91ciBvcGluaW9uIDxlbT5hYm91dDwvZW0+IHRob3NlIGV2ZW50cy4gWW91IGRlY2lkZSB3aGV0aGVyIHRoZXkncmUgZ29vZCBvciBiYWQsIHdoZXRoZXIgdGhleSdyZSBmYWlyIG9yIHVuZmFpci4gWW91IGRvbid0IGNvbnRyb2wgdGhlIHNpdHVhdGlvbiwgYnV0IHlvdSBjb250cm9sIHdoYXQgeW91IDxlbT50aGluazwvZW0+IGFib3V0IGl0LjwvcD48cD5TZWUgaG93IHRoYXQgd29ya3M/IEV2ZXJ5IHNpbmdsZSB0aGluZyB0aGF0IGlzIG91dHNpZGUgeW91ciBjb250cm9sJm1kYXNoO3RoZSBvdXRzaWRlIHdvcmxkLCBvdGhlciBwZW9wbGUsIGx1Y2ssIGthcm1hLCB3aGF0ZXZlciZtZGFzaDtzdGlsbCBwcmVzZW50cyBhIGNvcnJlc3BvbmRpbmcgYXJlYSB0aGF0IDxlbT5pczwvZW0+IGluIHlvdXIgY29udHJvbC4gVGhpcyBhbG9uZSBnaXZlcyB1cyBwbGVudHkgdG8gbWFuYWdlLCBwbGVudHkgb2YgcG93ZXIuPC9wPjxwPkJlc3Qgb2YgYWxsLCBhbiBob25lc3QgdW5kZXJzdGFuZGluZyBvZiB3aGF0IGlzIHdpdGhpbiBvdXIgY29udHJvbCBwcm92aWRlcyByZWFsIGNsYXJpdHkgYWJvdXQgdGhlIHdvcmxkOiBhbGwgd2UgaGF2ZSBpcyBvdXIgb3duIG1pbmQuIFJlbWVtYmVyIHRoYXQgdG9kYXkgd2hlbiB5b3UgdHJ5IHRvIGV4dGVuZCB5b3VyIHJlYWNoIG91dHdhcmQmbWRhc2g7dGhhdCBpdCdzIG11Y2ggYmV0dGVyIGFuZCBtb3JlIGFwcHJvcHJpYXRlbHkgZGlyZWN0ZWQgPGVtPmlud2FyZC48L2VtPi48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAxMCIsDQogICAgInRvcGljIjogIklmIFlvdSBXYW50IFRvIEJlIFN0ZWFkeSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogImUgZXNzZW5jZSBvZiBnb29kIGlzIGEgY2VydGFpbiBraW5kIG9mIHJlYXNvbmVkIGNob2ljZTsganVzdCBhcyB0aGUgZXNzZW5jZSBvZiBldmlsIGlzIGFub3RoZXIga2luZC4gV2hhdCBhYm91dCBleHRlcm5hbHMsIHRoZW4/IFRoZXkgYXJlIG9ubHkgdGhlIHJhdyBtYXRlcmlhbCBmb3Igb3VyIHJlYXNvbmVkIGNob2ljZSwgd2hpY2ggZmluZHMgaXRzIG93biBnb29kIG9yIGV2aWwgaW4gd29ya2luZyB3aXRoIHRoZW0uIEhvdyB3aWxsIGl0IGZpbmQgdGhlIGdvb2Q/IE5vdCBieSBtYXJ2ZWxpbmcgYXQgdGhlIG1hdGVyaWFsISBGb3IgaWYganVkZ21lbnRzIGFib3V0IHRoZSBtYXRlcmlhbCBhcmUgc3RyYWlnaHQgdGhhdCBtYWtlcyBvdXIgY2hvaWNlcyBnb29kLCBidXQgaWYgdGhvc2UganVkZ2VtZW50cyBhcmUgdHdpc3RlZCwgb3VyIGNob2ljZXMgdHVybiBiYWQuIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDEuMjkuMS0zIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoZSBTdG9pYyBzZWVrIHN0ZWFkaW5lc3MsIHN0YWJpbGl0eSwgYW5kIHRyYW5xdWlsaXR5Jm1kYXNoO3RyYWl0cyBtb3N0IG9mIHVzIGFzcGlyZSB0byBidXQgc2VlbSB0byBleHBlcmllbmNlIG9ubHkgZmxlZXRpbmdseS4gSG93IGRvIHRoZXkgYWNjb21wbGlzaCB0aGlzIGVsdXNpdmUgZ29hbD8gSG93IGRvZXMgb25lIGVtYm9keSA8aSBsYW5nPWVsPmV1c3RhdGhlaWE8L2k+ICh0aGUgd29yZCBBcnJpYW4gdXNlZCB0byBkZXNjcmliZSB0aGlzIHRlYWNoaW5nIG9mIEVwaWN0ZXR1cyk/PC9wPjxwPldlbGwsIGl0J3Mgbm90IGx1Y2suIEl0J3Mgbm90IGJ5IGVsaW1pbmF0aW5nIG91dHNpZGUgaW5mbHVlbmNlcyBvciB0dXJuaW5nIGF3YXkgdG8gcXVpZXQgYW5kIHNvbGl0dWRlLiBJbnN0ZWFkLCBpdCdzIGFib3V0IGZpbHRlcmluZyB0aGUgb3V0c2lkZSB3b3JsZCB0aHJvdWdoIHRoZSBzdHJhaWdodGVuZXIgb2Ygb3VyIGp1ZGdtZW50LiBUaGF0J3Mgd2hhdCBvdXIgcmVhc29uIGNhbiBkbyZtZGFzaDtpdCBjYW4gdGFrZSB0aGUgY3Jvb2tlZCwgY29uZnVzaW5nLCBhbmQgb3ZlcndoZWxtaW5nIG5hdHVyZSBvZiBleHRlcm5hbCBldmVudHMgYW5kIG1ha2UgdGhlbSBvcmRlcmx5LjwvcD48cD5Ib3dldmVyLCBpZiBvdXIganVkZ2VtZW50cyBhcmUgY3Jvb2tlZCBiZWNhdXNlIHdlIGRvbid0IHVzZSByZWFzb24sIHRoZW4gZXZlcnl0aGluZyB0aGF0IGZvbGxvd3Mgd2lsbCBiZSBjcm9va2VkLCBhbmQgd2Ugd2lsbCBsb3NlIG91ciBhYmlsaXR5IHRvIHN0ZWFkeSBvdXJzZWx2ZXMgaW4gdGhlIGNoYW9zIGFuZCBydXNoIG9mIGxpZmUuIElmIHlvdSB3YW50IHRvIGJlIHN0ZWFkeSwgaWYgeW91IHdhbnQgY2xhcml0eSwgcHJvcGVyIGp1ZGdtZW50IGlzIHRoZSBiZXN0IHdheS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAxMSIsDQogICAgInRvcGljIjogIklmIFlvdSBXYW50IFRvIEJlIFVuc3RlYWR5IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiRm9yIGlmIGEgcGVyc29uIHNoaWZ0cyB0aGVpciBjYXV0aW9uIHRvIHRoZWlyIG93biByZWFzb25lZCBjaG9pY2VzIGFuZCB0aGUgYWN0cyBvZiB0aG9zZSBjaG9pY2VzLCB0aGV5IHdpbGwgYXQgdGhlIHNhbWUgdGltZSBnYWluIHRoZSB3aWxsIHRvIGF2b2lkLCBidXQgaWYgdGhleSBzaGlmdCB0aGVpciBjYXV0aW9uIGF3YXkgZnJvbSB0aGVpciBvd24gcmVhc29uZWQgY2hvaWNlcyB0byB0aGluZ3Mgbm90IHVuZGVyIHRoZWlyIGNvbnRyb2wsIHNlZWtpbmcgdG8gYXZvaWQgd2hhdCBpcyBjb250cm9sbGVkIGJ5IG90aGVycywgdGhleSB3aWxsIHRoZW4gYmUgYWdpdGF0ZWQsIGZlYXJmdWwsIGFuZCB1bnN0YWJsZS4iLA0KICAgICAgICAiYXV0aG9yIjogIkVwaWN0ZXR1cyIsDQogICAgICAgICJzb3VyY2UiOiAiRGlzY291cnNlcywgMi4xLjEyIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoZSBpbWFnZSBvZiB0aGUgWmVuIHBoaWxvc29waGVyIGlzIHRoZSBtb25rIHVwIGluIHRoZSBncmVlbiBxdWlldCBoaWxscywgb3IgaW4gYSBiZWF1dGlmdWwgdGVtcGxlIG9uIHNvbWUgcm9ja3kgY2xpZmYuIFRoZSBTdG9pY3MgYXJlIHRoZSBhbnRpdGhlc2lzIG9mIHRoaXMgaWRlYS4gSW5zdGVhZCwgdGhleSBhcmUgdGhlIG1hbiBpbiB0aGUgbWFya2V0cGxhY2UsIHRoZSBzZW5hdG9yIGluIHRoZSBGb3J1bSwgdGhlIGJyYXZlIHdpZmUgd2FpdGluZyBmb3IgaGVyIHNvbGRpZXIgdG8gcmV0dXJuIGZyb20gYmF0dGxlLCB0aGUgc2N1bHB0b3IgYnVzeSBpbiBoZXIgc3R1ZGlvLiBTdGlsbCwgdGhlIFN0b2ljIGlzIGVxdWFsbHkgYXQgcGVhY2UuPC9wPjxwPkVwaWN0ZXR1cyBpcyByZW1pbmRpbmcgeW91IHRoYXQgc2VyZW5pdHkgYW5kIHN0YWJpbGl0eSBhcmUgcmVzdWx0cyBvZiB5b3VyIGNob2ljZXMgYW5kIGp1ZGdlbWVudCwgbm90IHlvdXIgZW52aXJvbm1lbnQuIElmIHlvdSBzZWVrIHRvIGF2b2lkIGFsbCBkaXNydXB0aW9ucyB0byB0cmFucXVpbGl0eSZtZGFzaDtvdGhlciBwZW9wbGUsIGV4dGVybmFsIGV2ZW50cywgc3RyZXNzJm1kYXNoO3lvdSB3aWxsIG5ldmVyIGJlIHN1Y2Nlc3NmdWwuIFlvdXIgcHJvYmxlbXMgd2lsbCBmb2xsb3cgeW91IHdoZXJldmVyIHlvdSBydW4gYW5kIGhpZGUuIEJ1dCBpZiB5b3Ugc2VlayB0byBhdm9pZCB0aGUgaGFybWZ1bCBhbmQgZGlzcnVwdGl2ZSA8ZW0+anVkZ2VtZW50czwvZW0+IHRoYXQgY2F1c2UgdGhvc2UgcHJvYmxlbXMsIHRoZW4geW91IHdpbGwgYmUgc3RhYmxlIGFuZCBzdGVhZHkgd2hlcmV2ZXIgeW91IGhhcHBlbiB0byBiZS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAxMiIsDQogICAgInRvcGljIjogIlRoZSBPbmUgUGF0aCBUbyBTZXJlbml0eSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIktlZXAgdGhpcyB0aG91Z2h0IGF0IHRoZSByZWFkeSBhdCBkYXlicmVhaywgYW5kIHRocm91Z2ggdGhlIGRheSBhbmQgbmlnaHQmbWRhc2g7dGhlcmUgaXMgb25seSBvbmUgcGF0aCB0byBoYXBwaW5lc3MsIGFuZCB0aGF0IGlzIGluIGdpdmluZyB1cCBhbGwgb3V0c2lkZSBvZiB5b3VyIHNwaGVyZSBvZiBjaG9pY2UsIHJlZ2FyZGluZyBub3RoaW5nIGVsc2UgYXMgeW91ciBwb3NzZXNzaW9uLCBzdXJyZW5kZXJpbmcgYWxsIGVsc2UgdG8gR29kIGFuZCBGb3J0dW5lLiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCA0LjQuMzkiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhpcyBtb3JuaW5nLCByZW1pbmQgeW91cnNlbGYgb2Ygd2hhdCBpcyBpbiB5b3VyIGNvbnRyb2wgYW5kIHdoYXQncyBub3QgaW4geW91ciBjb250cm9sLiBSZW1pbmQgeW91cnNlbGYgdG8gZm9jdXMgb24gdGhlIGZvcm1lciBhbmQgbm90IHRoZSBsYXR0ZXIuPC9wPjxwPkJlZm9yZSBsdW5jaCwgcmVtaW5kIHlvdXJzZWxmIHRoYXQgdGhlIG9ubHkgdGhpbmcgeW91IHRydWx5IHBvc3Nlc3MgaXMgeW91ciBhYmlsaXR5IHRvIG1ha2UgY2hvaWNlcyAoYW5kIHRvIHVzZSByZWFzb24gYW5kIGp1ZGdtZW50IHdoZW4gZG9pbmcgc28pLiBUaGlzIGlzIHRoZSBvbmx5IHRoaW5nIHRoYXQgY2FuIG5ldmVyIGJlIHRha2VuIGZyb20geW91IGNvbXBsZXRlbHkuPC9wPjxwPkluIHRoZSBhZnRlcm5vb24sIHJlbWluZCB5b3Vyc2VsZiB0aGF0IGFzaWRlIGZyb20gdGhlIGNob2ljZXMgeW91IG1ha2UsIHlvdXIgZmF0ZSBpcyBub3QgZW50aXJlbHkgdXAgdG8geW91LiBUaGUgd29ybGQgaXMgc3Bpbm5pbmcgYW5kIHdlIHNwaW4gYWxvbmcgd2l0aCBpdCZtZGFzaDt3aGljaGV2ZXIgZGlyZWN0aW9uLCBnb29kIG9yIGJhZC48L3A+PHA+SW4gdGhlIGV2ZW5pbmcsIHJlbWluZCB5b3Vyc2VsZiBob3cgbXVjaCBpcyBvdXRzaWRlIG9mIHlvdXIgY29udHJvbCBhbmQgd2hlcmUgeW91ciBjaG9pY2VzIGJlZ2luIGFuZCBlbmQuPC9wPjxwPkFzIHlvdSBsaWUgaW4gYmVkLCByZW1lbWJlciB0aGF0IHNsZWVwIGlzIGEgZm9ybSBvZiBzdXJyZW5kZXIgYW5kIHRydXN0IGFuZCBob3cgZWFzaWx5IGl0IGNvbWVzLiBBbmQgcHJlcGFyZSB0byBzdGFydCB0aGUgd2hvbGUgY3ljbGUgb3ZlciBhZ2FpbiB0b21vcnJvdy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAxMyIsDQogICAgInRvcGljIjogIkNpcmNsZSBPZiBDb250cm9sIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiV2UgY29udHJvbCBvdXIgcmVhc29uZWQgY2hvaWNlIGFuZCBhbGwgYWN0cyB0aGF0IGRlcGVuZCBvbiB0aGF0IG1vcmFsIHdpbGwuIFdoYXQncyBub3QgdW5kZXIgb3VyIGNvbnRyb2wgYXJlIHRoZSBib2R5IGFuZCBhbnkgb2YgaXRzIHBhcnRzLCBvdXIgcG9zc2Vzc2lvbnMsIHBhcmVudHMsIHNpYmxpbmdzLCBjaGlsZHJlbiwgb3IgY291bnRyeSZtZGFzaDthbnl0aGluZyB3aXRoIHdpdGggd2UgbWlnaHQgYXNzb2NpYXRlLiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCAxLjIyLjEwIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoaXMgaXMgaW1wb3J0YW50IGVub3VnaCB0aGF0IGl0IGJlYXJzIHJlcGVhdGluZzogYSB3aXNlIHBlcnNvbiBrbm93cyB3aGF0J3MgaW5zaWRlIHRoZWlyIGNpcmNsZSBvZiBjb250cm9sIGFuZCB3aGF0IGlzIG91dHNpZGUgb2YgaXQuPC9wPjxwPlRoZSBnb29kIG5ld3MgaXMgdGhhdCBpdCdzIHByZXR0eSBlYXN5IHRvIHJlbWVtYmVyIHdoYXQgaXMgaW5zaWRlIG91ciBjb250cm9sLiBBY2NvcmRpbmcgdG8gdGhlIFN0b2ljcywgdGhlIGNpcmNsZSBvZiBjb250cm9sIGNvbnRhaW5zIGp1c3Qgb25lIHRoaW5nOiBZT1VSIE1JTkQuIFRoYXQncyByaWdodCwgZXZlbiB5b3VyIHBoeXNpY2FsIGJvZHkgaXNuJ3QgY29tcGxldGVseSB3aXRoaW4gdGhlIGNpcmNsZS4gQWZ0ZXIgYWxsLCB5b3UgY291bGQgYmUgc3RydWNrIHdpdGggYSBwaHlzaWNhbCBpbGxuZXNzIG9yIGltcGFpcm1lbnQgYXQgYW55IG1vbWVudC4gWW91IGNvdWxkIGJlIHRyYXZlbGluZyBpbiBhIGZvcmVpZ24gY291bnRyeSBhbmQgYmUgdGhyb3duIGluIGphaWwuPC9wPjxwPkJ1dCB0aGlzIGlzIGFsbCBnb29kIG5ld3MgYmVjYXVzZSBpdCBkcmFzdGljYWxseSByZWR1Y2VzIHRoZSBhbW91bnQgb2YgdGhpbmdzIHRoYXQgeW91IG5lZWQgdG8gdGhpbmsgYWJvdXQuIFRoZXJlIGlzIGNsYXJpdHkgaW4gc2ltcGxpY2l0eS4gV2hpbGUgZXZlcnlvbmUgZWxzZSBpcyBydW5uaW5nIGFyb3VuZCB3aXRoIGEgbGlzdCBvZiByZXNwb25zaWJpbGl0aWVzIGEgbWlsZSBsb25nJm1kYXNoO3RoaW5ncyB0aGV5J3JlIG5vdCBhY3R1YWxseSByZXNwb25zaWJsZSBmb3ImbWRhc2g7eW91J3ZlIGdvdCBqdXN0IHRoYXQgb25lLWl0ZW0gbGlzdC4gWW91J3ZlIGdvdCBqdXN0IG9uZSB0aGluZyB0byBtYW5hZ2U6IHlvdXIgY2hvaWNlcywgeW91ciB3aWxsLCB5b3VyIG1pbmQuPC9wPjxwPlNvIG1pbmQgaXQuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkphbnVhcnkgMTQiLA0KICAgICJ0b3BpYyI6ICJDdXQgVGhlIFN0cmluZ3MgVGhhdCBQdWxsIFlvdXIgTWluZCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlVuZGVyc3RhbmQgYXQgbGFzdCB0aGF0IHlvdSBoYXZlIHNvbWV0aGluZyBpbiB5b3UgbW9yZSBwb3dlcmZ1bCBhbmQgZGl2aW5lIHRoYW4gd2hhdCBjYXVzZXMgdGhlIGJvZGlseSBwYXNzaW9ucyBhbmQgcHVsbHMgeW91IGxpa2UgYSBtZXJlIHB1cHBldC4gV2hhdCB0aG91Z2h0cyBub3cgb2NjdXB5IG15IG1pbmQ/IElzIGl0IG5vdCBmZWFyLCBzdXNwaWNpb24sIGRlc2lyZSwgb3Igc29tZXRoaW5nIGxpa2UgdGhhdD8iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDEyLjE5Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoaW5rIG9mIGFsbCB0aGUgaW50ZXJlc3RzIHZ5aW5nIGZvciBhIHNoYXJlIG9mIHlvdXIgd2FsbGV0IG9yIGZvciBhIHNlY29uZCBvZiB5b3VyIGF0dGVudGlvbi4gRm9vZCBzY2llbnRpc3RzIGFyZSBlbmdpbmVlcmluZyBwcm9kdWN0cyB0byBleHBsb2l0IHlvdXIgdGFzdGUgYnVkcy4gU2lsaWNvbiBWYWxsZXkgZW5naW5lZXJzIGFyZSBkZXNpZ25pbmcgYXBwbGljYXRpb25zIGFzIGFkZGljdGl2ZSBhcyBnYW1ibGluZy4gVGhlIG1lZGlhIGlzIG1hbnVmYWN0dXJpbmcgc3RvcmllcyB0byBwcm92b2tlIG91dHJhZ2UgYW5kIGFuZ2VyLjwvcD48cD5UaGVzZSBhcmUganVzdCBhIHNtYWxsIHNsaWNlIG9mIHRoZSB0ZW1wdGF0aW9ucyBhbmQgZm9yY2VzIGFjdGluZyBvbiB1cyZtZGFzaDtkaXN0cmFjdGluZyB1cyBhbmQgcHVsbGluZyB1cyAgYXdheSBmcm9tIHRoZSB0aGluZ3MgdGhhdCB0cnVseSBtYXR0ZXIuIE1hcmN1cywgdGhhbmtmdWxseSwgd2FzIG5vdCBleHBvc2VkIHRvIHRoZXNlIGV4dHJlbWUgcGFydHMgb2Ygb3VyIG1vZGVybiBjdWx0dXJlLiBCdXQgaGUga25ldyBwbGVudHkgb2YgZGlzdHJhY3Rpbmcgc2lua2hvbGVzIHRvbzogZ29zc2lwLCB0aGUgZW5kbGVzcyBjYWxsIG9mIHdvcmssIGFzIHdlbGwgYXMgZmVhciwgc3VzcGljaW9uLCBsdXN0LiBFdmVyeSBodW1hbiBiZWluZyBpcyBwdWxsZWQgYnkgdGhlc2UgaW50ZXJuYWwgYW5kIGV4dGVybmFsIGZvcmNlcyB0aGF0IGFyZSBpbmNyZWFzaW5nbHkgbW9yZSBwb3dlcmZ1bCBhbmQgaGFyZGVyIHRvIHJlc2lzdC48L3A+PHA+UGhpbG9zb3BoeSBpcyBzaW1wbHkgYXNraW5nIHVzIHRvIHBheSBjYXJlZnVsIGF0dGVudGlvbiBhbmQgdG8gc3RyaXZlIHRvIGJlIG1vcmUgdGhhbiBhIHBhd24uIEFzIFZpY290ciBGcmFua2wgcHV0cyBpdCBpbiA8Y2l0ZT5UaGUgV2lsbCB0byBNZWFuaW5nPC9jaXRlPiwgPHE+TWFuIGlzIHB1c2hlZCBieSBkcml2ZXMgYnV0IHB1bGxlZCBieSB2YWx1ZXMuPC9xPiBUaGVzZSB2YWx1ZXMgYW5kIGlubmVyIGF3YXJlbmVzcyBwcmV2ZW50IHVzIGZyb20gYmVpbmcgcHVwcGV0cy4gU3VyZSwgcGF5aW5nIGF0dGVudGlvbiByZXF1aXJlcyB3b3JrIGFuZCBhd2FyZW5lc3MsIGJ1dCBpc24ndCB0aGF0IGJldHRlciB0aGFuIGJlaW5nIGplcmtlZCBhYm91dCBvbiBhIHN0cmluZy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAxNSIsDQogICAgInRvcGljIjogIlBlYWNlIElzIEluIFN0YXlpbmcgVGhlIENvdXJzZSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlRyYW5xdWlsaXR5IGNhbid0IGJlIGdyYXNwZWQgZXhjZXB0IGJ5IHRob3NlIHdobyBoYXZlIHJlYWNoZWQgYW4gdW53YXZlcmluZyBhZCBmaXJtIHBvd2VyIG9mIGp1ZGdlbWVudCZtZGFzaDt0aGUgcmVzdCBjb25zdGFudGx5IGZhbGwgYW5kIHJpc2UgaW4gdGhlaXIgZGVjaXNpb25zLCB3YXZlcmluZyBpbiBhIHN0YXRlIG9mIGFsdGVybmF0ZWx5IHJlamVjdGluZyBhbmQgYWNjZXB0aW5nIHRoaW5ncy4gV2hhdCBpcyB0aGUgY2F1c2Ugb2YgdGhpcyBiYWNrIGFuZCBmb3J0aD8gSXQncyBiZWNhdXNlIG5vdGhpbmcgaXMgY2xlYXIgYW5kIHRoZXkgcmVseSBvbiB0aGUgbW9zdCB1bmNlcnRhaW4gZ3VpZGUmbWRhc2g7Y29tbW9uIG9waW5pb24uIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk1vcmFsIExldHRlcnMsIDk1LjU3Yi01OGEiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+SW4gU2VuZWNhJ3MgZXNzYXkgb24gdHJhbnF1aWxpdHksIGhlIHVzZWQgdGhlIEdyZWVrIHdvcmQgPGkgbGFuZz3igJ1lbOKAnT5laXRoeW1pYTwvaT4sIHdoaWNoIGhlIGRlZmluZXMgYXMgPHE+YmVsaWV2aW5nIGluIHlvdXJzZWxmIGFuZCB0cnVzdGluZyB0aGF0IHlvdSBhcmUgb24gdGhlIHJpZ2h0IHBhdGgsIGFuZCBub3QgYmVpbmcgaW4gZG91YnQgYnkgZm9sbG93aW5nIHRoZSBteXJpYWQgZm9vdHBhdGhzIG9mIHRob3NlIHdhbmRlcmluZyBpbiBldmVyeSBkaXJlY3Rpb24uPC9xPiBJdCBpcyB0aGlzIHN0YXRlIG9mIG1pbmQsIGhlIHNheXMsIHRoYXQgcHJvZHVjZXMgdHJhbnF1aWxpdHkuPC9wPjxwPkNsYXJpdHkgb2YgdmlzaW9uIGFsbG93cyB1cyB0byBoYXZlIHRoaXMgYmVsaWVmLiBUaGF0J3Mgbm90IHRvIHNheSB3ZSdyZSBhbHdheXMgZ29pbmcgdG8gYmUgMTAwIHBlcmNlbnQgY2VydGFpbiBvZiBldmVyeXRoaW5nLCBvciB0aGF0IHdlIGV2ZW4gc2hvdWxkIGJlLiBSYXRoZXIsIGl0J3MgdGhhdCB3ZSBjYW4gcmVzdCBhc3N1cmVkIHdlJ3JlIGhlYWRpbmcgZ2VuZXJhbGx5IGluIHRoZSByaWdodCBkaXJlY3Rpb24mbWRhc2g7dGhhdCB3ZSBkb24ndCBuZWVkIHRvIGNvbnN0YW50bHkgY29tcGFyZSBvdXJzZWx2ZXMgd2l0aCBvdGhlciBwZW9wbGUgb3IgY2hhbmdlIG91ciBtaW5kIGV2ZXJ5IHRocmVlIHNlY29uZHMgYmFzZWQgb24gbmV3IGluZm9ybWF0aW9uLjwvcD48cD5JbnN0ZWFkLCB0cmFucXVpbGl0eSBhbmQgcGVhY2UgYXJlIGZvdW5kIGluIGlkZW50aWZ5aW5nIDxlbT5vdXI8L2VtPiBwYXRoIGFuZCBpbiBzdGlja2luZyB0byBpdDogc3RheWluZyB0aGUgY291cnNlJm1kYXNoO21ha2luZyBhZGp1c3RtZW50cyBoZXJlIGFuZCB0aGVyZSwgbmF0dXJhbGx5Jm1kYXNoO2J1dCBpZ25vcmluZyB0aGUgZGlzdHJhY3Rpbmcgc2lyZW5zIHdobyBiZWNrb24gdXMgdG8gdHVybiB0b3dhcmQgdGhlIHJvY2tzLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKYW51YXJ5IDE2IiwNCiAgICAidG9waWMiOiAiTmV2ZXIgRG8gQW55dGhpbmcgT3V0IE9mIEhhYml0IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiU28gaW4gdGhlIG1ham9yaXR5IG9mIG90aGVyIHRoaW5ncywgd2UgYWRkcmVzcyBjaXJjdW1zdGFuY2VzIG5vdCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHJpZ2h0IGFzc3VtcHRpb25zLCBidXQgbW9zdGx5IGJ5IGZvbGxvd2luZyB3cmV0Y2hlZCBoYWJpdC4gU2luY2UgYWxsIHRoYXQgSSd2ZSBzYWlkIGlzIHRoZSBjYXNlLCB0aGUgcGVyc29uIGluIHRyYWluaW5nIG11c3Qgc2VlayB0byByaXNlIGFib3ZlLCBzbyBhcyB0byBzdG9wIHNlZWtpbmcgb3V0IHBsZWFzdXJlIGFuZCBzdGVlcmluZyBhd2F5IGZyb20gcGFpbjsgdG8gc3RvcCBjbGluZ2luZyB0byBsaXZpbmcgYW5kIGFiaG9ycmluZyBkZWF0aDsgYW5kIGluIHRoZSBjYXNlIG9mIHByb3BlcnR5IGFuZCBtb25leSwgdG8gc3RvcCB2YWx1aW5nIHJlY2VpdmluZyBvdmVyIGdpdmluZy4iLA0KICAgICAgICAiYXV0aG9yIjogIk11c29uaXVzIFJ1ZnVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJMZWN0dXJlcywgNi4yNS41LTExIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkEgd29ya2VyIGlzIGFza2VkOiA8cT5XaHkgZGlkIHlvdSBkbyBpdCB0aGlzIHdheT88L3E+IFRoZSBhbnN3ZXIsIDxxPkJlY2F1c2UgdGhhdCdzIHRoZSB3YXkgd2UndmUgYWx3YXlzIGRvbmUgdGhpbmdzLjwvcT4gVGhlIGFuc3dlciBmcnVzdHJhdGVzIGV2ZXJ5IGdvb2QgYm9zcyBhbmQgc2V0cyB0aGUgbW91dGggb2YgZXZlcnkgZW50cmVwcmVuZXVyIHdhdGVyaW5nLiBUaGUgd29ya2VyIGhhcyBzdG9wcGVkIHRoaW5raW5nIGFuZCBpcyBtaW5kbGVzc2x5IG9wZXJhdGluZyBvdXQgb2YgaGFiaXQuIFRoZSBidXNpbmVzcyBpcyByaXBlIGZvciBkaXNydXB0aW9uIGJ5IGEgY29tcGV0aXRvciwgYW5kIHRoZSB3b3JrZXIgd2lsbCBwcm9iYWJseSBnZXQgZmlyZWQgYnkgYW55IHRoaW5raW5nIGJvc3MuPC9wPjxwPldlIHNob3VsZCBhcHBseSB0aGUgc2FtZSBydXRobGVzc25lc3MgdG8gb3VyIG93biBoYWJpdHMuIEluIGZhY3QsIHdlIGFyZSBzdHVkeWluZyBwaGlsb3NvcGh5IHByZWNpc2VseSB0byBicmVhayBvdXJzZWx2ZXMgb2Ygcm90ZSBiZWhhdmlvci4gRmluZCB3aGF0IHlvdSBkbyBvdXQgb2Ygcm90ZSBtZW1vcnkgb3Igcm91dGluZS4gQXNrIHlvdXJzZWxmOiA8aT5JcyB0aGlzIHJlYWxseSB0aGUgYmVzdCB3YXkgdG8gZG8gaXQ/PC9pPiBLbm93IHdoeSB5b3UgZG8gd2hhdCB5b3UgZG8gJm5kYXNoIGRvIGl0IGZvciB0aGUgcmlnaHQgcmVhc29ucy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAxNyIsDQogICAgInRvcGljIjogIlJlYm9vdCBUaGUgUmVhbCBXb3JrIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiSSBhbSB5b3VyIHRlYWNoZXIgYW5kIHlvdSBhcmUgbGVhcm5pbmcgaW4gbXkgc2Nob29sLiAgTXkgYWltIGlzIHRvIGJyaW5nIHlvdSB0byBjb21wbGV0aW9uLCB1bmhpbmRlcmVkLCBmcmVlIGZyb20gY29tcHVsc2l2ZSBiZWhhdmlvciwgdW5yZXN0cmFpbmVkLCB3aXRob3V0IHNoYW1lLCBmcmVlLCBmbG91cmlzaGluZywgYW5kIGhhcHB5LCBsb29raW5nIHRvIEdvZCBpbiB0aGluZ3MgZ3JlYXQgYW5kIHNtYWxsJm1kYXNoO3lvdXIgYWltIGlzIHRvIGxlYXJuIGFuZCBkaWxpZ2VudGx5IHByYWN0aWNlIGFsbCB0aGVzZSB0aGluZ3MuICBXaHkgdGhlbiBkb24ndCB5b3UgY29tcGxldGUgdGhlIHdvcmssIGlmIHlvdSBoYXZlIHRoZSByaWdodCBhaW0gYW5kIEkgaGF2ZSBib3RoIHRoZSByaWdodCBhaW0gYW5kIHJpZ2h0IHByZXBhcmF0aW9uPyAgV2hhdCBpcyBtaXNzaW5nPyAuIC4gLiBUaGUgd29yayBpcyBxdWl0ZSBmZWFzaWJsZSwgYW5kIGlzIHRoZSBvbmx5IHRoaW5nIGluIG91ciBwb3dlciAuIC4gLiBMZXQgZ28gb2YgdGhlIHBhc3QuICBXZSBtdXN0IG9ubHkgYmVnaW4uICBCZWxpZXZlIG1lIGFuZCB5b3Ugd2lsbCBzZWUuIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDIuMTkuMjktMzQiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+RG8geW91IHJlbWVtYmVyLCBpbiBzY2hvb2wsIG9yIGVhcmx5IGluIHlvdXIgbGlmZSwgYmVpbmcgYWZyYWlkIHRvIHRyeSBzb21ldGhpbmcgYmVjYXVzZSB5b3UgZmVhcmVkIHlvdSBtaWdodCBmYWlsIGF0IGl0PyAgTW9zdCB0ZWVuYWdlcnMgY2hvb3NlIHRvIGZvb2wgYXJvdW5kIHJhdGhlciB0aGFuIGV4ZXJ0IHRoZW1zZWx2ZXMuICBIYWxmaGVhcnRlZCwgbGF6eSBlZmZvcnQgZ2l2ZXMgdGhlbSBhIHJlYWR5LW1hZGUgZXhjdXNlOiA8cT5JdCBkb2Vzbid0IG1hdHRlci4gSSB3YXNuJ3QgZXZlbiB0cnlpbmcuPC9xPjwvcD48cD5BcyB3ZSBnZXQgb2xkZXIsIGZhaWx1cmUgaXMgbm90IHNvIGluY29uc2VxdWVudGlhbCBhbnltb3JlLiAgV2hhdCdzIGF0IHN0YWtlIGlzIG5vdCBzb21lIGFyYml0cmFyeSBncmFkZSBvciBpbnRyYW11cmFsIHNwb3J0cyB0cm9waHksIGJ1dCB0aGUgcXVhbGl0eSBvZiB5b3VyIGxpZmUgYW5kIHlvdXIgYWJpbGl0eSB0byBkZWFsIHdpdGggdGhlIHdvcmxkIGFyb3VuZCB5b3UuPC9wPjxwPkRvbid0IGxldCB0aGF0IGludGltaWRhdGUgeW91LCB0aG91Z2guICBZb3UgaGF2ZSB0aGUgYmVzdCB0ZWFjaGVycyBpbiB0aGUgd29ybGQ6IHRoZSB3aXNlc3QgcGhpbG9zb3BoZXJzIHdobyBldmVyIGxpdmVkLiAgQW5kIG5vdCBvbmx5IGFyZSB5b3UgY2FwYWJsZSwgdGhlIHByb2Zlc3NvciBpcyBhc2tpbmcgZm9yIHNvbWV0aGluZyB2ZXJ5IHNpbXBsZToganVzdCBiZWdpbiB0aGUgd29yay4gIFRoZSByZXN0IGZvbGxvd3MuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkphbnVhcnkgMTgiLA0KICAgICJ0b3BpYyI6ICJTZWUgVGhlIFdvcmxkIExpa2UgQSBQb2V0IEFuZCBBbiBBcnRpc3QiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJQYXNzIHRocm91Z2ggdGhpcyBicmllZiBwYXRjaCBvZiB0aW1lIGluIGhhcm1vbnkgd2l0aCBuYXR1cmUsIGFuZCBjb21lIHRvIHlvdXIgZmluYWwgcmVzdGluZyBwbGFjZSBncmFjZWZ1bGx5LCBqdXN0IGFzIGEgcmlwZW5lZCBvbGl2ZSBtaWdodCBkcm9wLCBwcmFpc2luZyB0aGUgZWFydGggdGhhdCBub3VyaXNoZWQgaXQgYW5kIGdyYXRlZnVsIHRvIHRoZSB0cmVlIHRoYXQgZ2F2ZSBpdCBncm93dGguIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA0LjQ4LjIiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlcmUgYXJlIHNvbWUgc3R1bm5pbmdseSBiZWF1dGlmdWwgdHVybnMgb2YgcGhyYXNlIGluIE1hcmN1cydzIDxlbT5NZWRpdGF0aW9uczwvZW0+Jm1kYXNoO2Egc3VycHJpc2luZyB0cmVhdCBjb25zaWRlcmluZyB0aGUgaW50ZW5kZWQgYXVkaWVuY2UgKGp1c3QgaGltc2VsZikuICBJbiBvbmUgcGFzc2FnZSwgaGUgcHJhaXNlcyB0aGUgPHE+Y2hhcm0gYW5kIGFsbHVyZTwvcT4gb2YgbmF0dXJlcycgcHJvY2VzcywgdGhlIDxxPnN0YWxrcyBvZiByaXBlIGdyYWluIGJlbmRpbmcgbG93LCB0aGUgZnJvd25pbmcgYnJvdyBvZiB0aGUgbGlvbiwgdGhlIGZvYW0gZHJpcHBpbmcgZnJvbSB0aGUgYm9hcidzIG1vdXRoLjwvcT4gIFdlIHNob3VsZCB0aGFuayBwcml2YXRlIHJoZXRvcmljIHRlYWNoZXIgTWFyY3VzIENvcm5lbGl1cyBGcm9udG8gZm9yIHRoZSBpbWFnZXJ5IGluIHRoZXNlIHZpdmlkIHBhc3NhZ2VzLiAgRnJvbnRvLCB3aWRlbHkgY29uc2lkZXJlZCB0byB0aGUgUm9tZSdzIGJlc3Qgb3JhdG9yIGJlc2lkZXMgQ2ljZXJvLCB3YXMgY2hvc2VuIGJ5IE1hcmN1cydzIGFkb3B0ZWQgZmF0aGVyIHRvIHRlYWNoIE1hcmN1cyB0byB0aGluayBhbmQgd3JpdGUgYW5kIHNwZWFrLjwvcD48cD5Nb3JlIHRoYW4ganVzdCBwcmV0dHkgcGhyYXNlcywgdGhleSBnYXZlIGhpbSZtZGFzaDthbmQgbm93IHVzJm1kYXNoO2EgcG93ZXJmdWwgcGVyc3BlY3RpdmUgb24gb3JkaW5hcnkgb3Igc2VlbWluZ2x5IDxpPnVuPC9pPmJlYXV0aWZ1bCBldmVudHMuICBJdCB0YWtlcyBhbiBhcnRpc3QncyBleWUgdG8gc2VlIHRoYXQgdGhlIGVuZCBvZiBsaWZlIGlzIG5vdCB1bmxpa2UgYSByaXBlIGZydWl0IGZhbGxpbmcgZnJvbSBpdHMgdHJlZS4gIEl0IHRha2VzIGEgcG9ldCB0byBub3RpY2UgdGhlIHdheSA8cT5iYWtpbmcgYnJlYWQgc3BsaXRzIGluIHBsYWNlcyBhbmQgdGhvc2UgY3JhY2tzLCB3aGlsZSBub3QgaW50ZW5kZWQgaW4gdGhlIGJha2VyJ3MgYXJ0LCBjYXRjaCBvdXIgZXllIGFuZCBzZXJ2ZSB0byBzdGlyIG91ciBhcHBldGl0ZTwvcT4gYW5kIGZpbmQgYSBtZXRhcGhvciBpbiB0aGVtLjwvcD48cD5UaGVyZSBpcyBjbGFyaXR5IChhbmQgam95KSBpbiBzZWVpbmcgd2hhdCBvdGhlcnMgY2FuJ3Qgc2VlLCBpbiBmaW5kaW5nIGdyYWNlIGFuZCBoYXJtb255IGluIHBsYWNlcyBvdGhlcnMgb3Zlcmxvb2suICBJc24ndCB0aGF0IGZhciBiZXR0ZXIgdGhhbiBzZWVpbmcgdGhlIHdvcmxkIGFzIHNvbWUgZGFyayBwbGFjZT88L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAxOSIsDQogICAgInRvcGljIjogIldoZXJldmVyIFlvdSBHbywgVGhlcmUgWW91ciBDaG9pY2UgSXMiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJSZW1lbWJlciB0byBjb25kdWN0IHlvdXJzZWxmIGluIGxpZmUgYXMgaWYgYXQgYSBiYW5xdWV0LiAgQXMgc29tZXRoaW5nIGJlaW5nIHBhc3NlZCBhcm91bmQgY29tZXMgdG8geW91LCByZWFjaCBvdXQgeW91ciBoYW5kIGFuZCB0YWtlIGEgbW9kZXJhdGUgaGVscGluZy4gIERvZXMgaXQgcGFzcyB5b3UgYnk/ICBEb24ndCBzdG9wIGl0LiAgSXQgaGFzbid0IHlldCBjb21lPyAgRG9uJ3QgYnVybiBpbiBkZXNpcmUgZm9yIGl0LCBidXQgd2FpdCB1bnRpbCBpdCBhcnJpdmVzIGluIGZyb250IG9mIHlvdS4gIEFjdCB0aGlzIHdheSB3aXRoIGNoaWxkcmVuLCBhIHNwb3VzZSwgdG93YXJkIHBvc2l0aW9uLCB3aXRoIHdlYWx0aCZtZGFzaDtvbmUgZGF5IGl0IHdpbGwgbWFrZSB5b3Ugd29ydGh5IG9mIGEgYmFucXVldCB3aXRoIHRoZSBnb2RzLiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCAyLjYuMjUiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIG5leHQgdGltZSB5b3Ugc2VlIHNvbWV0aGluZyB5b3Ugd2FudCwgcmVtZW1iZXIgRXBpY3RldHVzJ3MgbWV0YXBob3Igb2YgbGlmZSdzIGJhbnF1ZXQuICBBcyB5b3UgZmluZCB5b3Vyc2VsZiBnZXR0aW5nIGV4Y2l0ZWQsIHJlYWR5IHRvIGRvIGFueXRoaW5nIGFuZCBldmVyeXRoaW5nIHRvIGdldCBpdCZtZGFzaDt0aGUgZXF1aXZhbGVudCBvZiByZWFjaGluZyBhY3Jvc3MgdGhlIHRhYmxlIGFuZCBncmFiYmluZyBhIGRpc2ggb3V0IG9mIHNvbWVvbmUncyBoYW5kcyZtZGFzaDtqdXN0IHJlbWluZCB5b3Vyc2VsZjogdGhhdCdzIGJhZCBtYW5uZXJzIGFuZCB1bm5lY2Vzc2FyeS4gIFRoZW4gd2FpdCBwYXRpZW50bHkgZm9yIHlvdXIgdHVybi48L3A+PHA+VGhpcyBtZXRhcGhvciBoYXMgb3RoZXIgaW50ZXJwcmV0YXRpb25zIHRvby4gIEZvciBpbnN0YW5jZSwgd2UgbWlnaHQgcmVmbGVjdCB0aGF0IHdlJ3JlIGx1Y2t5IHRvIGhhdmUgYmVlbiBpbnZpdGVkIHRvIHN1Y2ggYSB3b25kZXJmdWwgZmVhc3QgKGdyYXRpdHVkZSkuICBPciB0aGF0IHdlIHNob3VsZCB0YWtlIG91ciB0aW1lIGFuZCBzYXZvciB0aGUgdGFzdGUgb2Ygd2hhdCdzIG9uIG9mZmVyIChlbmpveWluZyB0aGUgcHJlc2VudCBtb21lbnQpIGJ1dCB0aGF0IHRvIHN0dWZmIG91cnNlbHZlcyBzaWNrIHdpdGggZm9vZCBhbmQgZHJpbmsgc2VydmVzIG5vIG9uZSwgbGVhc3Qgb2YgYWxsIG91ciBoZWFsdGggKGdsdXR0b255IGlzIGEgZGVhZGx5IHNpbiwgYWZ0ZXIgYWxsKS4gIFRoYXQgYXQgdGhlIGVuZCBvZiB0aGUgbWVhbCwgaXQncyBydWRlIG5vdCB0byBoZWxwIHRoZSBob3N0IGNsZWFuIHVwIGFuZCBkbyB0aGUgZGlzaGVzIChzZWxmbGVzc25lc3MpLiAgQW5kIGZpbmFsbHksIHRoYXQgbmV4dCB0aW1lLCBpdCdzIG91ciB0dXJuIHRvIGhvc3QgYW5kIHRyZWF0IG90aGVycyBqdXN0IGFzIHdlIGhhZCBiZWVuIHRyZWF0ZWQgKGNoYXJpdHkpLjwvcD48cD5FbmpveSB0aGUgbWVhbCE8L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAyMCIsDQogICAgInRvcGljIjogIlJlaWduaXRlIFlvdXIgVGhvdWdodHMiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJZb3VyIHByaW5jaXBsZXMgY2FuJ3QgYmUgZXh0aW5ndWlzaGVkIHVubGVzcyB5b3Ugc251ZmYgb3V0IHRoZSB0aG91Z2h0cyB0aGF0IGZlZWQgdGhlbSwgZm9yIGl0J3MgY29udGludWFsbHkgaW4geW91ciBwb3dlciB0byByZWlnbml0ZSBuZXcgb25lcyAuIC4gLiBJdCdzIHBvc3NpYmxlIHRvIHN0YXJ0IGxpdmluZyBhZ2FpbiEgU2VlIHRoaW5ncyBhbmV3IGFzIHlvdSBvbmNlIGRpZCZtZGFzaDt0aGF0IGlzIGhvdyB0byByZXN0YXJ0IGxpZmUhIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA3LjIiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+SGF2ZSB5b3UgaGFkIGEgYmFkIGNvdXBsZSBvZiB3ZWVrcz8gSGF2ZSB5b3UgYmVlbiBkcmlmdGluZyBhd2F5IGZyb20gdGhlIHByaW5jaXBsZXMgYW5kIGJlbGllZnMgdGhhdCB5b3UgaG9sZCBkZWFyPyAgSXQncyBwZXJmZWN0bHkgZmluZS4gIEl0IGhhcHBlbnMgdG8gYWxsIG9mIHVzLjwvcD48cD5JbiBmYWN0LCBpdCBwcm9iYWJseSBoYXBwZW5lZCB0byBNYXJjdXMmbWRhc2g7dGhhdCBtYXkgYmUgd2h5IGhlIHNjcmliYmxlZCB0aGlzIG5vdGUgdG8gaGltc2VsZi4gUGVyaGFwcyBoZSdkIGJlZW4gZGVhbGluZyB3aXRoIGRpZmZpY3VsdCBzZW5hdG9ycyBvciBoYXZpbmcgZGlmZmljdWx0aWVzIHdpdGggaGlzIHRyb3VibGVkIHNvbi4gUGVyaGFwcyBpbiB0aGVzZSBzY2VuYXJpb3MgaGUnZCBsb3N0IGhpcyB0ZW1wZXIsIGJlY2FtZSBkZXByZXNzZWQsIG9yIHN0b3BwZWQgY2hlY2tpbmcgaW4gd2l0aCBoaW1zZWxmLiBXaG8gd291bGRuJ3Q/PC9wPjxwPkJ1dCB0aGUgcmVtaW5kZXIgaGVyZSBpcyB0aGF0IG5vIG1hdHRlciB3aGF0IGhhcHBlbnMsIG5vIG1hdHRlciBob3cgZGlzYXBwb2ludGluZyBvdXIgYmVoYXZpb3IgaGFzIGJlZW4gaW4gdGhlIHBhc3QsIHRoZSBwcmluY2lwbGVzIHRoZW1zZWx2ZXMgcmVtYWluIHVuY2hhbmdlZC4gIFdlIGNhbiByZXR1cm4gYW5kIGVtYnJhY2UgdGhlbSBhdCBhbnkgbW9tZW50LiAgV2hhdCBoYXBwZW5lZCB5ZXN0ZXJkYXkmbWRhc2g7d2hhdCBoYXBwZW5lZCBmaXZlIG1pbnV0ZXMgYWdvJm1kYXNoO2lzIHRoZSBwYXN0LiAgV2UgY2FuIHJlaWduaXRlIGFuZCByZXN0YXJ0IHdoZW5ldmVyIHdlIGxpa2UuPC9wPjxwPldoeSBub3QgZG8gaXQgcmlnaHQgbm93PzwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKYW51YXJ5IDIxIiwNCiAgICAidG9waWMiOiAiQSBNb3JuaW5nIFJpdHVhbCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkFzayB5b3Vyc2VsZiB0aGUgZm9sbG93aW5nIGZpcnN0IHRoaW5nIGluIHRoZSBtb3JuaW5nOjx1bD48bGk+V2hhdCBhbSBJIGxhY2tpbmcgaW4gYXR0YWluaW5nIGZyZWVkb20gZnJvbSBwYXNzaW9uPzwvbGk+PGxpPldoYXQgZm9yIHRyYW5xdWlsaXR5PzwvbGk+PGxpPldoYXQgYW0gST8gQSBtZXJlIGJvZHksIGVzdGF0ZS1ob2xkZXIsIG9yIHJlcHV0YXRpb24/IE5vbmUgb2YgdGhlc2UgdGhpbmdzLjwvbGk+PGxpPldoYXQsIHRoZW4/IEEgcmF0aW9uYWwgYmVpbmcuPC9saT4gPGxpPldoYXQgdGhlbiBpcyBkZW1hbmRlZCBvZiBtZT8gTWVkaXRhdGUgb24geW91ciBhY3Rpb25zLjwvbGk+PGxpPkhvdyBkaWQgSSBzdGVlciBhd2F5IGZyb20gc2VyZW5pdHk/PC9saT48bGk+V2hhdCBkaWQgSSBkbyB0aGF0IHdhcyB1bmZyaWVuZGx5LCB1bnNvY2lhbCwgb3IgdW5jYXJpbmc/PC9saT48bGk+V2hhdCBkaWQgSSBmYWlsIHRvIGRvIGluIGFsbCB0aGVzZSB0aGluZ3M/PC9saT48L3VsPiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCA0LjYuMzQtMzUiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+TWFueSBzdWNjZXNzZnVsIHBlb3BsZSBoYXZlIGEgbW9ybmluZyByaXR1YWwuICBGb3Igc29tZSwgaXQncyBtZWRpdGF0aW9uLiAgRm9yIG90aGVycywgaXQncyBleGVyY2lzZS4gRm9yIG1hbnksIGl0J3Mgam91cm5hbGluZyZtZGFzaDtqdXN0IGEgZmV3IHBhZ2VzIHdoZXJlIHRoZXkgd3JpdGUgZG93biB0aGVpciB0aG91Z2h0cywgZmVhcnMsIGhvcGVzLiAgSW4gdGhlc2UgY2FzZXMsIHRoZSBwb2ludCBpcyBub3Qgc28gbXVjaCB0aGUgYWN0aXZpdHkgaXRzZWxmIGFzIGl0IGlzIHRoZSByaXR1YWxpemVkIHJlZmxlY3Rpb24uICBUaGUgaWRlYSBpcyB0byB0YWtlIHNvbWUgdGltZSB0byBsb29rIGlud2FyZCBhbmQgZXhhbWluZS48L3A+PHA+VGFraW5nIHRoYXQgdGltZSBpcyB3aGF0IFN0b2ljcyBhZHZvY2F0ZWQgbW9yZSB0aGFuIGFsbW9zdCBhbnl0aGluZyBlbHNlLiBXZSBkb24ndCBrbm93IHdoZXRoZXIgTWFyY3VzIEF1cmVsaXVzIHdyb3RlIGhpcyA8ZW0+TWVkaXRhdGlvbnM8L2VtPiBpbiB0aGUgbW9ybmluZyBvciBhdCBuaWdodCwgYnV0IHdlIGtub3cgaGUgY2FydmVkIG91dCBtb21lbnRzIG9mIHF1aWV0IGFsb25lIHRpbWUmbWRhc2g7YW5kIHRoYXQgaGUgd3JvdGUgZm9yIGhpbXNlbGYsIG5vdCBmb3IgYW55b25lIGVsc2UuICBJZiB5b3UncmUgbG9va2luZyBmb3IgYSBwbGFjZSB0byBzdGFydCB5b3VyIG93biByaXR1YWwsIHlvdSBjb3VsZCBkbyB3b3JzZSB0aGFuIE1hcmN1cydzIGV4YW1wbGUgYW5kIEVwaWN0ZXR1cydzIGNoZWNrbGlzdC48L3A+PHA+RXZlcnkgZGF5LCBzdGFydGluZyB0b2RheSwgYXNrIHlvdXJzZWxmIHRoZXNlIHNhbWUgdG91Z2ggcXVlc3Rpb25zLiAgTGV0IHBoaWxvc29waHkgYW5kIGhhcmQgd29yayBndWlkZSB5b3UgdG8gYmV0dGVyIGFuc3dlcnMsIG9uZSBtb3JuaW5nIGF0IGEgdGltZSwgb3ZlciB0aGUgY291cnNlIG9mIGEgbGlmZS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAyMiIsDQogICAgInRvcGljIjogIlRoZSBEYXkgSW4gUmV2aWV3IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiSSB3aWxsIGtlZXAgY29uc3RhbnQgd2F0Y2ggb3ZlciBteXNlbGYgYW5kJm1kYXNoO21vc3QgdXNlZnVsbHkmbWRhc2g7d2lsbCBwdXQgZWFjaCBkYXkgdXAgZm9yIHJldmlldy4gIEZvciB0aGlzIGlzIHdoYXQgbWFrZXMgdXMgZXZpbCZtZGFzaDt0aGF0IG5vbmUgb2YgdXMgbG9va3MgYmFjayB1cG9uIG91ciBvd24gbGl2ZXMuICBXZSByZWZsZWN0IHVwb24gb25seSB0aGF0IHdoaWNoIHdlIGFyZSBhYm91dCB0byBkby4gIEFuZCB5ZXQgb3VyIHBsYW5zIGZvciB0aGUgZnV0dXJlIGRlc2NlbmQgZnJvbSB0aGUgcGFzdC4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiTW9yYWwgTGV0dGVycywgODMuMiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5JbiBhIGxldHRlciB0byBoaXMgb2xkZXIgYnJvdGhlciBOb3ZhdHVzLCBTZW5lY2EgZGVzY3JpYmVzIGEgYmVuZWZpY2lhbCBleGVyY2lzZSBoZSBib3Jyb3dlZCBmcm9tIGFub3RoZXIgcHJvbWluZW50IHBoaWxvc29waGVyLiAgQXQgdGhlIGVuZCBvZiBlYWNoIGRheSBoZSB3b3VsZCBhc2sgaGltc2VsZiB2YXJpYXRpb25zIG9mIHRoZSBmb2xsb3dpbmcgcXVlc3Rpb25zOiA8ZW0+V2hhdCBiYWQgaGFiaXQgZGlkIEkgY3VyYiB0b2RheT8gIEhvdyBhbSBJIGJldHRlcj8gIFdlcmUgbXkgYWN0aW9ucyBqdXN0PyAgSG93IGNhbiBJIGltcHJvdmU/PC9lbT48L3A+PHA+QXQgdGhlIGJlZ2lubmluZyBvciBlbmQgb2YgZWFjaCBkYXksIHRoZSBTdG9pYyBzaXRzIGRvd24gd2l0aCBoaXMgam91cm5hbCBhbmQgcmV2aWV3czogd2hhdCBoZSBkaWQsIHdoYXQgaGUgdGhvdWdodCwgd2hhdCBjb3VsZCBiZSBpbXByb3ZlZC4gIEl0J3MgZm9yIHRoaXMgcmVhc29uIHRoYXQgTWFyY3VzIEF1cmVsaXVzJ3MgPGVtPk1lZGl0YXRpb25zPC9lbT4gaXMgYSBzb21ld2hhdCBpbnNjcnV0YWJsZSBib29rJm1kYXNoO2l0IHdhcyBmb3IgcGVyc29uYWwgY2xhcml0eSBhbmQgbm90IHB1YmxpYyBiZW5lZml0LiAgV3JpdGluZyBkb3duIFN0b2ljIGV4ZXJjaXNlcyB3YXMgYW5kIGlzIGFsc28gYSBmb3JtIG9mIHByYWN0aWNpbmcgdGhlbSwganVzdCBhcyByZXBlYXRpbmcgYSBwcmF5ZXIgb3IgaHltbiBtaWdodCBiZS48L3A+PHA+S2VlcCB5b3VyIG93biBqb3VybmFsLCB3aGV0aGVyIGl0J3Mgc2F2ZWQgb24gYSBjb21wdXRlciBvciBpbiBhIGxpdHRsZSBub3RlYm9vay4gIFRha2UgdGltZSB0byBjb25zY2lvdXNseSByZWNhbGwgdGhlIGV2ZW50cyBvZiB0aGUgcHJldmlvdXMgZGF5LiAgQmUgdW5mbGluY2hpbmcgaW4geW91ciBhc3Nlc3NtZW50cy4gIE5vdGljZSB3aGF0IGNvbnRyaWJ1dGVkIHRvIHlvdXIgaGFwcGluZXNzIGFuZCB3aGF0IGRldHJhY3RlZCBmcm9tIGl0LiAgV3JpdGUgZG93biB3aGF0IHlvdSdkIGxpa2UgdG8gd29yayBvbiBvciBxdW90ZXMgdGhhdCB5b3UgbGlrZS4gIEJ5IG1ha2luZyB0aGUgZWZmb3J0IHRvIHJlY29yZCBzdWNoIHRob3VnaHRzLCB5b3UncmUgbGVzcyBsaWtlbHkgdG8gZm9yZ2V0IHRoZW0uICBBbiBhZGRlZCBib251czogeW91J2xsIGhhdmUgYSBydW5uaW5nIHRhbGx5IHRvIHRyYWNrIHlvdXIgcHJvZ3Jlc3MgdG9vLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKYW51YXJ5IDIzIiwNCiAgICAidG9waWMiOiAiVGhlIFRydXRoIEFib3V0IE1vbmV5IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiTGV0J3MgcGFzcyBvdmVyIHRvIHRoZSByZWFsbHkgcmljaCZtZGFzaDtob3cgb2Z0ZW4gdGhlIG9jY2FzaW9ucyB0aGV5IGxvb2sganVzdCBsaWtlIHRoZSBwb29yISAgV2hlbiB0aGV5IHRyYXZlbCBhYnJvYWQgdGhleSBtdXN0IHJlc3RyaWN0IHRoZWlyIGJhZ2dhZ2UsIGFuZCB3aGVuIGhhc3RlIGlzIG5lY2Vzc2FyeSwgdGhleSBkaXNtaXNzIHRoZWlyIGVudG91cmFnZS4gIEFuZCB0aG9zZSB3aG8gYXJlIGluIHRoZSBhcm15LCBob3cgZmV3IG9mIHRoZWlyIHBvc3Npb25zIHRoZXkgZ2V0IHRvIGtlZXAgLiAuIC4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiT24gQ29uc29sYXRpb24gVG8gSGVsdmlhLCAxMi4xLmItMiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGUgYXV0aG9yIEYuIFNjb3R0IEZpdHpnZXJhbGQsIHdobyBvZnRlbiBnbGFtb3JpemVkIHRoZSBsaWZlc3R5bGVzIG9mIHRoZSByaWNoIGFuZCBmYW1vdXMgaW4gYm9va3MgbGlrZSA8aT5UaGUgR3JlYXQgR2F0c2J5PC9pPiwgb3BlbnMgb25lIG9mIGhpcyBzaG9ydCBzdG9yaWVzIHdpdGggdGhlIG5vdyBjbGFzc2ljIGxpbmVzOiA8cT5MZXQgbWUgdGVsbCB5b3UgYWJvdXQgdGhlIHZlcnkgcmljaC4gIFRoZXkgYXJlIGRpZmZlcmVudCBmcm9tIHlvdSBhbmQgbWUuPC9xPiAgQSBmZXcgeWVhcnMgYWZ0ZXIgdGhpcyBzdG9yeSB3YXMgcHVibGlzaGVkLCBoaXMgZnJpZW5kIEVybmVzdCBIZW1pbmd3YXkgdGVhc2VkIEZpdHpnZXJhbGQgYnkgd3JpdGluZywgPHE+WWVzLCB0aGV5IGhhdmUgbW9yZSBtb25leS48L3E+PC9wPjxwPlRoYXQncyB3aGF0IFNlbmVjYSBpcyByZW1pbmRpbmcgdXMuICBBcyBzb21lb25lIHdobyB3YXMgb25lIG9mIHRoZSByaWNoZXN0IG1lbiBpbiBSb21lLCBoZSBrbmV3IGZpcnN0aGFuZCB0aGF0IG1vbmV5IG9ubHkgbWFyZ2luYWxseSBjaGFuZ2VzIGxpZmUuICBJdCBkb2Vzbid0IHNvbHZlIHRoZSBwcm9ibGVtcyB0aGF0IHBlb3BsZSB3aXRob3V0IGl0IHNlZW0gdG8gdGhpbmsgaXQgd2lsbC4gIEluIGZhY3QsIG5vIG1hdGVyaWFsIHBvc3Nlc3Npb24gd2lsbC4gIEV4dGVybmFsIHRoaW5ncyBjYW4ndCBmaXggaW50ZXJuYWwgaXNzdWVzLjwvcD48cD5XZSBjb25zdGFudGx5IGZvcmdldCB0aGlzJm1kYXNoO2FuZCBpdCBjYXVzZXMgdXMgc28gbXVjaCBjb25mdXNpb24gYW5kIHBhaW4uICBBcyBIZW1pbmd3YXkgd291bGQgbGF0ZXIgd3JpdGUgb2YgRml0emdlcmFsZCwgPHE+SGUgdGhvdWdodCBbdGhlIHJpY2hdIHdlcmUgYSBzcGVjaWFsIGdsYW1vcm91cyByYWNlIGFuZCB3aGVuIGhlIGZvdW5kIHRoZXkgd2VyZW4ndCwgaXQgd3JlY2tlZCBoaW0gYXMgbXVjaCBhcyBhbnkgb3RoZXIgdGhpbmcgdGhhdCB3cmVja2VkIGhpbS48L3E+ICBXaXRob3V0IGEgY2hhbmdlIHRoZSBzYW1lIHdpbGwgYmUgdHJ1ZSBmb3IgdXMuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkphbnVhcnkgMjQiLA0KICAgICJ0b3BpYyI6ICJQdXNoIEZvciBEZWVwIFVuZGVyc3RhbmRpbmciLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJGcm9tIFJ1c3RpY3VzIC4gLiAuIEkgbGVhcm5lZCB0byByZWFkIGNhcmVmdWxseSBhbmQgbm90IGJlIHNhdGlzZmllZCB3aXRoIGEgcm91Z2ggdW5kZXJzdGFuZGluZyBvZiB0aGUgd2hvbGUsIGFuZCBub3QgdG8gYWdyZWUgdG9vIHF1aWNrbHkgd2l0aCB0aG9zZSB3aG8gaGF2ZSBhIGxvdCB0byBzYXkgYWJvdXQgc29tZXRoaW5nLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgMS43LjMiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIGZpcnN0IGJvb2sgb2YgTWFyY3VzIEF1cmVsaXVzJ3MgPGVtPk1lZGl0YXRpb25zPC9lbT4gYmVnaW5zIHdpdGggYSBjYXRhbG9nIG9mIGdyYXRpdHVkZS4gIEhlIHRoYW5rcywgb25lIGJ5IG9uZSwgdGhlIGxlYWRpbmcgaW5mbHVlbmNlcyBpbiBoaXMgbGlmZS4gIE9uZSBvZiB0aGUgcGVvcGxlIGhlIHRoYW5rcyBpZiBRdWludHVzIEp1bml1cyBSdXN0aWN1cywgYSB0ZWFjaGVyIHdobyBkZXZlbG9wZWQgaW4gaGlzIHN0dWRlbnQgYSBsb3ZlIG9mIGRlZXAgY2xhcml0eSBhbmQgdW5kZXJzdGFuZGluZyZtZGFzaDthIGRlc2lyZSB0byBub3QganVzdCBzdG9wIGF0IHRoZSBzdXJmYWNlIHdoZW4gaXQgY29tZXMgdG8gbGVhcm5pbmcuPC9wPjxwPkl0IHdhcyBhbHNvIGZyb20gUnVzdGljdXMgdGhhdCBNYXJjdXMgd2FzIGludHJvZHVjZWQgdG8gRXBpY3RldHVzLiAgSW4gZmFjdCwgUnVzdGljdXMgbG9hbmVkIE1hcmN1cyBoaXMgcGVyc29uYWwgY29weSBvZiBFcGljdGV0dXMncyBsZWN0dXJlcy4gTWFyY3VzIGNsZWFybHkgd2Fzbid0IHNhdGlzZmllZCB3aXRoIGp1c3QgZ2V0dGluZyB0aGUgZ2lzdCBvZiB0aGVzZSBsZWN0dXJlcyBhbmQgZGlkbid0IHNpbXBseSBhY2NlcHQgdGhlbSBvbiBoaXMgdGVhY2hlcidzIHJlY29tbWVuZGF0aW9uLiAgUGF1bCBKb2huc29uIG9uY2Ugam9rZWQgdGhhdCBFZG11bmQgV2lsc29uIHJlYWQgYm9va3MgPHE+YXMgdGhvdWdoIHRoZSBhdXRob3Igd2FzIG9uIHRyaWFsIGZvciBoaXMgbGlmZS48L3E+ICBUaGF0J3MgaG93IE1hcmN1cyByZWFkIEVwaWN0ZXR1cyZtZGFzaDthbmQgd2hlbiB0aGUgbGVzc29ucyBwYXNzZWQgbXVzdGVyLCBoZSA8ZW0+YWJzb3JiZWQ8L2VtPiB0aGVtLiAgVGhleSBiZWNhbWUgcGFydCBvZiBoaXMgRE5BIGFzIGEgaHVtYW4gYmVpbmcuICBIZSBxdW90ZWQgdGhlbSBhdCBsZW5ndGggb3ZlciB0aGUgY291cnNlIG9mIGhpcyBsaWZlLCBmaW5kaW5nIHJlYWwgY2xhcml0eSBhbmQgc3RyZW5ndGggaW4gd29yZHMsIGV2ZW4gYW1pZCB0aGUgaW1tZW5zZSBsdXh1cnkgYW5kIHBvd2VyIGhlIHdvdWxkIGNvbWUgdG8gcG9zc2Vzcy48L3A+PHA+VGhhdCdzIHRoZSBraW5kIG9mIGRlZXAgcmVhZGluZyBhbmQgc3R1ZHkgd2UgbmVlZCB0byBjdWx0aXZhdGUgYXMgd2VsbCwgd2hpY2ggaXMgd2h5IHdlJ3JlIHJlYWRpbmcganVzdCBvbmUgcGFnZSBhIGRheSBpbnN0ZWFkIG9mIGEgY2hhcHRlciBhdCBhIHRpbWUuICBTbyB3ZSBjYW4gdGFrZSB0aGUgdGltZSB0byByZWFkIGF0dGVudGl2ZWx5IGFuZCBkZWVwbHkuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkphbnVhcnkgMjUiLA0KICAgICJ0b3BpYyI6ICJUaGUgT25seSBQcml6ZSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIldoYXQncyBsZWZ0IHRvIGJlIHByaXplZD8gVGhpcywgSSB0aGluayZtZGFzaDt0byBsaW1pdCBvdXIgYWN0aW9uIG9yIGluYWN0aW9uIHRvIG9ubHkgd2hhdCdzIGluIGtlZXBpbmcgd2l0aCB0aGUgbmVlZHMgb2Ygb3VyIG93biBwcmVwYXJhdGlvbiAuIC4gLiAgaXQncyB3aGF0IHRoZSBleGVydGlvbnMgb2YgZWR1Y2F0aW9uIGFuZCB0ZWFjaGluZyBhcmUgYWxsIGFib3V0Jm1kYXNoO2hlcmUgaXMgdGhlIHRoaW5nIHRvIGJlIHByaXplZCEgSWYgeW91IGhvbGQgdGhpcyBmaXJtbHksIHlvdSdsbCBzdG9wIHRyeWluZyB0byBnZXQgeW91cnNlbGYgYWxsIHRoZSBvdGhlciB0aGluZ3MgLiAuIC4gIElmIHlvdSBkb24ndCwgeW91IHdvbid0IGJlIGZyZWUsIHNlbGYtc3VmZmljaWVudCwgb3IgbGliZXJhdGVkIGZyb20gcGFzc2lvbiwgYnV0IG5lY2Vzc2FyaWx5IGZ1bGwgb2YgZW52eSwgamVhbG91c3ksIGFuZCBzdXNwaWNpb24gZm9yIGFueSB3aG8gaGF2ZSB0aGUgcG93ZXIgdG8gdGFrZSB0aGVtLCBhbmQgeW91J2xsIHBsb3QgYWdhaW5zdCB0aG9zZSB3aG8gZG8gaGF2ZSB3aGF0IHlvdSBwcml6ZSAuIC4gLiBCdXQgYnkgaGF2aW5nIHNvbWUgc2VsZi1yZXNwZWN0IGZvciB5b3VyIG93biBtaW5kIGFuZCBwcml6aW5nIGl0LCB5b3Ugd2lsbCBwbGVhc2UgeW91cnNlbGYgYW5kIGJlIGluIGJldHRlciBoYXJtb255IHdpdGggeW91ciBmZWxsb3cgaHVtYW4gYmVpbmdzLCBhbmQgbW9yZSBpbiB0dW5lIHdpdGggdGhlIGdvZHMmbWRhc2g7cHJhaXNpbmcgZXZlcnl0aGluZyB0aGV5IGhhdmUgc2V0IGluIG9yZGVyIGFuZCBhbGxvdHRlZCB5b3UuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA2LjE2LjJiLTRhIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPldhcnJlbiBCdWZmZXR0LCB3aG9zZSBuZXQgd29ydGggaXMgYXBwcm94aW1hdGVseSAkNjUgYmlsbGlvbiwgbGl2ZXMgaW4gdGhlIHNhbWUgaG91c2UgaGUgYm91Z2h0IGluIDE5NTggZm9yICQzMSw1MDAuIEpvaG4gVXJzY2hlbCwgYSBsaW5lbWFuIGZvciB0aGUgQmFsdGltb3JlIFJhdmVucywgbWFrZXMgbWlsbGlvbnMgYnV0IG1hbmFnZXMgdG8gbGl2ZSBvbiAkMjUsMDAwIGEgeWVhci4gU2FuIEFudG9uaW8gU3B1cnMgc3RhciBLYXdoaSBMZW9uYXJkIGdldHMgYXJvdW5kIGluIHRoZSAxOTk3IENoZXZ5IFRhaG9lIGhlJ3MgaGFkIHNpbmNlIGhlIHdhcyBhIHRlZW5hZ2VyLCBldmVuIHdpdGggYSBjb250cmFjdCB3b3J0aCBzb21lICQ5NCBtaWxsaW9uLiBXaHk/IEl0J3Mgbm90IGJlY2F1c2UgdGhlc2UgbWVuIGFyZSBjaGVhcC4gSXQncyBiZWNhdXNlIHRoZSB0aGluZ3MgPGVtPnRoYXQgbWF0dGVyIHRvIHRoZW0gYXJlIGNoZWFwPC9lbT4uIDwvcD48cD5OZWl0aGVyIEJ1ZmZldHQgbm9yIFVyc2NoZWwgbm9yIExlb25hcmQgZW5kZWQgdXAgdGhpcyB3YXkgYnkgYWNjaWRlbnQuIFRoZWlyIGxpZmVzdHlsZSBpcyB0aGUgcmVzdWx0IG9mIHByaW9yaXRpemluZy4gVGhleSBjdWx0aXZhdGUgaW50ZXJlc3RzIHRoYXQgYXJlIGRlY2lkZWRseSBiZWxvdyB0aGVpciBmaW5hbmNpYWwgbWVhbnMsIGFuZCBhcyBhIHJlc3VsdCwgPGVtPmFueTwvZW0+IGluY29tZSB3b3VsZCBhbGxvdyB0aGVtIGZyZWVkb20gdG8gcHVyc3VlIHRoZSB0aGluZ3MgdGhleSBtb3N0IGNhcmUgYWJvdXQuIEl0IGp1c3QgaGFwcGVucyB0aGF0IHRoZXkgYmVjYW1lIHdlYWx0aHkgYmV5b25kIGFueSBleHBlY3RhdGlvbi4gVGhpcyBraW5kIG9mIGNsYXJpdHkmbWRhc2g7YWJvdXQgd2hhdCB0aGV5IGxvdmUgbW9zdCBpbiB0aGUgd29ybGQmbWRhc2g7bWVhbnMgdGhleSBjYW4gZW5qb3kgdGhlaXIgbGl2ZXMuIEl0IG1lYW5zIHRoZXknZCBzdGlsbCBiZSBoYXBweSBldmVuIGlmIHRoZSBtYXJrZXRzIHdlcmUgdG8gdHVybiBvciB0aGVpciBjYXJlZXJzIHdlcmUgY3V0IHNob3J0IGJ5IGluanVyeS4gPC9wPjxwPlRoZSBtb3JlIHRoaW5ncyB3ZSBkZXNpcmUgYW5kIHRoZSBtb3JlIHdlIGhhdmUgdG8gZG8gdG8gZWFybiBvciBhdHRhaW4gdGhvc2UgYWNoaWV2ZW1lbnRzLCB0aGUgbGVzcyB3ZSBhY3R1YWxseSBlbmpveSBvdXIgbGl2ZXMmbWRhc2g7YW5kIHRoZSBsZXNzIGZyZWUgd2UgYXJlLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKYW51YXJ5IDI2IiwNCiAgICAidG9waWMiOiAiVGhlIFBvd2VyIE9mIEEgTWFudHJhIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiRXJhc2UgdGhlIGZhbHNlIGltcHJlc3Npb25zIGZyb20geW91ciBtaW5kIGJ5IGNvbnN0YW50bHkgc2F5aW5nIHRvIHlvdXJzZWxmLCBJIGhhdmUgaXQgaW4gbXkgc291bCB0byBrZWVwIG91dCBhbnkgZXZpbCwgZGVzaXJlIG9yIGFueSBraW5kIG9mIGRpc3R1cmJhbmNlJm1kYXNoO2luc3RlYWQsIHNlZWluZyB0aGUgdHJ1ZSBuYXR1cmUgb2YgdGhpbmdzLCBJIHdpbGwgZ2l2ZSB0aGVtIG9ubHkgdGhlaXIgZHVlLiBBbHdheXMgcmVtZW1iZXIgdGhpcyBwb3dlciB0aGF0IG5hdHVyZSBnYXZlIHlvdS4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDguMjkiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+QW55b25lIHdobyBoYXMgdGFrZW4gYSB5b2dhIGNsYXNzIG9yIGJlZW4gZXhwb3NlZCB0byBIaW5kdSBvciBCdWRkaGlzdCB0aG91Z2h0IGhhcyBwcm9iYWJseSBoZWFyZCBvZiB0aGUgY29uY2VwdCBvZiBhIG1hbnRyYS4gSW4gU2Fuc2tyaXQsIGl0IG1lYW5zIDxxPnNhY3JlZCB1dHRlcmFuY2U8L3E+Jm1kYXNoO2Vzc2VudGlhbGx5IGEgd29yZCwgYSBwaHJhc2UsIGEgdGhvdWdodCwgZXZlbiBhIHNvdW5kJm1kYXNoO2ludGVuZGVkIHRvIHByb3ZpZGUgY2xhcml0eSBvciBzcGlyaXR1YWwgZ3VpZGFuY2UuIEEgbWFudHJhIGNhbiBiZSBlc3BlY2lhbGx5IGhlbHBmdWwgaW4gdGhlIG1lZGl0YXRpdmUgcHJvY2VzcyBiZWNhdXNlIGl0IGFsbG93cyB1cyB0byBibG9jayBvdXQgZXZlcnl0aGluZyBlbHNlIHdoaWxlIHdlIGZvY3VzLjwvcD48cD5JdCdzIGZpdHRpbmcsIHRoZW4sIHRoYXQgTWFyY3VzIEF1cmVsaXVzIHdvdWxkIHN1Z2dlc3QgdGhpcyBTdG9pYyBtYW50cmEmbWRhc2g7YSByZW1pbmRlciBvciB3YXRjaCBwaHJhc2UgdG8gdXNlIHdoZW4gd2UgZmVlbCBmYWxzZSBpbXByZXNzaW9ucywgZGlzdHJhY3Rpb25zLCBvciB0aGUgY3J1c2ggb2YgZXZlcnlkYXkgbGlmZSB1cG9uIHVzLiBJdCBzYXlzLCBlc3NlbnRpYWxseSwgPHE+SSBoYXZlIHRoZSBwb3dlciB3aXRoaW4gbWUgdG8ga2VlcCB0aGF0IG91dC4gSSBjYW4gc2VlIHRoZSB0cnV0aC48L3E+PC9wPjxwPkNoYW5nZSB0aGUgd29yZGluZyBhcyB5b3UgbGlrZS4gVGhhdCBwYXJ0IGlzIHVwIHRvIHlvdS4gQnV0IGhhdmUgYSBtYW50cmEgYW5kIHVzZSBpdCB0byBmaW5kIHRoZSBjbGFyaXR5IHlvdSBjcmF2ZS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAyNyIsDQogICAgInRvcGljIjogIlRoZSBUaHJlZSBBcmVhcyBPZiBUcmFpbmluZyIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlRoZXJlIGFyZSB0aHJlZSBhcmVhcyBpbiB3aGljaCB0aGUgcGVyc29uIHdobyB3b3VsZCBiZSB3aXNlIGFuZCBnb29kIG11c3QgYmUgdHJhaW5lZC4gIFRoZSBmaXJzdCBoYXMgdG8gZG8gd2l0aCBkZXNpcmVzIGFuZCBhdmVyc2lvbnMmbWRhc2g7dGhhdCBhIHBlcnNvbiBtYXkgbmV2ZXIgbWlzcyB0aGUgbWFyayBpbiBkZXNpcmVzIG5vciBmYWxsIGludG8gd2hhdCByZXBlbHMgdGhlbS4gIFRoZSBzZWNvbmQgaGFzIHRvIGRvIHdpdGggaW1wdWxzZXMgdG8gYWN0IGFuZCBub3QgdG8gYWN0Jm1kYXNoO2FuZCBtb3JlIGJyb2FkbHksIHdpdGggZHV0eSZtZGFzaDt0aGF0IGEgcGVyc29uIG1heSBhY3QgZGVsaWJlcmF0ZWx5IGZvciBnb29kIHJlYXNvbnMgYW5kIG5vdCBjYXJlbGVzc2x5LiAgVGhlIHRoaXJkIGhhcyB0byBkbyB3aXRoIGZyZWVkb20gZnJvbSBkZWNlcHRpb24gYW5kIGNvbXBvc3VyZSBhbmQgdGhlIHdob2xlIGFyZWEgb2YganVkZ21lbnQsIHRoZSBhc3NlbnQgb3VyIG1pbmQgZ2l2ZXMgdG8gaXRzIHBlcmNlcHRpb25zLiAgT2YgdGhlc2UgYXJlYXMsIHRoZSBjaGllZiBhbmQgbW9zdCB1cmdlbnQgaXMgdGhlIGZpcnN0IHdoaWNoIGhhcyB0byBkbyB3aXRoIHRoZSBwYXNzaW9ucywgZm9yIHN0cm9uZyBlbW90aW9ucyBhcmlzZSBvbmx5IHdoZW4gd2UgZmFpbCBpbiBvdXIgZGVzaXJlcyBhbmQgYXZlcnNpb25zLiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCAzLjIuMS0zYSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5Ub2RheSwgbGV0J3MgZm9jdXMgb24gdGhlIHRocmVlIGFyZWFzIG9mIHRyYWluaW5nIHRoYXQgRXBpY3RldHVzIGxhaWQgb3V0IGZvciB1cy48L3A+PHA+Rmlyc3QsIHdlIG11c3QgY29uc2lkZXIgd2hhdCB3ZSBzaG91bGQgZGVzaXJlIGFuZCB3aGF0IHdlIHNob3VsZCBiZSBhdmVyc2UgdG8uIFdoeT8gU28gdGhhdCB3ZSB3YW50IHdoYXQgaXMgZ29vZCBhbmQgYXZvaWQgd2hhdCBpcyBiYWQuIEl0J3Mgbm90IGVub3VnaCB0byBqdXN0IGxpc3RlbiB0byB5b3VyIGJvZHkmbWRhc2g7YmVjYXVzZSBvdXIgYXR0cmFjdGlvbnMgb2Z0ZW4gbGVhZCB1cyBhc3RyYXkuPC9wPjxwPk5leHQsIHdlIG11c3QgZXhhbWluZSBvdXIgaW1wdWxzZXMgdG8gYWN0Jm1kYXNoO3RoYXQgaXMsIG91ciA8ZW0+bW90aXZhdGlvbnM8L2VtPi4gQXJlIHdlIGRvaW5nIHRoaW5ncyBmb3IgdGhlIHJpZ2h0IHJlYXNvbnM/IE9yIGRvIHdlIGFjdCBiZWNhdXNlIHdlIGhhdmVuJ3Qgc3RvcHBlZCB0byB0aGluaz8gT3IgZG8gd2UgYmVsaWV2ZSB0aGF0IHdlIDxlbT5oYXZlPC9lbT4gdG8gZG8gc29tZXRoaW5nPzwvcD48cD5GaW5hbGx5LCB0aGVyZSBpcyBvdXIganVkZ21lbnQuIE91ciBhYmlsaXR5IHRvIHNlZSB0aGluZ3MgY2xlYXJseSBhbmQgcHJvcGVybHkgY29tZXMgd2hlbiB3ZSB1c2Ugb3VyIGdyZWF0IGdpZnQgZnJvbSBuYXR1cmU6IDxlbT5yZWFzb248L2VtPi48L3A+PHA+VGhlc2UgYXJlIHRocmVlIGRpc3RpbmN0IGFyZWFzIG9mIHRyYWluaW5nLCBidXQgaW4gcHJhY3RpY2UgdGhleSBhcmUgaW5leHRyaWNhYmx5IGludGVydHdpbmVkLiBPdXIganVkZ21lbnQgYWZmZWN0cyB3aGF0IHdlIGRlc2lyZSwgb3VyIGRlc2lyZXMgYWZmZWN0IGhvdyB3ZSBhY3QsIGp1c3QgYXMgb3VyIGp1ZGdtZW50IGRldGVybWluZXMgaG93IHdlIGFjdC4gQnV0IHdlIGNhbid0IGp1c3QgZXhwZWN0IHRoaXMgdG8gaGFwcGVuLiBXZSBtdXN0IHB1dCByZWFsIHRob3VnaHQgYW5kIGVuZXJneSBpbnRvIGVhY2ggYXJlYSBvZiBvdXIgbGl2ZXMuIElmIHdlIGRvLCB3ZSdsbCBmaW5kIHJlYWwgY2xhcml0eSBhbmQgc3VjY2Vzcy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAyOCIsDQogICAgInRvcGljIjogIldhdGNoaW5nIFRoZSBXaXNlIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiVGFrZSBhIGdvb2QgaGFyZCBsb29rIGF0IHBlb3BsZSdzIHJ1bGluZyBwcmluY2lwbGUsIGVzcGVjaWFsbHkgb2YgdGhlIHdpc2UsIHdoYXQgdGhleSBydW4gYXdheSBmcm9tIGFuZCB3aGF0IHRoZXkgc2VlayBvdXQuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA0LjM4Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlNlbmVjYSBoYXMgc2FpZCwgPHE+V2l0aG91dCBhIHJ1bGVyIHRvIGRvIGl0IGFnYWluc3QsIHlvdSBjYW4ndCBtYWtlIGNyb29rZWQgc3RyYWlnaHQuPC9xPiAgVGhhdCBpcyB0aGUgcm9sZSBvZiB3aXNlIHBlb3BsZSBpbiBvdXIgbGl2ZXMmbWRhc2g7dG8gc2VydmUgYXMgbW9kZWwgYW5kIGluc3BpcmF0aW9uLiAgVG8gYm91bmNlIG91ciBpZGVhcyBvZmYgYW5kIHRlc3Qgb3VyIHByZXN1bXB0aW9ucy48L3A+PHA+V2hvIHRoYXQgcGVyc29uIHdpbGwgYmUgZm9yIHlvdSBpcyB1cCB0byB5b3UuICBQZXJoYXBzIGl0J3MgeW91ciBmYXRoZXIgb3IgeW91ciBtb3RoZXIsIG9yIGJvdGggY29tYmluZWQuICBNYXliZSBpdCdzIGEgcGhpbG9zb3BoZXIgb3IgYSB3cml0ZXIgb3IgYSB0aGlua2VyLiAgUGVyaGFwcyBXV0JEIChXaGF0IHdvdWxkIEJ1ZGRhIGRvPykgb3IgV1dMRCAoV2hhdCB3b3VsZCBMYW96aSBkbz8pIGlzIHRoZSByaWdodCBtb2RlbCBmb3IgeW91LjwvcD48cD5CdXQgcGljayBzb21lb25lLCB3YXRjaCB3aGF0IHRoZXkgZG8gKGFuZCB3aGF0IHRoZXkgPGVtPmRvbid0PC9lbT4gZG8pLCBhbmQgZG8geW91ciBiZXN0IHRvIGRvIHRoZSBzYW1lIC4gLiAuIHNvIHlvdSBjYW4gYmUgdGhhdCB3aXNlIHBlcnNvbiBmb3Igb3RoZXJzLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKYW51YXJ5IDI5IiwNCiAgICAidG9waWMiOiAiS2VlcCBJdCBTaW1wbGUiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLCAic291cmNlIjogIk1lZGl0YXRpb25zLCAyLjUiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAzMCIsDQogICAgInRvcGljIjogIllvdSBEb24ndCBIYXZlIFRvIFN0YXkgT24gVG9wIE9mIEV2ZXJ5dGhpbmciLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICJFcGljdGV0dXMiLCAic291cmNlIjogIkVuY2hpcmlkaW9uLCAxM2EiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSmFudWFyeSAzMSIsDQogICAgInRvcGljIjogIlBoaWxvc29waHkgQXMgTWVkaWNpbmUgT2YgVGhlIFNvdWwiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLCAic291cmNlIjogIk1lZGl0YXRpb25zLCA1LjkiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgMSIsDQogICAgInRvcGljIjogIkZvciB0aGUgSG90LUhlYWRlZCBNYW4iLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJLZWVwIHRoaXMgdGhvdWdodCBoYW5keSB3aGVuIHlvdSBmZWVsIGEgcmFnZSBjb21pbmcgb24mbWRhc2g7aXQgaXNuJ3QgbWFubHkgdG8gYmUgZW5yYWdlZC4gUmF0aGVyLCBnZW50bGVuZXNzIGFuZCBjaXZpbGl0eSBhcmUgbW9yZSBodW1hbiwgYW5kIHRoZXJlZm9yZSBtYW5saWVyLiBBIHJlYWwgbWFuIGRvZXNuJ3QgZ2l2ZSB3YXkgdG8gYW5nZXIgYW5kIGRpc2NvbnRlbnQsIGFuZCBzdWNoIGEgcGVyc29uIGhhcyBzdHJlbmd0aCwgY291cmFnZSwgYW5kIGVuZHVyYW5jZSZtZGFzaDt1bmxpa2UgdGhlIGFuZ3J5IGFuZCBjb21wbGFpbmluZy4gVGhlIG5lYXJlciBhIG1hbiBjb21lcyB0byBhIGNhbG0gbWluZCwgdGhlIGNsb3NlciBoZSBpcyB0byBzdHJlbmd0aC4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDExLjE4LjViIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPldoeSBkbyBhdGhsZXRlcyB0YWxrIHRyYXNoIHRvIGVhY2ggb3RoZXI/IFdoeSBkbyB0aGV5IGRlbGliZXJhdGVseSBzYXkgb2ZmZW5zaXZlIGFuZCBuYXN0eSB0aGluZ3MgdG8gdGhlaXIgY29tcGV0aXRvcnMgd2hlbiB0aGUgcmVmcyBhcmVuJ3QgbG9va2luZz8gVG8gcHJvdm9rZSBhIHJlYWN0aW9uLiBEaXN0cmFjdGluZyBhbmQgYW5nZXJpbmcgb3Bwb25lbnRzIGlzIGFuIGVhc3kgd2F5IHRvIGtub2NrIHRoZW0gb2ZmIHRoZWlyIGdhbWUuPC9wPjxwPlRyeSB0byByZW1lbWJlciB0aGF0IHdoZW4geW91IGZpbmQgeW91cnNlbGYgZ2V0dGluZyBtYWQuIEFuZ2VyIGlzIG5vdCBpbXByZXNzaXZlIG9yIHRvdWdoJml0J3MgYSBtaXN0YWtlLiBJdCdzIDxlbT53ZWFrbmVzczwvZW0+LiBEZXBlbmRpbmcgb24gd2hhdCB5b3UncmUgZG9pbmcsIGl0IG1pZ2h0IGV2ZW4gYmUgYSB0cmFwIHRoYXQgc29tZW9uZSBsYWlkIGZvciB5b3UuPC9wPjxwPkZhbnMgYW5kIG9wcG9uZW50cyBjYWxsZWQgSm9lIExvdWlzIHRoZSA8cT5SaW5nIFJvYm90PC9xPiBiZWNhdXNlIGhlIHdhcyB1dHRlcmx5IHVuZW1vdGlvbmFsJm1kYXNoO2hpcyBjb2xkLCBjYWxtIGRlbWVhbm9yIHdhcyBmYXIgbW9yZSB0ZXJyaWZ5aW5nIHRoYW4gYW55IGNyYXplZCBsb29rIG9yIGVtb3Rpb25hbCBvdXRidXJzdCB3b3VsZCBoYXZlIGJlZW4uPC9wPjxwPlN0cmVuZ3RoIGlzIHRoZSBhYmlsaXR5IHRvIG1haW50YWluIGEgaG9sZCBvZiBvbmVzZWxmLiBJdCdzIGJlaW5nIHRoZSBwZXJzb24gd2hvIG5ldmVyIGdldHMgbWFkLCB3aG8gY2Fubm90IGJlIHJhdHRsZWQsIGJlY2F1c2UgdGhleSBhcmUgaW4gY29udHJvbCBvZiB0aGVpciBwYXNzaW9ucyZtZGFzaDtyYXRoZXIgdGhhbiBjb250cm9sbGVkIDxlbT5ieTwvZW0+IHRoZWlyIHBhc3Npb25zLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJGZWJydWFyeSAyIiwNCiAgICAidG9waWMiOiAiQSBQcm9wZXIgRnJhbWUgT2YgTWluZCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkZyYW1lIHlvdXIgdGhvdWdodHMgbGlrZSB0aGlzJm1kYXNoO3lvdSBhcmUgYW4gb2xkIHBlcnNvbiwgeW91IHdvbid0IGxldCB5b3Vyc2VsZiBiZSBlbnNsYXZlZCBieSB0aGlzIGFueSBsb25nZXIsIG5vIGxvbmdlciBwdWxsZWQgbGlrZSBhIHB1cHBldCBieSBldmVyeSBpbXB1bHNlLCBhbmQgeW91J2xsIHN0b3AgY29tcGxhaW5pbmcgYWJvdXQgeW91ciBwcmVzZW50IGZvcnR1bmUgb3IgZHJlYWRpbmcgdGhlIGZ1dHVyZS4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDIuMiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5XZSByZXNlbnQgdGhlIHBlcnNvbiB3aG8gY29tZXMgaW4gYW5kIHRyaWVzIHRvIGJvc3MgdXMgYXJvdW5kLiA8ZW0+RG9uJ3QgdGVsbCBtZSBob3cgdG8gZHJlc3MsIGhvdyB0byB0aGluaywgaG93IHRvIGRvIG15IGpvYiwgaG93IHRvIGxpdmU8L2VtPi4gVGhpcyBpcyBiZWNhdXNlIHdlIGFyZSBpbmRlcGVuZGVudCwgc2VsZi1zdWZmaWNpZW50IHBlb3BsZS48L3A+PHA+T3IgYXQgbGVhc3QgdGhhdCdzIHdoYXQgd2UgdGVsbCBvdXJzZWx2ZXMuPC9wPjxwPllldCBpZiBzb21lb25lIHNheXMgc29tZXRoaW5nIHdlIGRpc2FncmVlIHdpdGgsIHNvbWV0aGluZyBpbnNpZGUgdXMgdGVsbCB1cyB3ZSA8ZW0+aGF2ZTwvZW0+IHRvIGFyZ3VlIHdpdGggdGhlbS4gSWYgdGhlcmUncyBhIHBsYXRlIG9mIGNvb2tpZXMgaW4gZnJvbnQgb2YgdXMsIHdlIDxlbT5oYXZlPC9lbT4gdG8gZWF0IHRoZW0uIElmIHNvbWVvbmUgZG9lcyBzb21ldGhpbmcgd2UgZGlzbGlrZSwgd2UgPGVtPmhhdmU8L2VtPiB0byBnZXQgbWFkIGFib3V0IGl0LiBXaGVuIHNvbWV0aGluZyBiYWQgaGFwcGVucywgd2UgPGVtPmhhdmU8L2VtPiB0byBiZSBzYWQsIGRlcHJlc3NlZCwgb3Igd29ycmllZC4gQnV0IGlzIHNvbWV0aGluZyBnb29kIGhhcHBlbnMgYSBmZXcgbWludXRlcyBsYXRlciwgYWxsIG9mIGEgc3VkZGVuIHdlJ3JlIGhhcHB5LCBleGNpdGVkLCBhbmQgd2FudCBtb3JlLjwvcD48cD5XZSB3b3VsZCBuZXZlciBsZXQgYW5vdGhlciBwZXJzb24gamVyayB1cyBhcm91bmQgdGhlIHdheSB3ZSBsZXQgb3VyIGltcHVsc2VzIGRvLiBJdCdzIHRpbWUgd2Ugc3RhcnQgc2VlaW5nIGl0IHRoYXQgd2F5Jm1kYXNoO3RoYXQgd2UncmUgbm90IHB1cHBldHMgdGhhdCBjYW4gYmUgbWFkZSB0byBkYW5jZSB0aGlzIHdheSBvciB0aGF0IHdheSBqdXN0IGJlY2F1c2Ugd2UgZmVlbCBsaWtlIGl0LiBXZSBzaG91bGQgYmUgdGhlIG9uZXMgaW4gY29udHJvbCwgbm90IG91ciBlbW90aW9ucywgYmVjYXVzZSB3ZSBhcmUgaW5kZXBlbmRlbnQsIHNlbGYtc3VmZmljaWVudCBwZW9wbGUuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkZlYnJ1YXJ5IDMiLA0KICAgICJ0b3BpYyI6ICJUaGUgU291cmNlIE9mIFlvdXIgQW54aWV0eSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIldoZW4gSSBzZWUgYW4gYW54aW91cyBwZXJzb24sIEkgYXNrIG15c2VsZiwgd2hhdCBkbyB0aGV5IHdhbnQ/IEZvciBpZiBhIHBlcnNvbiB3YXNuJ3Qgd2FudGluZyBzb21ldGhpbmcgb3V0c2lkZSBvZiB0aGVpciBvd24gY29udHJvbCB3aHkgd291bGQgdGhleSBiZSBzdHJpY2tlbiBieSBhbnhpZXR5PyIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCAyLjEzLjEiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIGFueGlvdXMgZmF0aGVyLCB3b3JyaWVkIGFib3V0IGhpcyBjaGlsZHJlbi4gV2hhdCBkb2VzIGhlIHdhbnQ/IEEgd29ybGQgdGhhdCBpcyBhbHdheXMgc2FmZS4gQSBmcmVuemllZCB0cmF2ZWxlciZtZGFzaDt3aGF0IGRvZXMgc2hlIHdhbnQ/IEZvciB0aGUgd2VhdGhlciB0byBob2xkIGFuZCBmb3IgdHJhZmZpYyB0byBwYXJ0IHNvIHNoZSBjYW4gbWFrZSBoZXIgZmxpZ2h0LiBBIG5lcnZvdXMgaW52ZXN0b3I/IFRoYXQgdGhlIG1hcmtldCB3aWxsIHR1cm4gYXJvdW5kIGFuZCBhbiBpbnZlc3RtZW50IHdpbGwgcGF5IG9mZi48L3A+PHA+QWxsIG9mIHRoZXNlIHNjZW5hcmlvcyBob2xkcyB0aGUgc2FtZSB0aGluZyBpbiBjb21tb24uIEFzIEVwaWN0ZXR1cyBzYXlzLCBpdCdzIHdhbnRpbmcgc29tZXRoaW5nIG91dHNpZGUgb3VyIGNvbnRyb2wuIEdldHRpbmcgd29ya2VkIHVwLCBnZXR0aW5nIGV4Y2l0ZWQsIG5lcnZvdXNseSBwYWNpbmcmbWRhc2g7dGhlc2UgaW50ZW5zZSwgcGFpbmVkLCBhZCBhbnhpb3VzIG1vbWVudHMgc2hvdyB1cyBhdCBvdXIgbW9zdCBmdXRpbGUgYW5kIHNlcnZpbGUuIFN0YXJpbmcgYXQgdGhlIGNsb2NrLCBhdCB0aGUgdGlja2VyLCBhdCB0aGUgbmV4dCBjaGVja291dCBsYW5lIG92ZXIsIGF0IHRoZSBza3kmbWRhc2g7aXQncyBhcyBpZiB3ZSBhbGwgYmVsb25nIHRvIGEgcmVsaWdpb3VzIGN1bHQgdGhhdCBiZWxpZXZlcyB0aGUgZ29kcyBvZiBmYXRlIHdpbGwgb25seSBnaXZlIHVzIHdoYXQgd2Ugd2FudCBpZiB3ZSBzYWNyaWZpY2Ugb3VyIHBlYWNlIG9mIG1pbmQuPC9wPjxwPlRvZGF5LCB3aGVuIHlvdSBmaW5kIHlvdXJzZWxmIGdldHRpbmcgYW54aW91cywgYXNrIHlvdXJzZWxmOiA8ZW0+V2h5IGFyZSBteSBpbnNpZGVzIHR3aXN0ZWQgaW50byBrbm90cz8gQW0gSSBpbiBjb250cm9sIGhlcmUgb3IgaXMgbXkgYW54aWV0eT88L2VtPiBBbmQgbW9zdCBpbXBvcnRhbnQ6IDxlbT5JcyBteSBhbnhpZXR5IGRvaW5nIG1lIGFueSBnb29kPzwvZW0+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkZlYnJ1YXJ5IDQiLA0KICAgICJ0b3BpYyI6ICJPbiBCZWluZyBJbnZpbmNpYmxlIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiV2hvIHRoZW4gaXMgaW52aW5jaWJsZT8gVGhlIG9uZSB3aG8gY2Fubm90IGJlIHVwc2V0IGJ5IGFueXRoaW5nIG91dHNpZGUgdGhlaXIgcmVhc29uZWQgY2hvaWNlLiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCAxLjE4LjIxIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkhhdmUgeW91IGV2ZXIgd2F0Y2hlZCBhIHNlYXNvbmVkIHBybyBoYW5kbGUgdGhlIG1lZGlhPyBObyBxdWVzdGlvbiBpcyB0b28gdG91Z2gsIG5vIHRvbmUgdG9vIHBvaW50ZWQgb3IgaW5zdWx0aW5nLiBUaGV5IHBhcnJ5IGV2ZXJ5IGJsb3cgd2l0aCBodW1vciwgcG9pc2UsIGFuZCBwYXRpZW5jZS4gRXZlbiB3aGVuIHN0dW5nIG9yIHByb3Zva2VkLCB0aGV5IDxlbT5jaG9vc2U8L2VtPiBub3QgdG8gZmxpbmNoIG9yIHJlYWN0LiBUaGV5J3JlIGFibGUgdG8gZG8gdGhpcyBub3Qgb25seSBiZWNhdXNlIG9mIHRyYWluaW5nIGFuZCBleHBlcmllbmNlLCBidXQgYmVjYXVzZSB0aGV5IHVuZGVyc3RhbmQgdGhhdCByZWFjdGluZyBlbW90aW9uYWxseSB3aWxsIG9ubHkgbWFrZSB0aGUgc2l0dWF0aW9uIHdvcnNlLiBUaGUgbWVkaWEgaXMgd2FpdGluZyBmb3IgdGhlbSB0byBzbGlwIHVwIG9yIGdldCB1cHNldCwgc28gdG8gc3VjY2Vzc2Z1bGx5IG5hdmlnYXRlIHByZXNzIGV2ZW50cyB0aGV5IGhhdmUgaW50ZXJuYWxpemVkIHRoZSBpbXBvcnRhbmNlIG9mIGtlZXBpbmcgdGhlbXNlbHZlcyB1bmRlciBjYWxtIGNvbnRyb2wuPC9wPjxwPkl0J3MgdW5saWtlbHkgeW91J2xsIGZhY2UgYSBob3JkZSBvZiBwcm9iaW5nIHJlcG9ydGVycyBib21iYXJkaW5nIHlvdSB3aXRoIGluc2Vuc2l0aXZlIHF1ZXN0aW9ucyB0b2RheS4gQnV0IGl0IG1pZ2h0IGJlIGhlbHBmdWwmbWRhc2g7d2hhdGV2ZXIgc3RyZXNzZXMgb3IgZnJ1c3RyYXRpb25zIG9yIG92ZXJsb2FkIHRoYXQgZG8gY29tZSB5b3VyIHdheSZtZGFzaDt0byBwaWN0dXJlIHRoYXQgaW1hZ2UgYW5kIHVzZSBpdCBhcyB5b3VyIG1vZGVsIGZvciBkZWFsaW5nIHdpdGggdGhlbS4gT3VyIHJlYXNvbmVkIGNob2ljZSZtZGFzaDsgb3VyIDxlbT5wcm9oYWlyZXNlczwvZW0+LCBhcyB0aGUgU3RvaWNzIGNhbGxlZCBpdCZtZGFzaDtpcyBhIGtpbmQgb2YgaW52aW5jaWJpbGl0eSB0aGF0IHdlIGNhbiBjdWx0aXZhdGUuIFdlIGNhbiBzaHJ1ZyBvZmYgaG9zdGlsZSBhdHRhY2tzIGFuZCBicmVlemUgdGhvcm91Z2ggcHJlc3N1cmUgb3IgcHJvYmxlbXMuIEFuZCwgbGlrZSBvdXIgbW9kZWwsIHdoZW4gd2UgZmluaXNoLCB3ZSBjYW4gcG9pbnQgYmFjayBpbnRvIHRoZSBjcm93ZCBhbmQgc2F5LCA8cT5OZXh0ITwvcT48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgNSIsDQogICAgInRvcGljIjogIlN0ZWFkeSBZb3VyIEltcHVsc2VzIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiRG9uJ3QgYmUgYm91bmNlZCBhcm91bmQsIGJ1dCBzdWJtaXQgZXZlcnkgaW1wdWxzZSB0byB0aGUgY2xhaW1zIG9mIGp1c3RpY2UsIGFuZCBwcm90ZWN0IHlvdXIgY2xlYXIgY29udmljdGlvbiBpbiBldmVyeSBhcHBlYXJhbmNlLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgNC4yMiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGluayBvZiB0aGUgbWFuaWMgcGVvcGxlIGluIHlvdXIgbGlmZS4gIE5vdCB0aGUgb25lcyBzdWZmZXJpbmcgZnJvbSBhbiB1bmZvcnR1bmF0ZSBkaXNvcmRlciwgYnV0IHRoZSBvbmVzIHdob3NlIGxpdmVzIGFuZCBjaG9pY2VzIGFyZSA8ZW0+aW48L2VtPiBkaXNvcmRlci4gIEV2ZXJ5dGhpbmcgaXMgc29hcmluZyBoaWdocyBvciBjcnVzaGluZyBsb3dzOyB0aGUgZGF5IGlzIGVpdGhlciBhbWF6aW5nIG9yIGF3ZnVsLiAgQXJlbid0IHRob3NlIHBlb3BsZSBleGhhdXN0aW5nPyBEb24ndCB5b3Ugd2lzaCB0aGV5IGp1c3QgaGFkIGEgZmlsdGVyIHRocm91Z2ggd2hpY2ggdGhleSBjb3VsZCB0ZXN0IHRoZSBnb29kIGltcHVsc2VzIHZlcnN1cyB0aGUgYmFkIG9uZXM/PC9wPjxwPlRoZXJlIGlzIHN1Y2ggYSBmaWx0ZXIuICBKdXN0aWNlLiAgUmVhc29uLiAgUGhpbG9zb3BoeS4gIElmIHRoZXJlJ3MgYSBjZW50cmFsIG1lc3NhZ2Ugb2YgU3RvaWMgdGhvdWdodCwgaXQncyB0aGlzOiBpbXB1bHNlcyBvZiBhbGwga2luZHMgYXJlIGdvaW5nIHRvIGNvbWUsIGFuZCB5b3VyIHdvcmsgaXMgdG8gY29udHJvbCB0aGVtLCBsaWtlIGJyaW5naW5nIGEgZG9nIHRvIGhlZWwuIFB1dCBtb3JlIHNpbXBseTogdGhpbmsgYmVmb3JlIHlvdSBhY3QuICBBc2s6IDxlbT5XaG8gaXMgaW4gY29udHJvbCBoZXJlPyBXaGF0IHByaW5jaXBsZXMgYXJlIGd1aWRpbmcgbWU/PC9lbT48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgNiIsDQogICAgInRvcGljIjogIkRvbid0IFNlZWsgT3V0IFN0cmlmZSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkkgZG9uJ3QgYWdyZWUgd2l0aCB0aG9zZSB3aG8gcGx1bmdlIGhlYWRsb25nIGludG8gdGhlIG1pZGRsZSBvZiB0aGUgZmxvb2QgYW5kIHdobywgYWNjZXB0aW5nIGEgdHVyYnVsZW50IGxpZmUsIHN0cnVnZ2xlIGRhaWx5IGluIGdyZWF0IHNwaXJpdCB3aXRoIGRpZmZpY3VsdCBjaXJjdW1zdGFuY2VzLiBUaGUgd2lzZSBwZXJzb24gd2lsbCBlbmR1cmUgdGhhdCwgYnV0IHdvbid0IGNob29zZSBpdCZtZGFzaDtjaG9vc2luZyB0byBiZSBhdCBwZWFjZSwgcmF0aGVyIHRoYW4gYXQgd2FyLiIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJPZWRpcHVzLCA5OTIiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+PHE+T25seSB0aGUgcGFyYW5vaWQgc3Vydml2ZSw8L3E+IEFuZHkgR3JvdmUsIGEgZm9ybWVyIENFTyBvZiBJbnRlbCwgZmFtb3VzbHkgc2FpZC4gSXQgbWlnaHQgYmUgdHJ1ZS4gQnV0IHdlIGFsc28ga25vdyB0aGF0IHRoZSBwYXJhbm9pZCBvZnRlbiBkZXN0cm95IHRoZW1zZWx2ZXMgcXVpY2tlciBhbmQgbW9yZSBzcGVjdGFjdWxhcmx5IHRoYW4gYW55IGVuZW15LiBTZW5lY2EsIHdpdGggaGlzIGFjY2VzcyBhbmQgaW5zaWdodCBpbnRvIHRoZSBtb3N0IHBvd2VyZnVsIGVsaXRlIGluIFJvbWUsIHdvdWxkIGhhdmUgc2VlbiB0aGlzIGR5bmFtaWMgcGxheSBvdXQgcXVpdGUgdml2aWRseS4gTmVybywgdGhlIHN0dWRlbnQgd2hvc2UgZXhjZXNzZXMgU2VuZWNhIHRyaWVkIHRvIGN1cmIsIGtpbGxlZCBub3Qgb25seSBoaXMgb3duIG1vdGhlciBhbmQgd2lmZSBidXQgZXZlbnR1YWxseSB0dXJuZWQgb24gU2VuZWNhLCBoaXMgbWVudG9yLCB0b28uPC9wPjxwPlRoZSBjb21iaW5hdGlvbiBvZiBwb3dlciwgZmVhciwgbWFuaWEgY2FuIGJlIGRlYWRseS4gVGhlIGxlYWRlciBjb252aW5jZWQgdGhhdCBoZSBtaWdodCBiZSBiZXRyYXllZCwgYWN0cyBmaXJzdCBhbmQgYmV0cmF5cyBvdGhlcnMgZmlyc3QuIEFmcmFpZCB0aGF0IGhlJ3Mgbm90IHdlbGwgbGlrZWQsIGhlIHdvcmtzIHNvIGhhcmQgdG8gZ2V0IG90aGVycyB0byBsaWtlIGhpbSB0aGF0IGl0IGhhcyB0aGUgb3Bwb3NpdGUgZWZmZWN0LiBDb252aW5jZWQgb2YgbWlzbWFuYWdlbWVudCwgaGUgbWljcm9tYW5hZ2VzIGFuZCBiZWNvbWVzIHRoZSBzb3VyY2Ugb2YgdGhlIG1pc21hbmFnZW1lbnQuIEFuZCBvbiBhbmQgb24mbWRhc2g7dGhlIHRoaW5ncyB3ZSBmZWFyIG9yIGRyZWFkLCB3ZSBibGluZGx5IGluZmxpY3Qgb24gb3Vyc2VsdmVzLjwvcD48cD5UaGUgbmV4dCB0aW1lIHlvdSBhcmUgYWZyYWlkIG9mIHNvbWUgc3VwcG9zZWRseSBkaXNhc3Ryb3VzIG91dGNvbWUsIHJlbWVtYmVyIHRoYXQgaWYgeW91IGRvbid0IGNvbnRyb2wgeW91ciBpbXB1bHNlcywgaWYgeW91IGxvc2UgeW91ciBzZWxmLWNvbnRyb2wsIHlvdSBtYXkgYmUgdGhlIHZlcnkgc291cmNlIG9mIHRoZSBkaXNhc3RlciB5b3Ugc28gZmVhci4gSXQgaGFzIGhhcHBlbmVkIHRvIHNtYXJ0ZXIgYW5kIG1vcmUgcG93ZXJmdWwgYW5kIG1vcmUgc3VjY2Vzc2Z1bCBwZW9wbGUuIEl0IGNhbiBoYXBwZW4gdG8gdXMgdG9vLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJGZWJydWFyeSA3IiwNCiAgICAidG9waWMiOiAiRmVhciBJcyBBIFNlbGYtRnVsZmlsbGluZyBQcm9waGVjeSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIk1hbnkgYXJlIGhhcm1lZCBieSBmZWFyIGl0c2VsZiwgYW5kIG1hbnkgbWF5IGhhdmUgY29tZSB0byB0aGVpciBmYXRlIHdoaWxlIGRyZWFkaW5nIGZhdGUuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk9lZGlwdXMsIDk5MiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD48cT5Pbmx5IHRoZSBwYXJhbm9pZCBzdXJ2aXZlLDwvcT4gQW5keSBHcm92ZSwgYSBmb3JtZXIgQ0VPIG9mIEludGVsLCBmYW1vdXNseSBzYWlkLiBJdCBtaWdodCBiZSB0cnVlLiBCdXQgd2UgYWxzbyBrbm93IHRoYXQgdGhlIHBhcmFub2lkIG9mdGVuIGRlc3Ryb3kgdGhlbXNlbHZlcyBxdWlja2VyIGFuZCBtb3JlIHNwZWN0YWN1bGFybHkgdGhhbiBhbnkgZW5lbXkuIFNlbmVjYSwgd2l0aCBoaXMgYWNjZXNzIGFuZCBpbnNpZ2h0IGludG8gdGhlIG1vc3QgcG93ZXJmdWwgZWxpdGUgaW4gUm9tZSwgd291bGQgaGF2ZSBzZWVuIHRoaXMgZHluYW1pYyBwbGF5IG91dCBxdWl0ZSB2aXZpZGx5LiBOZXJvLCB0aGUgc3R1ZGVudCB3aG9zZSBleGNlc3NlcyBTZW5lY2EgdHJpZWQgdG8gY3VyYiwga2lsbGVkIG5vdCBvbmx5IGhpcyBvd24gbW90aGVyIGFuZCB3aWZlIGJ1dCBldmVudHVhbGx5IHR1cm5lZCBvbiBTZW5lY2EsIGhpcyBtZW50b3IsIHRvby48L3A+PHA+VGhlIGNvbWJpbmF0aW9uIG9mIHBvd2VyLCBmZWFyLCBhbmQgbWFuaWEgY2FuIGJlIGRlYWRseS4gVGhlIGxlYWRlciwgY29udmluY2VkIHRoYXQgaGUgbWlnaHQgYmUgYmV0cmF5ZWQsIGFjdHMgZmlyc3QgYW5kIGJldHJheXMgb3RoZXJzIGZpcnN0LiBBZnJhaWQgdGhhdCBoZSdzIG5vdCB3ZWxsIGxpa2VkLCBoZSB3b3JrcyBzbyBoYXJkIHRvIGdldCBvdGhlcnMgdG8gbGlrZSBoaW0gdGhhdCBpdCBoYXMgdGhlIG9wcG9zaXRlIGVmZmVjdC4gQ29udmluY2VkIG9mIG1pc21hbmFnZW1lbnQsIGhlIG1pY3JvbWFuYWdlcyBhbmQgYmVjb21lcyB0aGUgc291cmNlIG9mIHRoZSBtaXNtYW5hZ2VtZW50LiBBbmQgb24gYW5kIG9uJm1kYXNoO3RoZSB0aGluZ3Mgd2UgZmVhciBvciBkcmVhZCwgd2UgYmxpbmRseSBpbmZsaWN0IG9uIG91cnNlbHZlcy48L3A+PHA+VGhlIG5leHQgdGltZSB5b3UgYXJlIGFmcmFpZCBvZiBzb21lIHN1cHBvc2VkbHkgZGlzYXN0cm91cyBvdXRjb21lLCByZW1lbWJlciB0aGF0IGlmIHlvdSBkb24ndCBjb250cm9sIHlvdXIgaW1wdWxzZXMsIGlmIHlvdSBsb3NlIHlvdXIgc2VsZi1jb250cm9sLCB5b3UgbWF5IGJlIHRoZSB2ZXJ5IHNvdXJjZSBvZiB0aGUgZGlzYXN0ZXIgeW91IHNvIGZlYXIuIEl0IGhhcyBoYXBwZW5lZCB0byBzbWFydGVyIGFuZCBtb3JlIHBvd2VyZnVsIGFuZCBtb3JlIHN1Y2Nlc3NmdWwgcGVvcGxlLiBJdCBjYW4gaGFwcGVuIHRvIHVzIHRvby48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgOCIsDQogICAgInRvcGljIjogIkRpZCBUaGF0IE1ha2UgWW91IEZlZWwgQmV0dGVyIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiWW91IGNyeSwgJmxzcXVvO0knbSBzdWZmZXJpbmcgc2V2ZXJlIHBhaW4hJnJzcXVvOyBBcmUgeW91IHRoZW4gcmVsaWV2ZWQgZnJvbSBmZWVsaW5nIGl0IGlmIHlvdSBiZWFyIGl0IGluIGFuIHVubWFubHkgd2F5PyIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJNb3JhbCBMZXR0ZXJzLCA3OC4xNyINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGUgbmV4dCB0aW1lIHNvbWVvbmUgZ2V0cyB1cHNldCBuZWFyIHlvdSZtZGFzaDtjcnlpbmcsIHllbGxpbmcsIGJyZWFraW5nIHNvbWV0aGluZywgYmVpbmcgcG9pbnRlZCBvciBjcnVlbCZtZGFzaDt3YXRjaCBob3cgcXVpY2tseSB0aGlzIHN0YXRlbWVudCB3aWxsIHN0b3AgdGhlbSBjb2xkOiA8cT5JIGhvcGUgdGhpcyBpcyBtYWtpbmcgeW91IGZlZWwgYmV0dGVyLjwvcT4gQmVjYXVzZSwgb2YgY291cnNlLCBpdCBpc24ndC4gT25seSBpbiB0aGUgYnViYmxlIG9mIGV4dHJlbWUgZW1vdGlvbiBjYW4gd2UganVzdGlmeSBhbnkgb2YgdGhhdCBraW5kIG9mIGJlaGF2aW9yJm1kYXNoO2FuZCB3aGVuIGNhbGxlZCB0byBhY2NvdW50IGZvciBpdCwgd2UgdXN1YWxseSBmZWVsIHNoZWVwaXNoIG9yIGVtYmFycmFzc2VkLjwvcD48cD5JdCdzIHdvcnRoIGFwcGx5aW5nIHRoYXQgc3RhbmRhcmQgdG8geW91cnNlbGYuIFRoZSBuZXh0IHRpbWUgeW91IGZpbmQgeW91cnNlbGYgaW4gdGhlIG1pZGRsZSBvZiBhIGZyZWFrb3V0LCBvciBtb2FuaW5nIGFuZCBncm9hbmluZyB3aXRoIHlvdXJzZWxmIGluIHRoZSBmbHVsaWtlIHN5bXB0b21zLCBvciBjcnlpbmcgdGVhcnMgb2YgcmVncmV0LCBqdXN0IGFzazogPGVtPklzIHRoaXMgYWN0dWFsbHkgbWFraW5nIG1lIGZlZWwgYmV0dGVyPyBJcyB0aGlzIGFjdHVhbGx5IHJlbGlldmluZyBhbnkgb2YgdGhlIHN5bXB0b21zIEkgd2lzaCB3ZXJlIGdvbmU/PC9lbT48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiPGJsb2NrcXVvdGU+T3RoZXJzIG1heSBodXJ0IHlvdSwgYnV0IHlvdXIgbWluZCBjYW4gcmVtYWluIGNhbG0uIFdoZW4gdGhlIG1pbmQgaXMgZGlzY2lwbGluZWQsIHN1ZmZlcmluZyBjYW5ub3QgZGlzdHVyYiB5b3UuPGJyPjxjaXRlPiZtZGFzaDtEaGFtbWFwYWRhLCA2PC9jaXRlPjwvYmxvY2txdW90ZT48YmxvY2txdW90ZT5JZiB0aGVyZSBpcyBhIHJlbWVkeSwgdGhlbiB3aGF0IGlzIHRoZSB1c2Ugb2YgZnJ1c3RyYXRpb24/IElmIHRoZXJlIGlzIG5vIHJlbWVkeSwgdGhlbiB3aGF0IGlzIHRoZSB1c2Ugb2YgZnJ1c3RyYXRpb24/PGJyPjxjaXRlPiZtZGFzaDtTaGFudGlkZXZhPC9jaXRlPjwvYmxvY2txdW90ZT4iDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJGZWJydWFyeSA5IiwNCiAgICAidG9waWMiOiAiWW91IERvbid0IEhhdmUgdG8gSGF2ZSBhbiBPcGluaW9uIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiV2UgaGF2ZSB0aGUgcG93ZXIgdG8gaG9sZCBubyBvcGluaW9uIGFib3V0IGEgdGhpbmcgYW5kIHRvIG5vdCBsZXQgaXQgdXBzZXQgb3VyIHN0YXRlIG9mIG1pbmQmbWRhc2g7Zm9yIHRoaW5ncyBoYXZlIG5vIG5hdHVyYWwgcG93ZXIgdG8gc2hhcGUgb3VyIGp1ZGdtZW50cy4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMgNi41MiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5IZXJlJ3MgYSBmdW5ueSBleGVyY2lzZTogdGhpbmsgYWJvdXQgYWxsIHRoZSB1cHNldHRpbmcgdGhpbmdzIHlvdSA8ZW0+ZG9uJ3Q8L2VtPiBrbm93IGFib3V0Jm1kYXNoO3N0dWZmIHBlb3BsZSBtaWdodCBoYXZlIHNhaWQgYWJvdXQgeW91IGJlaGluZCB5b3VyIGJhY2ssIG1pc3Rha2VzIHlvdSBtaWdodCBoYXZlIG1hZGUgdGhhdCBuZXZlciBjYW1lIHRvIHlvdXIgYXR0ZW50aW9uLCB0aGluZ3MgeW91IGRyb3BwZWQgb3IgbG9zdCB3aXRob3V0IGV2ZW4gcmVhbGl6aW5nIGl0LiAgV2hhdCdzIHlvdXIgcmVhY3Rpb24/IFlvdSBkb24ndCBoYXZlIG9uZSBiZWNhdXNlIHlvdSBkb24ndCBrbm93IGFib3V0IGl0LjwvcD48cD5JbiBvdGhlciB3b3JkcywgaXQgPGVtPmlzPC9lbT4gcG9zc2libGUgdG8gaG9sZCBubyBvcGluaW9uIGFib3V0IGEgbmVnYXRpdmUgdGhpbmcuICBZb3UganVzdCBuZWVkIHRvIGN1bHRpdmF0ZSB0aGF0IHBvd2VyIGluc3RlYWQgb2Ygd2llbGRpbmcgaXQgYWNjaWRlbnRhbGx5LiAgRXNwZWNpYWxseSB3aGVuIGhhdmluZyBhbiBvcGluaW9uIGlzIGxpa2VseSB0byBtYWtlIHVzIGFnZ3JhdmF0ZWQuICBQcmFjdGljZSB0aGUgYWJpbGl0eSBvZiBoYXZpbmcgYWJzb2x1dGVseSBubyB0aG91Z2h0cyBhYm91dCBzb21ldGhpbmcmbWRhc2g7YWN0IGFzIGlmIHlvdSBoYWQgbm8gaWRlYSBpdCBldmVyIG9jY3VycmVkLiBPciB0aGF0IHlvdSd2ZSBuZXZlciBoZWFyZCBvZiBpdCBiZWZvcmUuICBMZXQgaXQgYmVjb21lIGlycmVsZXZhbnQgb3Igbm9uZXhpc3RlbnQgdG8geW91LiAgSXQnbGwgYmUgYSBsb3QgbGVzcyBwb3dlcmZ1bCB0aGlzIHdheS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiPGJsb2NrcXVvdGU+T3BpbmlvbnMgYXJlIGxpa2UgbmFpbHM7IHRoZSBtb3JlIHlvdSBoYW1tZXIgdGhlbSwgdGhlIGRlZXBlciB0aGV5IGdvLiAgPGJyPjxjaXRlPiZtZGFzaDtVbmtub3duPC9jaXRlPjwvYmxvY2txdW90ZT48YmxvY2txdW90ZT5Eb24ndCB3YXN0ZSB5b3VyIHRpbWUgd2l0aCBleHBsYW5hdGlvbnM6IHBlb3BsZSBvbmx5IGhlYXIgd2hhdCB0aGV5IHdhbnQgdG8gaGVhci4gIDxicj48Y2l0ZT4mbWRhc2g7UGF1bG8gQ29lbGhvPC9jaXRlPjwvYmxvY2txdW90ZT48YmxvY2txdW90ZT5UaG9zZSB3aG8ga25vdyBkbyBub3Qgc3BlYWs7IHRob3NlIHdobyBzcGVhayBkbyBub3Qga25vdy4gIDxicj48Y2l0ZT4mbWRhc2g7TGFvIFR6dSwgPGVtPlRhbyBUZSBDaGluZzwvZW0+LCA1NjwvY2l0ZT48L2Jsb2NrcXVvdGU+PGJsb2NrcXVvdGU+VGhlIHdpc2UgbWFuIHNwZWFrcyBiZWNhdXNlIGhlIGhhcyBzb21ldGhpbmcgdG8gc2F5OyB0aGUgZm9vbCBzcGVha3MgYmVjYXVzZSBoZSBoYXMgdG8gc2F5IHNvbWV0aGluZy4gIDxicj48Y2l0ZT4mbWRhc2g7UGxhdG8gKGF0dHJpYnV0ZWQpPC9jaXRlPjwvYmxvY2txdW90ZT48YmxvY2txdW90ZT5JZiB5b3Ugd2lzaCB0byBiZSB3aXNlLCBsZWFybiB0byBxdWVzdGlvbiByZWFzb25hYmx5LCBsaXN0ZW4gY2FyZWZ1bGx5LCByZXNwb25kIGNhdXRpb3VzbHksIGFuZCBrZWVwIHNpbGVudCB3aGVuIHlvdSBoYXZlIG5vdGhpbmcgdG8gc2F5LiAgPGJyPjxjaXRlPiZtZGFzaDtKb2hhbm4gS2FzcGFyIExhdmF0ZXI8L2NpdGU+PC9ibG9ja3F1b3RlPjxibG9ja3F1b3RlPkJldHRlciB0byByZW1haW4gc2lsZW50IGFuZCBiZSB0aG91Z2h0IGEgZm9vbCB0aGFuIHRvIHNwZWFrIGFuZCByZW1vdmUgYWxsIGRvdWJ0LiAgPGJyPjxjaXRlPiZtZGFzaDtNYXJrIFR3YWluIChhdHRyaWJ1dGVkKTwvY2l0ZT48L2Jsb2NrcXVvdGU+PGJsb2NrcXVvdGU+RXZlbiBmb29scyBhcmUgdGhvdWdodCB3aXNlIGlmIHRoZXkga2VlcCBzaWxlbnQsIGFuZCBkaXNjZXJuaW5nIGlmIHRoZXkgaG9sZCB0aGVpciB0b25ndWVzLiAgPGJyPjxjaXRlPiZtZGFzaDtQcm92ZXJicyAxNzoyODwvY2l0ZT48L2Jsb2NrcXVvdGU+Ig0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgMTAiLA0KICAgICJ0b3BpYyI6ICJBbmdlciBpcyBCYWQgRnVlbCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlRoZXJlIGlzIG5vIG1vcmUgc3R1cGVmeWluZyB0aGluZyB0aGFuIGFuZ2VyLCBub3RoaW5nIG1vcmUgYmVudCBvbiBpdHMgb3duIHN0cmVuZ3RoLiBJZiBzdWNjZXNzZnVsLCBub25lIG1vcmUgYXJyb2dhbnQsIGlmIGZvaWxlZCwgbm9uZSBtb3JlIGluc2FuZSZtZGFzaDtzaW5jZSBpdCdzIG5vdCBkcml2ZW4gYmFjayBieSB3ZWFyaW5lc3MgZXZlbiBpbiBkZWZlYXQsIHdoZW4gZm9ydHVuZSByZW1vdmVzIGl0cyBhZHZlcnNhcnkgaXQgdHVybnMgaXRzIHRlZXRoIG9uIGl0c2VsZi4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiT24gQW5nZXIsIDMuMS41Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkFzIHRoZSBTdG9pY3MgaGF2ZSBzYWlkIG1hbnkgdGltZXMsIGdldHRpbmcgYW5ncnkgYWxtb3N0IG5ldmVyIHNvbHZlcyBhbnl0aGluZy4gIFVzdWFsbHksIGl0IG1ha2VzIHRoaW5ncyB3b3JzZS4gV2UgZ2V0IHVwc2V0LCB0aGVuIHRoZSBvdGhlciBwZXJzb24gZ2V0cyB1cHNldCZtZGFzaDtub3cgZXZlcnlvbmUgaXMgdXBzZXQsIGFuZCB0aGUgcHJvYmxlbSBpcyBubyBjbG9zZXIgdG8gZ2V0dGluZyBzb2x2ZWQuIDwvcD48cD5NYW55IHN1Y2Nlc3NmdWwgcGVvcGxlIHdpbGwgdHJ5IHRvIHRlbGwgeW91IHRoYXQgYW5nZXIgaXMgYSBwb3dlcmZ1bCBmdWVsIGluIHRoZWlyIGxpdmVzLiAgVGhlIGRlc2lyZSB0byA8cT5wcm92ZSB0aGVtIGFsbCB3cm9uZzwvcT4gb3IgPHE+c2hvdmUgaXQgaW4gdGhlaXIgZmFjZXM8L3E+IGhhcyBtYWRlIG1hbnkgYSBtaWxsaW9uYWlyZS4gIFRoZSBhbmdlciBhdCBiZWluZyBjYWxsZWQgZmF0IG9yIHN0dXBpZCBoYWQgY3JlYXRlZCBmaW5lIHBoeXNpY2FsIHNwZWNpbWVucyBhbmQgYnJpbGxpYW50IG1pbmRzLiBUaGUgYW5nZXIgYXQgYmVpbmcgcmVqZWN0ZWQgaGFzIG1vdGl2YXRlZCBtYW55IHRvIGNhcnZlIHRoZWlyIG93biBwYXRoLjwvcD48cD5CdXQgdGhhdCdzIHNob3J0c2lnaHRlZC4gIFN1Y2ggc3RvcmllcyBpZ25vcmUgdGhlIHBvbGx1dGlvbiBwcm9kdWNlZCBhcyBhIHNpZGUgZWZmZWN0IGFuZCB0aGUgd2VhciBhbmQgdGVhciBpdCBwdXQgb24gdGhlIGVuZ2luZS4gIEl0IGlnbm9yZXMgd2hhdCBoYXBwZW5zIHdoZW4gdGhhdCBpbml0aWFsIGFuZ2VyIHJ1bnMgb3V0Jm1kYXNoO2FuZCBob3cgbm93IG1vcmUgYW5kIG1vcmUgbXVzdCBiZSBnZW5lcmF0ZWQgdG8ga2VlcCB0aGUgbWFjaGluZSBnb2luZyAodW50aWwsIGV2ZW50dWFsbHksIHRoZSBvbmx5IHNvdXJjZSBsZWZ0IGlzIGFuZ2VyIGF0IG9uZXNlbGYpLiA8cT5IYXRlIGlzIHRvbyBncmVhdCBhIGJ1cmRlbiB0byBiZWFyLDwvcT4gTWFydGluIEx1dGhlciBLaW5nIEpyLiB3YXJuZWQgaGlzIGZlbGxvdyBjaXZpbCByaWdodHMgbGVhZGVycyBpbiAxOTY3LjwvcD48cD5UaGUgc2FtZSBpcyB0cnVlIGZvciBhbmdlciZtZGFzaDtpbiBmYWN0LCBpdCdzIHRydWUgZm9yIG1vc3QgZXh0cmVtZSBlbW90aW9ucy4gVGhleSBhcmUgdG94aWMgZnVlbC4gVGhlcmUncyBwbGVudHkgb2YgaXQgb3V0IGluIHRoZSB3b3JsZCwgbm8gcXVlc3Rpb24sIGJ1dCBuZXZlciB3b3J0aCB0aGUgY29zdHMgdGhhdCBjb21lIGFsb25nIHdpdGggaXQuPC9wPiIsDQogICAgInRob3VnaHRzIjogIldoYXQgdGhlIEJ1ZGRoYSBzYWlkIGFib3V0IGFuZ2VyPHVsPjxsaT5BbmdlciBpcyBhIGZvcm0gb2Ygc3VmZmVyaW5nLjwvbGk+PGxpPkFuZ2VyIGlzIG9uZSBvZiB0aGUgdGhyZWUgPHE+dW53aG9sZXNvbWUgcm9vdHM8L3E+IG9mIHRoZSBtaW5kLjwvbGk+PGxpPkFuZ2VyIGlzIHNlbGYtc2Fib3RhZ2luZy48L2xpPjxsaT5Ib2xkaW5nIG9udG8gYW5nZXIgaXMgbGlrZSBob2xkaW5nIGEgaG90IGNvYWwgaW4geW91ciBoYW5kLjwvbGk+PGxpPllvdSB3aWxsIGJlIHB1bmlzaGVkIGJ5IHlvdXIgYW5nZXIsIG5vdCBmb3IgaXQuPC9saT48bGk+QW5nZXIgY2FuIG5ldmVyIHJlbW92ZSBhbmdlci48L2xpPjwvdWw+PC91bD48YnI+PGJsb2NrcXVvdGU+SG9sZGluZyBvbnRvIGFuZ2VyIGlzIGxpa2UgZHJpbmtpbmcgcG9pc29uIGFuZCBleHBlY3RpbmcgdGhlIG90aGVyIHBlcnNvbiB0byBkaWUuICA8YnI+PGNpdGU+Jm1kYXNoO0J1ZGRoYSAoYXR0cmlidXRlZCk8L2NpdGU+PC9ibG9ja3F1b3RlPjxibG9ja3F1b3RlPk9uZSBzaG91bGQgZ2l2ZSB1cCBhbmdlciwgcmVub3VuY2UgcHJpZGUsIGFuZCBvdmVyY29tZSBhbGwgZmV0dGVycy4gTm8gc3VmZmVyaW5nIGJlZmFsbHMgb25lIHdobyBjbGluZ3MgdG8gbm90aGluZy4gIDxicj48Y2l0ZT4mbWRhc2g7RGhhbW1hcGFkYSwgMjIxLTIyMjwvY2l0ZT48L2Jsb2NrcXVvdGU+PGJsb2NrcXVvdGU+QSB3aXNlIG1hbiB3YXRjaGVzIGhpcyBhbmdlciBhcyBhIHRyYXZlbGVyIHdhdGNoZXMgcGFzc2luZyBjbG91ZHMmbWRhc2g7YWNrbm93bGVkZ2luZywgYnV0IG5vdCBncmFzcGluZy4gIDxicj48Y2l0ZT4mbWRhc2g7VW5rbm93bjwvY2l0ZT48L2Jsb2NrcXVvdGU+PGJsb2NrcXVvdGU+V2hhdGV2ZXIgaXMgYmVndW4gaW4gYW5nZXIgZW5kcyBpbiBzaGFtZS4gIDxicj48Y2l0ZT4mbWRhc2g7QmFuamFtaW4gRnJhbmtsaW48L2NpdGU+PC9ibG9ja3F1b3RlPiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkZlYnJ1YXJ5IDExIiwNCiAgICAidG9waWMiOiAiSGVybyBvciBOZXJvPyIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIk91ciBzb3VsIGlzIHNvbWV0aW1lcyBhIGtpbmcsIGFuZCBzb21ldGltZXMgYSB0eXJhbnQuICBBIGtpbmcsIGJ5IGF0dGVuZGluZyB0byB3aGF0IGlzIGhvbm9yYWJsZSwgcHJvdGVjdHMgdGhlIGdvb2QgaGVhbHRoIG9mIHRoZSBib2R5IGluIGl0cyBjYXJlLCBhbmQgZ2l2ZXMgaXQgbm8gYmFzZSBvciBzb3JkaWQgY29tbWFuZC4gIEJ1dCBhbiB1bmNvbnRyb2xsZWQsIGRlc2lyZS1mdWVsZWQsIG92ZXItaW5kdWxnZWQgc291bCBpcyB0dXJuZWQgZnJvbSBhIGtpbmcgaW50byB0aGF0IG1vc3QgZmVhcmVkIGFuZCBkZXRlc3RlZCB0aGluZyZtZGFzaDthIHR5cmFudC4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiTW9yYWwgTGV0dGVycywgMTE0LjI0Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoZXJlIGlzIHRoYXQgc2F5aW5nIHRoYXQgYWJzb2x1dGUgcG93ZXIgY29ycnVwdHMgYWJzb2x1dGVseS4gQXQgZmlyc3QgZ2xhbmNlLCB0aGF0J3MgdHJ1ZS4gIFNlbmVjYSdzIHB1cGlsLCBOZXJvLCBhbmQgaGlzIGxpdGFueSBvZiBjcmltZXMgYW5kIG11cmRlcnMgaXMgYSBwZXJmZWN0IGV4YW1wbGUuIEFub3RoZXIgZW1wZXJvciwgRG9taXRpYW4sIGFyYml0cmFyaWx5IGJhbmlzaGVkIGFsbCBwaGlsb3NvcGhlcnMgZnJvbSBSb21lIChFcGljdGV0dXMgd2FzIGZvcmNlZCB0byBmbGVlIGFzIGEgcmVzdWx0KS4gTWFueSBvZiBSb21lJ3MgZW1wZXJvcnMgd2VyZSB0eXJhbnRzLiBZZXQsIG5vdCBtYW55IHllYXJzIGxhdGVyLCBFcGljdGV0dXMgd291bGQgYmVjb21lIGEgY2xvc2UgZnJpZW5kIG9mIGFub3RoZXIgZW1wZXJvciwgSGFkcmlhbiwgd2hvIHdvdWxkIGhlbHAgTWFyY3VzIEF1cmVsaXVzIHRvIHRoZSB0aHJvbmUsIG9uZSBvZiB0aGUgdHJ1ZXN0IGV4YW1wbGVzIG9mIGEgd2lzZSBwaGlsb3NvcGhlciBraW5nLjwvcD48cD5TbywgaXQncyBub3Qgc28gY2xlYXIgdGhhdCBwb3dlciA8ZW0+YWx3YXlzPC9lbT4gY29ycnVwdHMuIEluIGZhY3QsIGl0IGxvb2tzIGxpa2UgaXQgY29tZXMgZG93biwgaW4gbWFueSB3YXlzIHRvIHRoZSBpbm5lciBzdHJlbmd0aCBhbmQgc2VsZi1hd2FyZW5lc3Mgb2YgaW5kaXZpZHVhbHMmbWRhc2g7d2hhdCB0aGV5IHZhbHVlLCB3aGF0IGRlc2lyZXMgdGhleSBrZWVwIGluIGNoZWNrLCB3aGV0aGVyIHRoZWlyIHVuZGVyc3RhbmRpbmcgb2YgZmFpcm5lc3MgYW5kIGp1c3RpY2UgY2FuIGNvdW50ZXJhY3QgdGhlIHRlbXB0YXRpb25zIG9mIHVubGltaXRlZCB3ZWFsdGggYW5kIGRlZmVyZW5jZS48L3A+PHA+VGhlIHNhbWUgaXMgdHJ1ZSBmb3IgeW91LiBCb3RoIHBlcnNvbmFsbHkgYW5kIHByb2Zlc3Npb25hbGx5LiBUeXJhbnQgb3Iga2luZz8gSGVybyBvciBOZXJvPyBXaGljaCB3aWxsIHlvdSBiZT88L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgMTIiLA0KICAgICJ0b3BpYyI6ICJQcm90ZWN0IFlvdXIgUGVhY2Ugb2YgTWluZCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIktlZXAgY29uc3RhbnQgZ3VhcmQgb3ZlciB5b3VyIHBlcmNlcHRpb25zLCBmb3IgaXQgaXMgbm8gc21hbGwgdGhpbmcgeW91IGFyZSBwcm90ZWN0aW5nLCBidXQgeW91ciByZXNwZWN0LCB0cnVzdHdvcnRoaW5lc3MgYW5kIHN0ZWFkaW5lc3MsIHBlYWNlIG9mIG1pbmQsIGZyZWVkb20gZnJvbSBwYWluIGFuZCBmZWFyLCBpbiBhIHdvcmQgeW91ciBmcmVlZG9tLiBGb3Igd2hhdCB3b3VsZCB5b3Ugc2VsbCB0aGVzZSB0aGluZ3M/IiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDQuMy42Yi04Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoZSBkeXNmdW5jdGlvbmFsIGpvYiB0aGF0IHN0cmVzc2VzIHlvdSBvdXQsIGEgY29udGVudGlvdXMgcmVsYXRpb25zaGlwLCBsaWZlIGluIHRoZSBzcG90bGlnaHQuIFN0b2ljaXNtLCBiZWNhdXNlIGlzIGhlbHBzIHVzIG1hbmFnZSBhbmQgdGhpbmsgdGhyb3VnaCBvdXIgZW1vdGlvbmFsIHJlYWN0aW9ucywgY2FuIG1ha2UgdGhlc2Uga2luZHMgb2Ygc2l0dWF0aW9ucyBlYXNpZXIgdG8gYmVhci4gIEl0IGNhbiBoZWxwIHlvdSBtYW5hZ2UgYW5kIG1pdGlnYXRlIHRoZSB0cmlnZ2VycyB0aGF0IHNlZW0gdG8gYmUgc28gY29uc3RhbnRseSB0cmlwcGVkLiA8L3A+PHA+QnV0IGhlcmUncyBhIHF1ZXN0aW9uOiBXaHkgYXJlIHlvdSBzdWJqZWN0aW5nIHlvdXJzZWxmIHRvIHRoaXM/ICBJcyB0aGlzIHJlYWxseSB0aGUgZW52aXJvbm1lbnQgeW91IHdlcmUgbWFkZSBmb3I/ICBUbyBiZSBwcm92b2tlZCBieSBuYXN0eSBlbWFpbHMgYW5kIGFuIGVuZGxlc3MgcGFyYWRlIG9mIHdvcmtwbGFjZSBwcm9ibGVtcz8gIE91ciBhZHJlbmFsIGdsYW5kcyBjYW4gaGFuZGxlIG9ubHkgc28gbXVjaCBiZWZvcmUgdGhleSBiZWNvbWUgZXhoYXVzdGVkLiAgU2hvdWxkbid0IHlvdSBwcmVzZXJ2ZSB0aGVtIGZvciBsaWZlLWFuZC1kZWF0aCBzaXR1YXRpb25zPyA8L3A+PHA+U28geWVzLCB1c2UgU3RvaWNpc20gdG8gbWFuYWdlIHRoZXNlIGRpZmZpY3VsdGllcy4gIEJ1dCBkb24ndCBmb3JnZSB0byBhc2s6IDxlbT5JcyB0aGlzIHJlYWxseSB0aGUgbGlmZSBJIHdhbnQ/PC9lbT4gRXZlcnkgdGltZSB5b3UgZ2V0IHVwc2V0LCBhIGxpdHRsZSBiaXQgb2YgbGlmZSBsZWF2ZXMgdGhlIGJvZHkuIEFyZSB0aGVzZSByZWFsbHkgdGhlIHRoaW5ncyBvbiB3aGljaCB5b3Ugd2FudCB0byBzcGVuZCB0aGF0IHByaWNlbGVzcyByZXNvdXJjZT8gRG9uJ3QgYmUgYWZyYWlkIHRvIG1ha2UgYSBjaGFuZ2UmbWRhc2g7YSBiaWcgb25lLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJGZWJydWFyeSAxMyIsDQogICAgInRvcGljIjogIlBsZWFzdXJlIENhbiBCZWNvbWUgUHVuaXNobWVudCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIldoZW5ldmVyIHlvdSBnZXQgYW4gaW1wcmVzc2lvbiBvZiBzb21lIHBsZWFzdXJlLCBhcyB3aXRoIGFueSBpbXByZXNzaW9uLCBndWFyZCB5b3Vyc2VsZiBmcm9tIGJlaW5nIGNhcnJpZWQgYXdheSBieSBpdCwgbGV0IGl0IGF3YWl0IHlvdXIgYWN0aW9uLCBnaXZlIHlvdXJzZWxmIGEgcGF1c2UuICBBZnRlciB0aGF0LCBicmluZyB0byBtaW5kIGJvdGggdGltZXMsIGZpcnN0IHdoZW4geW91IGhhdmUgZW5qb3llZCB0aGUgcGxlYXN1cmUgYW5kIGxhdGVyIHdoZW4geW91IHdpbGwgcmVncmV0IGl0IGFuZCBoYXRlIHlvdXJzZWxmLiAgVGhlbiBjb21wYXJlIHRvIHRob3NlIHRoZSBqb3kgYW5kIHNhdGlzZmFjdGlvbiB5b3UnZCBmZWVsIGZvciBhYnN0YWluaW5nIGFsdG9nZXRoZXIuICBIb3dldmVyLCBpZiBhIHNlZW1pbmdseSBhcHByb3ByaWF0ZSB0aW1lIGFyaXNlcyB0byBhY3Qgb24gaXQsIGRvbid0IGJlIG92ZXJjb21lIGJ5IGl0cyBjb21mb3J0LCBwbGVhc2FudG5lc3MsIGFuZCBhbGx1cmUmbWRhc2g7YnV0IGFnYWluc3QgYWxsIG9mIHRoaXMsIGhvdyBtdWNoIGJldHRlciB0aGUgY29uc2Npb3VzbmVzcyBvZiBjb25xdWVyaW5nIGl0LiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJFbmNoaXJpZGlvbiwgMzQiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+U2VsZi1Db250cm9sIGlzIGEgZGlmZmljdWx0IHRoaW5nLCBubyBxdWVzdGlvbi4gIFdoaWNoIGlzIHdoeSBhIHBvcHVsYXIgdHJpY2sgZnJvbSBkaWV0aW5nIG1pZ2h0IGJlIGhlbHBmdWwuICBTb21lIGRpZXRzIGFsbG93IGEgPHE+Y2hlYXQgZGF5PC9xPiZtZGFzaDtvbmUgZGF5IHBlciB3ZWVrIGluIHdoaWNoIGRpZXRlcnMgY2FuIGVhdCBhbnl0aGluZyBhbmQgZXZlcnl0aGluZyB0aGV5IHdhbnQuICBJbmRlZWQsIHRoZXkncmUgZW5jb3VyYWdlZCB0byB3cml0ZSBhIGxpc3QgZHVyaW5nIHRoZSB3ZWVrIG9mIGFsbCB0aGUgZm9vZHMgdGhleSBjcmF2ZWQgc28gdGhleSBjYW4gZW5qb3kgdGhlbSBhbGwgYXQgb25jZSBhcyBhIHRyZWF0ICh0aGUgdGhpbmtpbmcgYmVpbmcgdGhhdCBpZiB5b3UncmUgZWF0aW5nIGhlYWx0aHkgc2l4IG91dCBvZiBzZXZlbiBkYXlzLCB5b3UncmUgc3RpbGwgYWhlYWQpLjwvcD48cD5BdCBmaXJzdCwgdGhpcyBzb3VuZHMgbGlrZSBhIGRyZWFtLCBidXQgYW55b25lIHdobyBoYXMgYWN0dWFsbHkgZG9uZSB0aGlzIGtub3dzIHRoZSB0cnV0aDogZWFjaCBjaGVhdCBkYXkgeW91IGVhdCB5b3Vyc2VsZiBzaWNrIGFuZCBoYXRlIHlvdXJzZWxmIGFmdGVyd2FyZC4gIFNvb24gZW5vdWdoLCB5b3UncmUgd2lsbGluZ2x5IGFic3RhaW5pbmcgZnJvbSBjaGVhdGluZyBhdCBhbGwuICBCZWNhdXNlIHlvdSBkb24ndCBuZWVkIGl0LCBhbmQgeW91IGRlZmluaXRlbHkgZG9uJ3Qgd2FudCBpdC4gIEl0J3Mgbm90IHVubGlrZSBhIHBhcmVudCBjYXRjaGluZyBoZXIgY2hpbGQgd2l0aCBjaWdhcmV0dGVzIGFuZCBmb3JjaW5nIGhpbSB0byBzbW9rZSB0aGUgd2hvbGUgcGFjay48L3A+PHA+SXQncyBpbXBvcnRhbnQgdG8gY29ubmVjdCB0aGUgc28tY2FsbGVkIHRlbXB0YXRpb24gd2l0aCBpdHMgYWN0dWFsIGVmZmVjdHMuICBPbmNlIHlvdSB1bmRlcnN0YW5kIHRoYXQgaW5kdWxnaW5nIG1pZ2h0IGFjdHVhbGx5IGJlIHdvcnNlIHRoYXQgcmVzaXN0aW5nLCB0aGUgdXJnZSBiZWdpbnMgdG8gbG9zZSBpdHMgYXBwZWFsLiAgSW4gdGhpcyB3YXksIHNlbGYtY29udHJvbCBiZWNvbWVzIHRoZSByZWFsIHBsZWFzdXJlLCBhbmQgdGhlIHRlbXB0YXRpb24gYmVjb21lcyB0aGUgcmVncmV0LjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJGZWJydWFyeSAxNCIsDQogICAgInRvcGljIjogIlRoaW5rIEJlZm9yZSBZb3UgQWN0IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiRm9yIHRvIGJlIHdpc2UgaXMgb25seSBvbmUgdGhpbmcmbWRhc2g7dG8gZml4IG91ciBhdHRlbnRpb24gb24gb3VyIGludGVsbGlnZW5jZSwgd2hpY2ggZ3VpZGVzIGFsbCB0aGluZ3MgZXZlcnl3aGVyZS4iLA0KICAgICAgICAiYXV0aG9yIjogIkhlcmFjbGl0dXMiLA0KICAgICAgICAic291cmNlIjogIkxpdmVzIG9mIHRoZSBFbWluZW50IFBoaWxvc29waGVycywgOS4xIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPjxlbT5XaHkgZGlkIEkgZG8gdGhhdD88L2VtPiB5b3UndmUgcHJvYmFibHkgYXNrZWQgeW91cnNlbGYuICBXZSBhbGwgaGF2ZS4gIDxlbT5Ib3cgY291bGQgSSBoYXZlIGJlZW4gc28gc3R1cGlkPyAgV2hhdCB3YXMgSSB0aGlua2luZz88L2VtPjwvcD48cD5Zb3Ugd2VyZW4ndCZtZGFzaDt0aGF0J3MgdGhlIHByb2JsZW0uICBXaXRoaW4gdGhhdCBoZWFkIG9mIHlvdXJzIGlzIGFsbCB0aGUgcmVhc29uIGFuZCBpbnRlbGxpZ2VuY2UgeW91IG5lZWQuICBJdCdzIG1ha2luZyBzdXJlIHRoYXQgaXQncyBkZWZlcnJlZCB0byBhbmQgdXRpbGl6ZWQgdGhhdCdzIHRoZSB0b3VnaCBwYXJ0LiAgSXQncyBtYWtpbmcgc3VyZSB5b3VyIG1pbmQgaXMgaW4gY2hhcmdlLCBub3QgeW91ciBlbW90aW9ucywgbm90IHlvdXIgaW1tZWRpYXRlIHBoeXNpY2FsIHNlbnNhdGlvbnMsIG5vdCB5b3VyIHN1cmdpbmcgaG9ybW9uZXMuPC9wPjxwPkZpeCB5b3VyIGF0dGVudGlvbiBvbiB5b3VyIGludGVsbGlnZW5jZS4gIExldCBpdCBkbyBpdHMgdGhpbmcuPC9wIiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgMTUiLA0KICAgICJ0b3BpYyI6ICJPbmx5IEJhZCBEcmVhbXMiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJDbGVhciB5b3VyIG1pbmQgYW5kIGdldCBhIGhvbGQgb24geW91cnNlbGYgYW5kLCBhcyB3aGVuIGF3YWtlbmVkIGZyb20gc2xlZXAgYW5kIHJlYWxpemluZyBpdCB3YXMgb25seSBhIGJhZCBkcmVhbSB1cHNldHRpbmcgeW91LCB3YWtlIHVwIGFuZCBzZWUgdGhhdCB3aGF0J3MgdGhlcmUgaXMganVzdCBsaWtlIHRob3NlIGRyZWFtcy4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMgNi4zMSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGUgYXV0aG9yIFJheW1vbmQgQ2hhbmRsZXIgd2FzIGRlc2NyaWJpbmcgbW9zdCBvZiB1cyB3aGVuIGhlIHdyb3RlIGluIGEgbGV0dGVyIHRvIGhpcyBwdWJsaXNoZXIsIDxxPkkgbmV2ZXIgbG9va2VkIGJhY2ssIGFsdGhvdWdoIEkgaGFkIG1hbnkgdW5lYXN5IHBlcmlvZHMgbG9va2luZyBmb3J3YXJkLjwvcT4gIFRob21hcyBKZWZmZXJzb24gb25jZSBqb2tlZCBpbiBhIGxldHRlciB0byBKb2huIEFkYW1zLCA8cT5Ib3cgbXVjaCBwYWluIGhhdmUgY29zdCB1cyB0aGUgZXZpbHMgd2hpY2ggaGF2ZSBuZXZlciBoYXBwZW5lZCE8L3E+ICBBbmQgU2VuZWNhIHdvdWxkIHB1dCBpdCBiZXN0OiA8cT5UaGVyZSBpcyBub3RoaW5nIHNvIGNlcnRhaW4gaW4gb3VyIGZlYXIgdGhhdCdzIG5vdCB5ZXQgbW9yZSBjZXJ0YWluIGluIHRoZSBmYWN0IHRoYXQgbW9zdCBvZiB3aGF0IHdlIGRyZWFkIGNvbWVzIHRvIG5vdGhpbmcuPC9xPjwvcD48cD5NYW55IG9mIHRoZSB0aGluZ3MgdGhhdCB1cHNldCB1cywgdGhlIFN0b2ljcyBiZWxpZXZlZCwgYXJlIGEgcHJvZHVjdCBvZiB0aGUgaW1hZ2luYXRpb24sIG5vdCByZWFsaXR5LiAgTGlrZSBkcmVhbXMsIHRoZXkgYXJlIHZpdmlkIGFuZCByZWFsaXN0aWMgYXQgdGhlIHRpbWUgYnV0IHByZXBvc3Rlcm91cyBvbmNlIHdlIGNvbWUgb3V0IG9mIGl0LiAgSW4gYSBkcmVhbSwgd2UgbmV2ZXIgc3RvcCB0byB0aGluayBhbmQgc2F5OiA8cT5Eb2VzIHRoaXMgbWFrZSBhbnkgc2Vuc2U/PC9xPiAgTm8sIHdlIGdvIGFsb25nIHdpdGggaXQuICBUaGUgc2FtZSBnb2VzIHdpdGggb3VyIGZsaWdodHMgb2YgYW5nZXIgb3IgZmVhciBvciBvdGhlciBleHRyZW1lIGVtb3Rpb25zLjwvcD48cD5HZXR0aW5nIHVwc2V0IGlzIGxpa2UgY29udGludWluZyB0aGUgZHJlYW0gd2hpbGUgeW91J3JlIGF3YWtlLiAgVGhlIHRoaW5nIHRoYXQgcHJvdm9rZWQgeW91IHdhc24ndCByZWFsJm1kYXNoO2J1dCB5b3VyIHJlYWN0aW9uIHdhcy4gIEFuZCBzbyBmcm9tIHRoZSBmYWtlIGNvbWVzIHJlYWwgY29uc2VxdWVuY2VzLiAgV2hpY2ggaXMgd2h5IHlvdSBuZWVkIHRvIHdha2UgdXAgcmlnaHQgbm93IGluc3RlYWQgb2YgY3JlYXRpbmcgYSBuaWdodG1hcmUuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkZlYnJ1YXJ5IDE2IiwNCiAgICAidG9waWMiOiAiRG9uJ3QgTWFrZSBUaGluZ3MgSGFyZGVyIFRoYW4gVGhleSBOZWVkIFRvIEJlIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiSWYgc29tZW9uZSBhc2tzIHlvdSBob3cgdG8gd3JpdGUgeW91ciBuYW1lLCB3b3VsZCB5b3UgYmFyayBvdXQgZWFjaCBsZXR0ZXI/ICBBbmQgaWYgdGhleSBnZXQgYW5ncnksIHdvdWxkIHlvdSB0aGVuIHJldHVybiB0aGUgYW5nZXI/ICAgV291bGRuJ3QgeW91IHJhdGhlciBnZW50bHkgc3BlbGwgb3V0IGVhY2ggbGV0dGVyIGZvciB0aGVtPyAgU28gdGhlbiwgcmVtZW1iZXIgaW4gbGlmZSB0aGF0IHlvdXIgZHV0aWVzIGFyZSB0aGUgc3VtIG9mIGluZGl2aWR1YWwgYWN0cy4gIFBheSBhdHRlbnRpb24gdG8gZWFjaCBvZiB0aGVzZSBhcyB5b3UgZG8geW91ciBkdXR5IC4gLiAuIGp1c3QgbWV0aG9kaWNhbGx5IGNvbXBsZXRlIHlvdXIgdGFzay4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMgNi4yNiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5IZXJlJ3MgYSBjb21tb24gc2NlbmFyaW8uICBZb3UncmUgd29ya2luZyB3aXRoIGEgZnJ1c3RyYXRpbmcgY293b3JrZXIgb3IgYSBkaWZmaWN1bHQgYm9zcy4gIFRoZXkgYXNrIHlvdSB0byBkbyBzb21ldGhpbmcgYW5kLCBiZWNhdXNlIHlvdSBkaXNsaWtlIHRoZSBtZXNzZW5nZXIsIHlvdSBpbW1lZGlhdGVseSBvYmplY3QuICBUaGVyZSdzIHRoaXMgcHJvYmxlbSBvciB0aGF0IG9uZSwgb3IgdGhlaXIgcmVxdWVzdCBpcyBvYm5veGlvdXMgYW5kIHJ1ZGUuICBTbyB5b3UgdGVsbCB0aGVtLCA8cT5ObywgSSdtIG5vdCBnb2luZyB0byBkbyBpdC48L3E+ICBUaGVuIHRoZXkgcmV0YWxpYXRlIGJ5IG5vdCBkb2luZyBzb21ldGhpbmcgdGhhdCB5b3UgaGFkIHByZXZpb3VzbHkgYXNrZWQgb2YgdGhlbS4gIEFuZCBzbyB0aGUgY29uZmxpY3QgZXNjYWxhdGVzLjwvcD48cD5NZWFud2hpbGUsIGlmIHlvdSBjb3VsZCBzdGVwIGJhY2sgYW5kIHNlZSBpdCBvYmplY3RpdmVseSwgeW91J2QgcHJvYmFibHkgc2VlIHRoYXQgbm90IDxlbT5ldmVyeXRoaW5nPC9lbT4gdGhleSdyZSBhc2tpbmcgZm9yIGlzIHVucmVhc29uYWJsZS4gIEluIGZhY3QsIHNvbWUgb2YgaXQgaXMgcHJldHR5IGVhc3kgdG8gZG8gb3IgaXMsIGF0IGxlYXN0LCBhZ3JlZWFibGUuICBBbmQgaWYgeW91IGRpZCBpdCwgaXQgbWlnaHQgbWFrZSB0aGUgcmVzdCBvZiB0aGUgdGFza3MgYSBiaXQgbW9yZSB0b2xlcmFibGUgdG9vLiAgUHJldHR5IHNvb24sIHlvdSd2ZSBkb25lIHRoZSBlbnRpcmUgdGhpbmcuPC9wPjxwPkxpZmUgKGFuZCBvdXIgam9iKSBpcyBkaWZmaWN1bHQgZW5vdWdoLiAgTGV0J3Mgbm90IG1ha2UgaXQgaGFyZGVyIGJ5IGdldHRpbmcgZW1vdGlvbmFsIGFib3V0IGluc2lnbmlmaWNhbnQgbWF0dGVycyBvciBkaWdnaW5nIGluIGZvciBiYXR0bGVzIHdlIGRvbid0IGFjdHVhbGx5IGNhcmUgYWJvdXQuICBMZXQncyBub3QgbGV0IGVtb3Rpb24gZ2V0IGluIHRoZSB3YXkgb2YgPGkgbGFuZz1cImVsXCI+zrrOsc644b+GzrrOv869PC9pPiwgdGhlIHNpbXBsZSwgYXBwcm9wcmlhdGUgYWN0aW9ucyBvbiB0aGUgcGF0aCB0byB2aXJ0dWUuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkZlYnJ1YXJ5IDE3IiwNCiAgICAidG9waWMiOiAiVGhlIEVuZW15IG9mIEhhcHBpbmVzcyIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkl0IGlzIHF1aXRlIGltcG9zc2libGUgdG8gdW5pdGUgaGFwcGluZXNzIHdpdGggYSB5ZWFybmluZyBmb3Igd2hhdCB3ZSBkb24ndCBoYXZlLiAgSGFwcGluZXNzIGhhcyBhbGwgdGhhdCBpdCB3YW50cywgYW5kIHJlc2VtYmxpbmcgdGhlIHdlbGwtZmVkLCB0aGVyZSBzaG91bGRuJ3QgYmUgaHVuZ2VyIG9yIHRoaXJzdC4iLA0KICAgICAgICAiYXV0aG9yIjogIkVwaWN0ZXR1cyIsDQogICAgICAgICJzb3VyY2UiOiAiRGlzY291cnNlcywgMy4yNC4xNyINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD48ZW0+SSdsbCBiZSBoYXBweSB3aGVuIEkgZ3JhZHVhdGU8L2VtPiwgd2UgdGVsbCBvdXJzZWx2ZXMuICA8ZW0+SSdsbCBiZSBoYXBweSB3aGVuIEkgZ2V0IHRoaXMgcHJvbW90aW9uLCB3aGVuIHRoaXMgZGlldCBwYXlzIG9mZiwgd2hlbiBJIGhhdmUgdGhlIG1vbmV5IHRoYXQgbXkgcGFyZW50cyBuZXZlciBoYWQ8L2VtPi4gIENvbmRpdGlvbmFsIGhhcHBpbmVzcyBpcyB3aGF0IHBzeWNob2xvZ2lzdHMgY2FsbCB0aGlzIGtpbmQgb2YgdGhpbmtpbmcuICBMaWtlIHRoZSBob3Jpem9uLCB5b3UgY2FuIHdhbGsgZm9yIG1pbGVzIGFuZCBtaWxlcyBhbmQgbmV2ZXIgcmVhY2ggaXQuICBZb3Ugd29uJ3QgZXZlbiBnZXQgYW55IGNsb3Nlci48L3A+PHA+RWFnZXJseSBhbnRpY2lwYXRpbmcgc29tZSBmdXR1cmUgZXZlbnQsIHBhc3Npb25hdGVseSBpbWFnaW5pbmcgc29tZXRoaW5nIHlvdSBkZXNpcmUsIGxvb2tpbmcgZm9yd2FyZCB0byBzb21lIGhhcHB5IHNjZW5hcmlvJm1kYXNoO2FzIHBsZWFzdXJhYmxlIGFzIHRoZXNlIGFjdGl2aXRpZXMgbWlnaHQgc2VlbSwgdGhleSBydWluIHlvdXIgY2hhbmNlIGF0IGhhcHBpbmVzcyBoZXJlIGFuZCBub3cuICBMb2NhdGUgdGhhdCB5ZWFybmluZyBmb3IgPGVtPm1vcmUsIGJldHRlciwgc29tZWRheTwvZW0+IGFuZCBzZWUgaXQgZm9yIHdoYXQgaXQgaXM6IHRoZSBlbmVteSBvZiB5b3VyIGNvbnRlbnRtZW50LiAgQ2hvb3NlIGl0IG9yIHlvdXIgaGFwcGluZXNzLiAgQXMgRXBpY3RldHVzIHNheXMsIHRoZSB0d28gYXJlIG5vdCBjb21wYXRpYmxlLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJGZWJydWFyeSAxOCIsDQogICAgInRvcGljIjogIlByZXBhcmUgZm9yIHRoZSBTdG9ybSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlRoaXMgaXMgdGhlIHRydWUgYXRobGV0ZSZtZGFzaDt0aGUgcGVyc29uIGluIHJpZ29yb3VzIHRyYWluaW5nIGFnYWluc3QgZmFsc2UgaW1wcmVzc2lvbnMuICBSZW1haW4sIGZpcm0sIHlvdSB3aG8gc3VmZmVyLCBkb24ndCBiZSBraWRuYXBwZWQgYnkgeW91ciBpbXByZXNzaW9ucyEgIFRoZSBzdHJ1Z2dsZSBpcyBncmVhdCwgdGhlIHRhc2sgZGl2aW5lJm1kYXNoO3RvIGdhaW4gbWFzdGVyeSwgZnJlZWRvbSwgaGFwcGluZXNzLCBhbmQgdHJhbnF1aWxpdHkuIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDIuMTguMjctMjgiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+RXBpY3RldHVzIGFsc28gdXNlZCB0aGUgbWV0YXBob3Igb2YgYSBzdG9ybSwgc2F5aW5nIHRoYXQgb3VyIGltcHJlc3Npb25zIGFyZSBub3QgdW5saWtlIGV4dHJlbWUgd2VhdGhlciB0aGF0IGNhbiBjYXRjaCB1cyBhbmQgd2hpcmwgdXMgYWJvdXQuICBXaGVuIHdlIGdldCB3b3JrZWQgdXAgb3IgcGFzc2lvbmF0ZSBhYm91dCBhbiBpc3N1ZSwgd2UgY2FuIHJlbGF0ZS48L3A+PHA+QnV0IGxldCdzIHRoaW5rIGFib3V0IHRoZSByb2xlIG9mIHRoZSB3ZWF0aGVyIGluIG1vZGVybiB0aW1lcy4gIFRvZGF5LCB3ZSBoYXZlIGZvcmVjYXN0ZXJzIGFuZCBleHBlcnRzIHdobyBjYW4gZmFpcmx5IGFjY3VyYXRlbHkgcHJlZGljdCBzdG9ybSBwYXR0ZXJucy4gIFRvZGF5LCB3ZSdyZSBkZWZlbnNlbGVzcyBhZ2FpbnN0IGEgaHVycmljYW5lIG9ubHkgaWYgd2UgcmVmdXNlIHRvIHByZXBhcmUgb3IgaGVlZCB0aGUgd2FybmluZ3MuPC9wPjxwPklmIHdlIGRvbid0IGhhdmUgYSBwbGFuLCBpZiB3ZSBuZXZlciBsZWFybmVkIGhvdyB0byBwdXQgdXAgdGhlIHN0b3JtIHdpbmRvd3MsIHdlIHdpbGwgYmUgYXQgdGhlIG1lcmN5IG9mIHRoZXNlIGV4dGVybmFsJm1kYXNoO2FuZCBpbnRlcm5hbCZtZGFzaDtlbGVtZW50cy4gIFdlJ3JlIHN0aWxsIHB1bnkgaHVtYW4gYmVpbmdzIGNvbXBhcmVkIHdpdGggb25lLWh1bmRyZWQtbWlsLXBlci1ob3VyIHdpbmRzLCBidXQgd2UgaGF2ZSB0aGUgYWR2YW50YWdlIG9mIGJlaW5nIGFibGUgdG8gcHJlcGFyZSZtZGFzaDtiZWluZyBhYmxlIHRvIHN0cnVnZ2xlIGFnYWluc3QgdGhlbSBpbiBhIG5ldyB3YXkuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkZlYnJ1YXJ5IDE5IiwNCiAgICAidG9waWMiOiAiVGhlIEJhbnF1ZXQgb2YgTGlmZSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlJlbWVtYmVyIHRvIGNvbmR1Y3QgeW91cnNlbGYgaW4gbGlmZSBhcyBpZiBhdCBhIGJhbnF1ZXQuICBBcyBzb21ldGhpbmcgYmVpbmcgcGFzc2VkIGFyb3VuZCBjb21lcyB0byB5b3UsIHJlYWNoIG91dCB5b3VyIGhhbmQgYW5kIHRha2UgYSBtb2RlcmF0ZSBoZWxwaW5nLiAgRG9lcyBpdCBwYXNzIHlvdSBieT8gIERvbid0IHN0b3AgaXQuICBJdCBoYXNuJ3QgeWV0IGNvbWU/ICBEb24ndCBidXJuIGluIGRlc2lyZSBmb3IgaXQsIGJ1dCB3YWl0IHVudGlsIGl0IGFycml2ZXMgaW4gZnJvbnQgb2YgeW91LiAgQWN0IHRoaXMgd2F5IHdpdGggY2hpbGRyZW4sIGEgc3BvdXNlLCB0b3dhcmQgcG9zaXRpb24sIHdpdGggd2VhbHRoJm1kYXNoO29uZSBkYXkgaXQgd2lsbCBtYWtlIHlvdSB3b3J0aHkgb2YgYSBiYW5xdWV0IHdpdGggdGhlIGdvZHMuIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkVuY2hpcmlkaW9uLCAxLjUiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIG5leHQgdGltZSB5b3Ugc2VlIHNvbWV0aGluZyB5b3Ugd2FudCwgcmVtZW1iZXIgRXBpY3RldHVzJ3MgbWV0YXBob3Igb2YgbGlmZSdzIGJhbnF1ZXQuICBBcyB5b3UgZmluZCB5b3Vyc2VsZiBnZXR0aW5nIGV4Y2l0ZWQsIHJlYWR5IHRvIGRvIGFueXRoaW5nIGFuZCBldmVyeXRoaW5nIHRvIGdldCBpdCZtZGFzaDt0aGUgZXF1aXZhbGVudCBvZiByZWFjaGluZyBhY3Jvc3MgdGhlIHRhYmxlIGFuZCBncmFiYmluZyBhIGRpc2ggb3V0IG9mIHNvbWVvbmUncyBoYW5kcyZtZGFzaDtqdXN0IHJlbWluZCB5b3Vyc2VsZjogdGhhdCdzIGJhZCBtYW5uZXJzIGFuZCB1bm5lY2Vzc2FyeS4gIFRoZW4gd2FpdCBwYXRpZW50bHkgZm9yIHlvdXIgdHVybi48L3A+PHA+VGhpcyBtZXRhcGhvciBoYXMgb3RoZXIgaW50ZXJwcmV0YXRpb25zIHRvby4gIEZvciBpbnN0YW5jZSwgd2UgbWlnaHQgcmVmbGVjdCB0aGF0IHdlJ3JlIGx1Y2t5IHRvIGhhdmUgYmVlbiBpbnZpdGVkIHRvIHN1Y2ggYSB3b25kZXJmdWwgZmVhc3QgKGdyYXRpdHVkZSkuICBPciB0aGF0IHdlIHNob3VsZCB0YWtlIG91ciB0aW1lIGFuZCBzYXZvciB0aGUgdGFzdGUgb2Ygd2hhdCdzIG9uIG9mZmVyIChlbmpveWluZyB0aGUgcHJlc2VudCBtb21lbnQpIGJ1dCB0aGF0IHRvIHN0dWZmIG91cnNlbHZlcyBzaWNrIHdpdGggZm9vZCBhbmQgZHJpbmsgc2VydmVzIG5vIG9uZSwgbGVhc3Qgb2YgYWxsIG91ciBoZWFsdGggKGdsdXR0b255IGlzIGEgZGVhZGx5IHNpbiwgYWZ0ZXIgYWxsKS4gIFRoYXQgYXQgdGhlIGVuZCBvZiB0aGUgbWVhbCwgaXQncyBydWRlIG5vdCB0byBoZWxwIHRoZSBob3N0IGNsZWFuIHVwIGFuZCBkbyB0aGUgZGlzaGVzIChzZWxmbGVzc25lc3MpLiAgQW5kIGZpbmFsbHksIHRoZSBuZXh0IHRpbWUsIGl0J3Mgb3VyIHR1cm4gdG8gaG9zdCBhbmQgdHJlYXQgb3RoZXJzIGp1c3QgYXMgd2UgaGFkIGJlZW4gdHJlYXRlZCAoY2hhcml0eSkuPC9wPjxwPkVuam95IHRoZSBtZWFsITwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJGZWJydWFyeSAyMCIsDQogICAgInRvcGljIjogIlRoZSBHcmFuZCBQYXJhZGUgb2YgRGVzaXJlIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiUm9iYmVycywgcGVydmVydHMsIGtpbGxlcnMsIGFuZCB0eXJhbnRzJm1kYXNoO2dhdGhlciBmb3IgeW91ciBpbnNwZWN0aW9uIHRoZWlyIHNvLWNhbGxlZCBwbGVhc3VyZXMhIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zIDYuMzQiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+SXQncyBuZXZlciBncmVhdCB0byBqdWRnZSBvdGhlciBwZW9wbGUsIGJ1dCBpdCdzIHdvcnRoIHRha2luZyBhIHNlY29uZCB0byBpbnZlc3RpZ2F0ZSBob3cgYSBsaWZlIGRlZGljYXRlZCB0byBpbmR1bGdpbmcgZXZlcnkgd2hpbSBhY3R1YWxseSB3b3JrcyBvdXQuICBUaGUgd3JpdGVyIEFubiBMYW1vdHQgam9rZXMgaW4gPGVtPkJpcmQgYnkgQmlyZDwvZW0+LCA8cT5FdmVyIHdvbmRlciB0aGF0IEdvZCB0aGlua3Mgb2YgbW9uZXk/IEp1c3QgbG9vayBhdCB0aGUgcGVvcGxlIGhlIGdpdmVzIGl0IHRvLjwvcT4gIFRoZSBzYW1lIGdvZXMgZm9yIHBsZWFzdXJlLiAgTG9vayBhdCB0aGUgZGljdGF0b3IgYW5kIGhpcyBoYXJlbSBmaWxsZWQgd2l0aCBwbG90dGluZywgbWFuaXB1bGF0aXZlIG1pc3RyZXNzZXMuICBMb29rIGhvdyBxdWlja2x5IHRoZSBwYXJ0eWluZyBvZiBhIHlvdW5nIHN0YXJsZXQgdHVybnMgdG8gZHJ1ZyBhZGRpY3Rpb24gYW5kIGEgc3RhbGxlZCBjYXJlZXIuPC9wPjxwPkFzayB5b3Vyc2VsZjogPGVtPklzIHRoYXQgcmVhbGx5IHdvcnRoIGl0PyBJcyBpdCByZWFsbHkgdGhhdCBwbGVhc3VyYWJsZT88L2VtPjwvcD48cD5Db25zaWRlciB0aGF0IHdoZW4geW91IGNyYXZlIHNvbWV0aGluZyBvciBjb250ZW1wbGF0ZSBpbmR1bGdpbmcgaW4gYSA8cT5oYXJtbGVzczwvcT4gdmljZS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgMjEiLA0KICAgICJ0b3BpYyI6ICJXaXNoIE5vdCwgV2FudCBOb3QiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJSZW1lbWJlciB0aGF0IGl0J3Mgbm90IG9ubHkgdGhlIGRlc2lyZSBmb3Igd2VhbHRoIGFuZCBwb3NpdGlvbiB0aGF0IGRlYmFzZXMgYW5kIHN1Ymp1Z2F0ZXMgdXMsIGJ1dCBhbHNvIHRoZSBkZXNpcmUgZm9yIHBlYWNlLCBsZWlzdXJlLCB0cmF2ZWwsIGFuZCBsZWFybmluZy4gIEl0IGRvZXNuJ3QgbWF0dGVyIHdoYXQgdGhlIGV4dGVybmFsIHRoaW5nIGlzLCB0aGUgdmFsdWUgd2UgcGxhY2Ugb24gaXQgc3VianVnYXRlcyB1cyB0byBhbm90aGVyIC4gLiAuIHdoZXJlIG91ciBoZWFydCBpcyBzZXQsIHRoZXJlIG91ciBpbXBlZGltZW50IGxpZXMuIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDQuNC4xLTI7IDE1Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlN1cmVseSwgRXBpY3RldHVzIGlzbid0IHNheWluZyB0aGF0IHBlYWNlLCBsZWlzdXJlLCB0cmF2ZWwsIGFuZCBsZWFybmluZyBhcmUgYmFkLCBpcyBoZT8gIFRoYW5rZnVsbHksIG5vLiAgQnV0IGNlYXNlbGVzcywgYXJkZW50IDxlbT5kZXNpcmU8L2VtPiZtZGFzaDtpZiBub3QgYmFkIGluIGFuZCBvZiBpdHNlbGYmbWRhc2g7aXNmcmF1Z2h0IHdpdGggcG90ZW50aWFsIGNvbXBsaWNhdGlvbnMuICBXaGF0IHdlIGRlc2lyZSBtYWtlcyB1cyB2dWxuZXJhYmxlLiAgV2VhdGhlciBpdCdzIGFuIG9wcG9ydHVuaXR5IHRvIHRyYXZlbCB0aGUgd29ybGQgb3IgdG8gYmUgdGhlIHByZXNpZGVudCBvciBmb3IgZml2ZSBtaW51dGVzIG9mIHBlYWNlIGFuZCBxdWlldCwgd2hlbiB3ZSBwaW5lIGZvciBzb21ldGhpbmcsIHdoZW4gd2UgaG9wZSBhZ2FpbnN0IGhvcGUsIHdlIHNldCBvdXJzZWx2ZXMgdXAgZm9yIGRpc2FwcG9pbnRtZW50LiAgQmVjYXVzZSBmYXRlIGNhbiBhbHdheXMgaW50ZXJ2ZW5lIGFuZCB0aGVuIHdlJ2xsIGxpa2VseSBsb3NlIG91ciBzZWxmLWNvbnRyb2wgaW4gcmVzcG9uc2UuPC9wPjxwPkFzIERpb2dlbmVzLCB0aGUgZmFtb3VzIEN5bmljLCBvbmNlIHNhaWQsIDxxPkl0IGlzIHRoZSBwcml2aWxlZ2Ugb2YgdGhlIGdvZHMgdG8gd2FudCBub3RoaW5nLCBhbmQgb2YgZ29kbGlrZSBtZW4gdG8gd2FudCBsaXR0bGUuPC9xPiAgVG8gd2FudCBub3RoaW5nIG1ha2Ugb25lIGludmluY2libGUmbWRhc2g7YmVjYXVzZSBub3RoaW5nIGxpZXMgb3V0c2lkZSB5b3VyIGNvbnRyb2wuICBUaGlzIGRvZXNuJ3QganVzdCBnbyBmb3Igbm90IHdhbnRpbmcgdGhlIGVhc3ktdG8tY3JpdGljaXplIHRoaW5ncyBsaWtlIHdlYWx0aCBvciBmYW1lJm1kYXNoO3RoZSBraW5kcyBvZiBmb2xseSB0aGF0IHdlIHNlZSBpbGx1c3RyYXRlZCBpbiBzb21lIG9mIG91ciBtb3N0IGNsYXNzaWMgcGxheXMgYW5kIGZhYmxlcy4gIFRoYXQgZ3JlZW4gbGlnaHQgdGhhdCBHYXRzYnkgc3Ryb3ZlIGZvciBjYW4gcmVwcmVzZW50IHNlZW1pbmdseSBnb29kIHRoaW5ncyB0b28sIGxpa2UgbG92ZSBvciBhIG5vYmxlIGNhdXNlLiAgQnV0IGl0IGNhbiB3cmVjayBzb21lb25lIGFsbCB0aGUgc2FtZS48L3A+PHA+V2hlbiBpdCBjb21lcyB0byB5b3VyIGdvYWxzIGFuZCB0aGUgdGhpbmdzIHlvdSBzdHJpdmUgZm9yLCBhc2sgeW91cnNlbGY6IDxlbT5BbSBJIGluIGNvbnRyb2wgb2YgdGhlbSBvciB0aGV5IGluIGNvbnRyb2wgb2YgbWU/PC9lbT48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgMjIiLA0KICAgICJ0b3BpYyI6ICJXaGF0J3MgQmV0dGVyIExlZnQgVW5zYWlkIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiQ2F0byBwcmFjdGljZWQgdGhlIGtpbmQgb2YgcHVibGljIHNwZWVjaCBjYXBhYmxlIG9mIG1vdmluZyB0aGUgbWFzc2VzLCBiZWxpZXZpbmcgcHJvcGVyIHBvbGl0aWNhbCBwaGlsb3NvcGh5IHRha2VzIGNhcmUgbGlrZSBhbnkgZ3JlYXQgY2l0eSB0byBtYWludGFpbiB0aGUgd2FybGlrZSBlbGVtZW50LiAgQnV0IGhlIHdhcyBuZXZlciBzZWVuIHByYWN0aWNpbmcgaW4gZnJvbnQgb2Ygb3RoZXJzLCBhbmQgbm8gb25lIGV2ZXIgaGVhcmQgaGltIHJlaGVhcnNlIGEgc3BlZWNoLiAgV2hlbiBoZSB3YXMgdG9sZCB0aGF0IHBlb3BsZSBibGFtZWQgaGltIGZvciBoaXMgc2lsZW5jZSwgaGUgcmVwbGllZCwgPHE+QmV0dGVyIHRoZXkgbm90IGJsYW1lIG15IGxpZmUuICBJIGJlZ2luIHRvIHNwZWFrIG9ubHkgd2hlbiBJJ20gY2VydGFpbiB3aGF0IEknbGwgc2F5IGlzbid0IGJldHRlciBsZWZ0IHVuc2FpZC48L3E+IiwNCiAgICAgICAgImF1dGhvciI6ICJQbHV0YXJjaCIsDQogICAgICAgICJzb3VyY2UiOiAiQ2F0byB0aGUgWW91bmdlciwgNCINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5JdCdzIGVhc3kgdG8gYWN0Jm1kYXNoO3RvIGp1c3QgZGl2ZSBpbi4gIEl0J3MgaGFyZGVyIHRvIHN0b3AsIHRvIHBhdXNlLCB0byB0aGluazogPGVtPk5vLCBJJ20gbm90IHN1cmUgSSBuZWVkIHRvIGRvIHRoYXQgeWV0LiAgSSdtIG5vdCBzdXJlIEkgYW0gcmVhZHkuPC9lbT4gIEFzIENhdG8gZW50ZXJlZCBwb2xpdGljcywgbWFueSBleHBlY3RlZCBzd2lmdCBhbmQgZ3JlYXQgdGhpbmdzIGZyb20gaGltJm1kYXNoO3N0aXJyaW5nIHNwZWVjaGVzLCByb2FyaW5nIGNvbmRlbW5hdGlvbnMsIHdpc2UgYW5hbHlzZXMuICBIZSB3YXMgYXdhcmUgb2YgdGhpcyBwcmVzc3VyZSZtZGFzaDthIHByZXNzdXJlIHRoYXQgZXhpc3RzIG9uIGFsbCBvZiB1cyBhdCBhbGwgdGltZXMmbWRhc2g7YW5kIHJlc2lzdGVkLiAgSXQncyBlYXN5IHRvIHBhbmRlciB0byB0aGUgbW9iIChhbmQgdG8gb3VyIGVnbykuPC9wPjxwPkluc3RlYWQsIGhlIHdhaXRlZCBhbmQgPGVtPnByZXBhcmVkPC9lbT4uICBIZSBwYXJzZWQgaGlzIG93biB0aG91Z2h0cywgbWFkZSBzdXJlIGhlIHdhcyBub3QgcmVhY3RpbmcgZW1vdGlvbmFsbHksIHNlbGZpc2hseSwgaWdub3JhbnRseSwgb3IgcHJlbWF0dXJlbHkuICBPbmx5IHRoZW4gd291bGQgaGUgc3BlYWsmbWRhc2g7d2hlbiBoZSB3YXMgY29uZmlkZW50IHRoYXQgaGlzIHdvcmRzIHdlcmUgd29ydGh5IG9mIGJlaW5nIGhlYXJkLjwvcD48cD5UbyBkbyB0aGlzIHJlcXVpcmVzIGF3YXJlbmVzcy4gIEl0IHJlcXVpcmVzIHVzIHRvIHN0b3AgYW5kIGV2YWx1YXRlIG91cnNlbHZlcyBob25lc3RseS4gIENhbiB5b3UgZG8gdGhhdD88L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgMjMiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJGZWJydWFyeSAyNCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkZlYnJ1YXJ5IDI1IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgMjYiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJGZWJydWFyeSAyNyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkZlYnJ1YXJ5IDI4IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRmVicnVhcnkgMjkiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCAxIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWFyY2ggMiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1hcmNoIDMiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCA0IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWFyY2ggNSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1hcmNoIDYiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCA3IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWFyY2ggOCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1hcmNoIDkiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCAxMCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1hcmNoIDExIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWFyY2ggMTIiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCAxMyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1hcmNoIDE0IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWFyY2ggMTUiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCAxNiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1hcmNoIDE3IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWFyY2ggMTgiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCAxOSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1hcmNoIDIwIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWFyY2ggMjEiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCAyMiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1hcmNoIDIzIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWFyY2ggMjQiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCAyNSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1hcmNoIDI2IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWFyY2ggMjciLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCAyOCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1hcmNoIDI5IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWFyY2ggMzAiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXJjaCAzMSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkFwcmlsIDEiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBcHJpbCAyIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXByaWwgMyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkFwcmlsIDQiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBcHJpbCA1IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXByaWwgNiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkFwcmlsIDciLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBcHJpbCA4IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXByaWwgOSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkFwcmlsIDEwIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXByaWwgMTEiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBcHJpbCAxMiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkFwcmlsIDEzIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXByaWwgMTQiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBcHJpbCAxNSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkFwcmlsIDE2IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXByaWwgMTciLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBcHJpbCAxOCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkFwcmlsIDE5IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXByaWwgMjAiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBcHJpbCAyMSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkFwcmlsIDIyIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXByaWwgMjMiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBcHJpbCAyNCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkFwcmlsIDI1IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXByaWwgMjYiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBcHJpbCAyNyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkFwcmlsIDI4IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXByaWwgMjkiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBcHJpbCAzMCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWF5IDIiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXkgMyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSA0IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWF5IDUiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXkgNiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSA3IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTWF5IDgiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJNYXkgOSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxMCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxMSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxMiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxMyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxNCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxNSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxNiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxNyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxOCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAxOSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAyMCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAyMSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAyMiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAyMyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAyNCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAyNSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAyNiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAyNyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAyOCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAyOSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAzMCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk1heSAzMSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgMSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgMiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgMyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgNCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgNSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgNiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgNyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgOCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgOSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgMTAiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdW5lIDExIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVuZSAxMiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgMTMiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdW5lIDE0IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVuZSAxNSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgMTYiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdW5lIDE3IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVuZSAxOCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgMTkiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdW5lIDIwIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVuZSAyMSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgMjIiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdW5lIDIzIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVuZSAyNCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgMjUiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdW5lIDI2IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVuZSAyNyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bmUgMjgiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdW5lIDI5IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVuZSAzMCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgNCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgNSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgNiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgNyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgOCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgOSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMTAiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdWx5IDExIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVseSAxMiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMTMiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdWx5IDE0IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVseSAxNSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMTYiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdWx5IDE3IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVseSAxOCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMTkiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdWx5IDIwIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVseSAyMSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMjIiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdWx5IDIzIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVseSAyNCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMjUiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdWx5IDI2IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVseSAyNyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMjgiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJKdWx5IDI5IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiSnVseSAzMCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkp1bHkgMzEiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkF1Z3VzdCAyIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXVndXN0IDMiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgNCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkF1Z3VzdCA1IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXVndXN0IDYiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgNyIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkF1Z3VzdCA4IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiQXVndXN0IDkiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMTAiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMTEiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMTIiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMTMiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMTQiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMTUiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMTYiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMTciLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMTgiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMTkiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMjAiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMjEiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMjIiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMjMiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMjQiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMjUiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMjYiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMjciLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMjgiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMjkiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMzAiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJBdWd1c3QgMzEiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJTZXB0ZW1iZXIgMSIsDQogICAgInRvcGljIjogIkEgU3Ryb25nIFNvdWwgaXMgQmV0dGVyIHRoYW4gR29vZCBMdWNrIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiVGhlIHJhdGlvbmFsIHNvdWwgaXMgc3Ryb25nZXIgdGhhbiBhbnkga2luZCBvZiBmb3J0dW5lJm1kYXNoO2Zyb20gaXRzIG93biBzaGFyZSBpdCBndWlkZXMgaXRzIGFmZmFpcnMgaGVyZSBvciB0aGVyZSwgYW5kIGlzIGl0c2VsZiB0aGUgY2F1c2Ugb2YgYSBoYXBweSBvciBtaXNlcmFibGUgbGlmZS4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiTW9yYWwgTGV0dGVycywgOTguMmIiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+Q2F0byB0aGUgWW91bmdlciBoYWQgZW5vdWdoIG1vbmV5IHRvIGRyZXNzIGluIGZpbmUgY2xvdGhpbmcuIFlldCBoZSBvZnRlbiB3YWxrZWQgYXJvdW5kIFJvbWUgYmFyZWZvb3QsIGluZGlmZmVyZW50IHRvIGFzc3VtcHRpb25zIHBlb3BsZSBtYWRlIGFib3V0IGhpbSBhcyBoZSBwYXNzZWQuIEhlIGNvdWxkIGhhdmUgaW5kdWxnZWQgaW4gdGhlIGZpbmVzdCBmb29kLiBIZSBjaG9zZSBpbnN0ZWFkIHRvIGVhdCBzaW1wbGUgZmFyZS4gV2hldGhlciBpdCB3YXMgcmFpbmluZyBvciBpbnRlbnNlbHkgaG90LCBoZSB3ZW50IGJhcmVoZWFkZWQgYnkgY2hvaWNlLjwvcD48cD5XaHkgbm90IGluZHVsZ2UgaW4gc29tZSBlYXN5IHJlbGllZj8gQmVjYXVzZSBDYXRvIHdhcyB0cmFpbmluZyBoaXMgc291bCB0byBiZSBzdHJvbmcgYW5kIHJlc2lsaWVudC4gU3BlY2lmaWNhbGx5LCBoZSB3YXMgbGVhcm5pbmcgaW5kaWZmZXJlbmNlOiBhbiBhdHRpdHVkZSBvZiA8cT5sZXQgY29tZSB3aGF0IG1heTwvcT4gdGhhdCB3b3VsZCBzZXJ2ZSBoaW0gd2VsbCBpbiB0aGUgdHJlbmNoZXMgd2l0aCB0aGUgYXJteSwgaW4gdGhlIEZvcnVtIGFuZCB0aGUgU2VuYXRlLCBhbmQgaW4gaGlzIGxpZmUgYXMgYSBmYXRoZXIgYW5kIHN0YXRlc21hbi48L3A+PHA+SGlzIHRyYWluaW5nIHByZXBhcmVkIGhpbSBmb3IgYW55IGNvbmRpdGlvbnMsIGFueSBraW5kIG9mIGx1Y2suIElmIHdlIHVuZGVyZ28gb3VyIG93biB0cmFpbmluZyBhbmQgcHJlcGFyYXRpb25zLCB3ZSBtaWdodCBmaW5kIG91cnNlbHZlcyBzaW1pbGFybHkgc3RyZW5ndGhlbmVkLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJTZXB0ZW1iZXIgMiIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIlNlcHRlbWJlciAzIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDQiLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJTZXB0ZW1iZXIgNSIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIlNlcHRlbWJlciA2IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDciLA0KICAgICJ0b3BpYyI6ICIiLA0KICAgICJxdW90ZXMiOiBbeyAicXVvdGUiOiAiIiwgImF1dGhvciI6ICIiLCAic291cmNlIjogIiIgfV0sDQogICAgIm5vdGVzIjogIjxwPjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJTZXB0ZW1iZXIgOCIsDQogICAgInRvcGljIjogIiIsDQogICAgInF1b3RlcyI6IFt7ICJxdW90ZSI6ICIiLCAiYXV0aG9yIjogIiIsICJzb3VyY2UiOiAiIiB9XSwNCiAgICAibm90ZXMiOiAiPHA+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIlNlcHRlbWJlciA5IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDEwIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDExIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDEyIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDEzIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDE0IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDE1IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDE2IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDE3IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDE4IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDE5IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDIwIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDIxIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDIyIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDIzIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDI0IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDI1IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDI2IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDI3IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDI4IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDI5IiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDMwIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiU2VwdGVtYmVyIDMxIiwNCiAgICAidG9waWMiOiAiIiwNCiAgICAicXVvdGVzIjogW3sgInF1b3RlIjogIiIsICJhdXRob3IiOiAiIiwgInNvdXJjZSI6ICIiIH1dLA0KICAgICJub3RlcyI6ICI8cD48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiT2N0b2JlciAxIiwNCiAgICAidG9waWMiOiAiTGV0IFZpcnR1cmUgU2hpbmUgQnJpZ2h0IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiRG9lcyB0aGUgbGlnaHQgb2YgYSBsYW1wIHNoaW5lIGFuZCBrZWVwIGl0cyBnbG93IHVudGlsIGl0cyBmdWVsIGlzIHNwZW50PyBXaHkgc2hvdWxkbid0IHlvdXIgdHJ1dGgsIGp1c3RpY2UsIGFuZCBzZWxmLWNvbnRyb2wgc2hpbmUgdW50aWwgeW91IGFyZSBleHRpbmd1aXNoZWQ/IiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCAxMi4xNSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5TZW5lY2EsIHJlcGVhdGluZyBIZXJhY2xpdHVzLCB3cml0ZXMgdGhhdCA8cT53ZSBtb3J0YWxzIGFyZSBsaWdodGVkIGFuZCBleHRpbmd1aXNoZWQuPC9xPiBUaGUgbGlnaHQgb2YgcmVhc29uIHN1ZmZ1c2VzIHRoZSB1bml2ZXJzZS4gIFdoZXRoZXIgdGhlIHdpY2sgb2YgeW91ciBsYW1wIGlzIGJlaW5nIGxpdCBmb3IgdGhlIGZpcnN0IHRpbWUsIGFmdGVyIGEgbG9uZyBwZXJpb2Qgb2YgZGFya25lc3MsIG9yIGV2ZW4gcmlnaHQgYmVmb3JlIHRoZSBwcm92ZXJiaWFsIGJpZyBzbGVlcCwgaXQgbWFrZXMgbm8gZGlmZmVyZW5jZS48L3A+PHA+SGVyZSBpcyB3aGVyZSB5b3UgYXJlIG5vdywgYW5kIGl0J3MgYSBnb29kIGEgcGxhY2UgYXMgYW55IHRvIGxldCB2aXJ0dWUgc2hpbmUgYW5kIGNvbnRpbnVlIHRvIHNoaW5lIGZvciBhcyBsb25nIGFzIHlvdSBleGlzdC48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiT2N0b2JlciAyIiwNCiAgICAidG9waWMiOiAiVGhlIE1vc3QgVmFsdWFibGUgQXNzZXQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJCdXQgdGhlIHdpc2UgcGVyc29uIGNhbiBsb3NlIG5vdGhpbmcuIFN1Y2ggYSBwZXJzb24gaGFzIGV2ZXJ5dGhpbmcgc3RvcmVkIHVwIGZvciB0aGVtc2VsdmVzLCBsZWF2aW5nIG5vdGhpbmcgdG8gRm9ydHVuZSwgdGhlaXIgb3duIGdvb2RzIGFyZSBoZWxkIGZpcm0sIGJvdW5kIGluIHZpcnR1ZSwgd2hpY2ggcmVxdWlyZXMgbm90aGluZyBmcm9tIGNoYW5jZSwgYW5kIHRoZXJlZm9yZSBjYW4ndCBiZSBlaXRoZXIgaW5jcmVhc2VkIG9yIGRpbWluaXNoZWQuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk9uIHRoZSBGaXJtbmVzcyBvZiB0aGUgV2lzZSwgNS40Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlNvbWUgcGVvcGxlIHB1dCB0aGVpciBtb25leSBpbiBhc3NldHMmbWRhc2g7c3RvY2tzLCBib25kcywgcHJvcGVydHkuIE90aGVycyBpbnZlc3QgaW4gcmVsYXRpb25zaGlwcyBvciBhY2NvbXBsaXNobWVudHMsIGtub3dpbmcgdGhhdCB0aGV5IGNhbiBkcmF3IG9uIHRoZXNlIHRoaW5ncyBqdXN0IGFzIGVhc2lseSBhcyBvdGhlcnMgY2FuIGRyYXcgZnVuZHMgZnJvbSBhIGJhbmsgYWNjb3VudC4gQnV0IGEgdGhpcmQgdHlwZSwgU2VuZWNhIHNheXMsIGludmVzdHMgaW4gdGhlbXNlbHZlcyZtZGFzaDtpbiBiZWluZyBhIGdvb2QgYW5kIHdpc2UgcGVyc29uLjwvcD48cD5XaGljaCBvZiB0aGVzZSBhc3NldHMgaXMgbW9zdCBpbW11bmUgdG8gbWFya2V0IGZsdWN0dWF0aW9ucyBhbmQgZGlzYXN0ZXJzPyBXaGljaCBpcyBtb3N0IHJlc2lsaWVudCBpbiB0aGUgZmFjZSBvZiB0cmlhbHMgYW5kIHRyaWJ1bGF0aW9ucz8gV2hpY2ggd2lsbCBuZXZlciBhYmFuZG9uIHlvdT8gU2VuZWNhJ3Mgb3duIGxpZmUgaXMgYW4gaW50ZXJlc3RpbmcgZXhhbXBsZS4gSGUgYmVjYW1lIHF1aXRlIHdlYWx0aHkgYXMgYSBmcmllbmQgb2YgdGhlIGVtcGVyb3IsIGJ1dCBhcyBOZXJvIGJlY2FtZSBtb3JlIGFuZCBtb3JlIGRlcmFuZ2VkLCBTZW5lY2EgcmVhbGl6ZWQgaGUgbmVlZGVkIHRvIGdldCBvdXQuIEhlIG9mZmVyZWQgTmVybyBhIGRlYWw7IGhlIHdvdWxkIGdpdmUgTmVybyBhbGwgaGlzIG1vbmV5IGFuZCByZXR1cm4gYWxsIG9mIE5lcm8ncyBnaWZ0cyBpbiBleGNoYW5nZSBmb3IgY29tcGxldGUgYW5kIHRvdGFsIGZyZWVkb20uPC9wPjxwPlVsdGltYXRlbHksIE5lcm8gcmVqZWN0ZWQgdGhpcyBvZmZlciwgYnV0IFNlbmVjYSBsZWZ0IGFueXdheSwgcmV0aXJpbmcgaW4gcmVsYXRpdmUgcGVhY2UuICBCdXQgb25lIGRheSwgdGhlIGV4ZWN1dGlvbmVycyBjYW1lIHdpdGggdGhlaXIgbW9ydGFsIGRlY3JlZS4gSW4gdGhhdCBtb21lbnQsIHdoYXQgZGlkIFNlbmVjYSByZWx5IG9uPyBJdCB3YXNuJ3QgaGlzIG1vbmV5LiBJdCB3YXNuJ3QgaGlzIGZyaWVuZHMsIHdobywgYWx0aG91Z2ggdGhleSBtZWFudCB3ZWxsLCB3ZXJlIGEgY29uc2lkZXJhYmxlIHNvdXJjZSBvZiBncmllZiBhbmQgbW91cm5pbmcuIEl0IHdhcyBoaXMgdmlydHVlIGFuZCBpbm5lciBzdHJlbmd0aC48L3A+PHA+SXQgd2FzIFNlbmVjYSdzIG1vc3QgdHJ5aW5nIG1vbWVudCZtZGFzaDtoaXMgbGFzdCBhbmQgaGlzIGZpbmVzdC48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiRG9uJ3QgZm9yZ2V0IHlvdXIgd29vYmllcyINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk9jdG9iZXIgMyIsDQogICAgInRvcGljIjogIkEgTWFudHJhIG9mIE11dHVhbCBJbnRlcmRlcGVuZGVuY2UiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJNZWRpdGF0ZSBvZnRlbiBvbiB0aGUgaW50ZXJjb25uZWN0ZWRuZXNzIGFuZCBtdXR1YWwgaW50ZXJkZXBlbmRlbmNlIG9mIGFsbCB0aGluZ3MgaW4gdGhlIHVuaXZlcnNlLiBGb3IgaW4gYSBzZW5zZSwgYWxsIHRoaW5ncyBhcmUgbXV0dWFsbHkgaW50ZXJ3b3ZlbiB0b2dldGhlciBhbmQgdGhlcmVmb3JlIGhhdmUgYW4gYWZmaW5pdHkgZm9yIGVhY2ggb3RoZXImbWRhc2g7Zm9yIG9uZSB0aGluZyBmb2xsb3dzIGFmdGVyIGFub3RoZXIgYWNjb3JkaW5nIHRvIHRoZWlyIHRlbnNpb24gb2YgbW92ZW1lbnQsIHRoZWlyIHN5bXBhdGhldGljIHN0aXJyaW5ncywgYW5kIHRoZSB1bml0eSBvZiBhbGwgc3Vic3RhbmNlLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgNi4zOCINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5Bbm4gTGFtb3R0IG9uY2Ugb2JzZXJ2ZWQgdGhhdCBhbGwgd3JpdGVycyA8ZW0+YXJlIGxpdHRsZSByaXZlcnMgcnVubmluZyBpbnRvIG9uZSBsYWtlLDwvZW0+IGFsbCBjb250cmlidXRpbmcgdG8gdGhlIHNhbWUgYmlnIHByb2plY3QuIFRoZSBzYW1lIGlzIHRydWUgaW4gbWFueSBpbmR1c3RyaWVzJm1kYXNoO3Rob3VnaCBzYWRseSwgZXZlbiBpbnNpZGUgdGhlIHNhbWUgY29tcGFueSwgcGVvcGxlIHNlbGZpc2hseSBmb3JnZXQgdGhleSdyZSB3b3JraW5nIHRvZ2V0aGVyLiBBcyBodW1hbiBiZWluZ3Mgd2UgYWxsIGJyZWF0aGUgdGhlIGF0b21zIHRoYXQgbWFrZSB1cCBvdXIgYW5jZXN0b3JzIGFuZCBmbG93IGludG8gdGhlIHNhbWUgZWFydGggd2hlbiB3ZSBkaWUuPC9wPjxwPk92ZXIgYW5kIG92ZXIgYWdhaW4sIHRoZSBTdG9pY3MgcmVtaW5kZWQgdGhlbXNlbHZlcyBvZiB0aGUgaW50ZXJjb25uZWN0ZWRuZXNzIG9mIGxpZmUuIFBlcmhhcHMgdGhhdCB3YXMgYmVjYXVzZSBsaWZlIGluIEdyZWVjZSBhbmQgUm9tZSB3YXMgcGFydGljdWxhcmx5IGhhcnNoLiBBbmltYWxzIGFuZCBwZW9wbGUgd2VyZSBzbGF1Z2h0ZXJlZCBzZW5zZWxlc3NseSB0byBhbXVzZSB0aGUgbWFzc2VzIGluIHRoZSBDb2xvc3NldW0gKGV2ZW50cyBsYW1lbnRlZCBpbiB0aGUgU3RvaWMgd3JpdGluZ3MpLiBDb3VudHJpZXMgd2VyZSBjb25xdWVyZWQgYW5kIGl0cyBjaXRpemVucyBzb2xkIGludG8gc2xhdmVyeSB0byBleHBhbmQgdGhlIGVtcGlyZSAodGhlIGZ1dGlsaXR5IG9mIHdoaWNoIHRoZSBTdG9pY3MgYWxzbyBsYW1lbnRlZCkuIFRoaXMga2luZCBvZiBjcnVlbHR5IGlzIHBvc3NpYmxlIG9ubHkgd2hlbiB3ZSBmb3JnZXQgaG93IHdlJ3JlIHJlbGF0ZWQgdG8gb3VyIGZlbGxvdyBodW1hbiBiZWluZ3MgYW5kIHRoZSBlbnZpcm9ubWVudC48L3A+PHA+VG9kYXksIHRha2UgYSBtb21lbnQgdG8gcmVtZW1iZXIgdGhhdCB3ZSBhcmUgd292ZW4gdG9nZXRoZXIgdGhhdCBlYWNoIG9mIHVzIHBsYXlzIGEgcm9sZSAoZ29vZCwgYmFkLCBvciB1Z2x5KSBpbiB0aGlzIHdvcmxkLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDQiLA0KICAgICJ0b3BpYyI6ICJBbGwgRm9yIE9uZSwgT25lIEZvciBBbGwiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJUaGF0IHdoaWNoIGlzbid0IGdvb2QgZm9yIHRoZSBoaXZlLCBpc24ndCBnb29kIGZvciB0aGUgYmVlLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgNi41NCINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5JbmhlcmVudCBpbiB0aGUgU3RvaWMgY29uY2VwdCBvZiA8ZW0+c3ltcGF0aGVpYTwvZW0+IGlzIHRoZSBub3Rpb24gb2YgYW4gaW50ZXJjb25uZWN0ZWQgY29zbW9zIGluIHdoaWNoIGV2ZXJ5dGhpbmcgaW4gdGhlIHVuaXZlcnNlIGlzIHBhcnQgb2YgYSBsYXJnZXIgd2hvbGUuIE1hcmN1cyBBdXJlbGl1cyB3YXMgb25lIG9mIHRoZSBmaXJ0IHdyaXRlcnMgdG8gYXJ0aWN1bGF0ZSB0aGUgbm90aW9uIG9mIGNvc21vcG9saXRhbmlzbSAmbWRhc2g7c2F5aW5nIHRoYXQgaGUgd2FzIGEgY2l0aXplbiBvZiB0aGUgd29ybGQsIG5vdCBqdXN0IFJvbWUuPC9wPjxwPlRoZSBpZGVhIHRoYXQgeW91J3JlIGEgYmVlIGluIHRoZSBoaXZlIGlzIGEgcmVtaW5kZXIgb2YgdGhpcyBwZXJzcGVjdGl2ZS4gTWFyY3VzIGV2ZW4gc3RhdGVzIHRoZSByZXZlcnNlIG9mIHRoYXQgaWRlYSBsYXRlciBpbiBoaXMgPGVtPk1lZGl0YXRpb25zPC9lbT4sIGp1c3Qgc28gaGUgZG9lc24ndCBmb3JnZXQ6IDxxPlRoYXQgd2hpY2ggZG9lc24ndCBoYXJtIHRoZSBjb21tdW5pdHkgY2FuJ3QgaGFybSB0aGUgaW5kaXZpZHVhbC48L3E+PC9wPjxwPkp1c3QgYmVjYXVzZSBzb21ldGhpbmcgaXMgYmFkIGZvciB5b3UgZG9lc24ndCBtZWFuIGl0J3MgYmFkIGZvciBldmVyeW9uZS4gSnVzdCBiZWNhdXNlIHNvbWV0aGluZyBpcyBnb29kIGZvciB5b3UgZGVmaW5pdGVseSBkb2Vzbid0IG1lYW4gaXRzIGdvb2QgZm9yIGV2ZXJ5b25lLiBUaGluayBvZiB0aGUgaGVkZ2UgZnVuZCBtYW5hZ2VycyB3aG8gYmV0IG1hc3NpdmVseSBhZ2FpbnN0IHRoZSBlY29ub215Jm1kYXNoO3RoZXkgcHJvZml0ZWQgYnkgcm9vdGluZyBmb3IgZXNzZW50aWFsbHkgZXZlcnlvbmUgYW5kIGV2ZXJ5dGhpbmcgZWxzZSB0byBmYWlsLiBJcyB0aGF0IHdobyB5b3Ugd2FudCB0byBiZT8gQSBnb29kIFN0b2ljIHVuZGVyc3RhbmRzIHRoYXQgcHJvcGVyIGltcHVsc2VzLCBhbmQgdGhlIHJpZ2h0IGFjdGlvbnMgdGhhdCBhcmlzZSBmcm9tIHRoZW0sIG5hdHVyYWxseSBjYXJyeSB0aGUgZ29vZCBvZiB0aGUgd2hvbGUsIHdoaWNoIGlzIHRoZSB3aXNlIHBlcnNvbidzIG9ubHkgZ29vZC4gQ29udmVyc2VseSwgZ29vZCBhbmQgd2lzZSBhY3Rpb25zIGJ5IHRoZSB3aG9sZSBhcmUgd2hhdCdzIGdvb2QgZm9yIHRoZSBpbmRpdmlkdWFsLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDUiLA0KICAgICJ0b3BpYyI6ICJXb3JkcyBDYW4ndCBCZSBVbnNhaWQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJCZXR0ZXIgdG8gdHJpcCB3aXRoIHRoZSBmZWV0IHRoYW4gd2l0aCB0aGUgdG9uZ3VlLiIsDQogICAgICAgICJhdXRob3IiOiAiWmVubywgUVVPVEVEIElOIERJT0dFTkVTIExBRVJUSVVTIiwNCiAgICAgICAgInNvdXJjZSI6ICJMaXZlcyBvZiB0aGUgRW1pbmVudCBQaGlsb3NvcGhlcnMsIDcuMS4yNiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5Zb3UgY2FuIGFsd2F5cyBnZXQgdXAgYWZ0ZXIgeW91IGZhbGwgYnV0IHJlbWVtYmVyLCB3aGF0IGhhcyBiZWVuIHNhaWQgY2FuIG5ldmVyIGJlIHVuc2FpZC4gIEVzcGVjaWFsbHkgY3J1ZWwgYW5kICBodXJ0ZnVsIHRoaW5ncy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiT2N0b2JlciA2IiwNCiAgICAidG9waWMiOiAiTG9vayBPdXQgZm9yIEVhY2ggT3RoZXIiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJJdCdzIGluIGtlZXBpbmcgd2l0aCBOYXR1cmUgdG8gc2hvdyBvdXIgZnJpZW5kcyBhZmZlY3Rpb24gYW5kIHRvIGNlbGVicmF0ZSB0aGVpciBhZHZhbmNlbWVudCwgYXMgaWYgaXQgd2VyZSBvdXIgdmVyeSBvd24uIEZvciBpZiB3ZSBkb24ndCBkbyB0aGlzLCB2aXJ0dWUsIHdoaWNoIGlzIHN0cmVuZ3RoZW5lZCBvbmx5IGJ5IGV4ZXJjaXNpbmcgb3VyIHBlcmNlcHRpb25zLCB3aWxsIG5vIGxvbmdlciBlbmR1cmUgaW4gdXMuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk1vcmFsIExldHRlcnMsIDEwOS4xNSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5XYXRjaGluZyBvdGhlciBwZW9wbGUgc3VjY2VlZCBpcyBvbmUgb2YgdGhlIHRvdWdoZXN0IHRoaW5ncyB0byBkbyZtZGFzaDtlc3BlY2lhbGx5IGlmIHdlIGFyZSBub3QgZG9pbmcgd2VsbCBvdXJzZWx2ZXMuIEluIG91ciBodW50ZXItZ2F0aGVyZXIgbWluZHMsIHdlIHN1c3BlY3QgdGhhdCBsaWZlIGlzIGEgemVyby1zdW0gZ2FtZSZtZGFzaDt0aGF0IGZvciBzb21lb25lIHRvIGhhdmUgbW9yZSBtZWFucyB0aGF0IHdlIG1pZ2h0IGVuZCB1cCB3aXRoIGxlc3MuPC9wPjxwPkJ1dCBsaWtlIGFsbCBwYXJ0cyBvZiBwaGlsb3NvcGh5LCBlbXBhdGh5IGFuZCBzZWxmbGVzc25lc3MgYXJlIGEgbWF0dGVyIG9mIHByYWN0aWNlLiBBcyBTZW5lY2Egb2JzZXJ2ZWQsIGl0J3MgcG9zc2libGUgdG8gbGVhcm4gdG8gPHE+cmVqb2ljZSBpbiBhbGwgdGhlaXIgc3VjY2Vzc2VzIGFuZCBiZSBtb3ZlZCBieSB0aGVpciBldmVyeSBmYWlsdXJlLjwvcT4gVGhpcyBpcyB3aGF0IGEgdmlydHVvdXMgcGVyc29uIGRvZXMuPC9wPjxwPlRoZXkgdGVhY2ggdGhlbXNlbHZlcyB0byBhY3RpdmVseSBjaGVlciBmb3Igb3RoZXIgcGVvcGxlJm1kYXNoO2V2ZW4gaW4gY2FzZXMgd2hlcmUgdGhhdCBtaWdodCBjb21lIGF0IHRoZWlyIG93biBleHBlbnNlJm1kYXNoO2FuZCB0byBwdXQgYXNpZGUgamVhbG91c3kgYW5kIHBvc3Nlc3NpdmVuZXNzLiBZb3UgY2FuIGRvIHRoYXQgdG9vLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDciLA0KICAgICJ0b3BpYyI6ICJBIFNlbGZpc2ggUmVhc29uIHRvIGJlIEdvb2QiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJUaGUgcGVyc29uIHdobyBkb2VzIHdyb25nLCBkb2VzIHdyb25nIHRvIHRoZW1zZWx2ZXMuIFRoZSB1bmp1c3QgcGVyc29uIGlzIHVuanVzdCB0byB0aGVtc2VsdmVzJm1kYXNoO21ha2luZyB0aGVtc2VsdmVzIGV2aWwuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA5LjQiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIG5leHQgdGltZSB5b3UgZG8gc29tZXRoaW5nIHdyb25nLCB0cnkgdG8gcmVtZW1iZXIgaG93IGl0IG1hZGUgeW91IGZlZWwuICBSYXJlbHkgZG9lcyBvbmUgc2F5LCA8cT5JIGZlZWwgZ3JlYXQhPC9xPjwvcD48cD5UaGVyZSBpcyBhIHJlYXNvbiB0aGVyZSdzIG9mdGVuIHZvbWl0IGF0IGNyaW1lIHNjZW5lcy4gSW5zdGVhZCBvZiB0aGUgY2F0aGFyc2lzIHRoZSBwZXJzb24gdGhvdWdodCB0aGV5J2QgZmVlbCB3aGVuIHRoZXkgbGV0IHRoZW1zZWx2ZXMgZ2V0IG91dCBvZiBjb250cm9sIG9yIHdoZW4gdGhleSBnb3QgdGhlaXIgcmV2ZW5nZSwgdGhleSBlbmRlZCB1cCBtYWtpbmcgdGhlbXNlbHZlcyBzaWNrLiBXZSBmZWVsIGEgdmVyc2lvbiBvZiB0aGlzIHdoZW4gd2UgbGllLCB3aGVuIHdlIGNoZWF0LCB3aGVuIHdlIHNjcmV3IHNvbWVvbmUgb3Zlci48L3A+PHA+U28gaW4gdGhhdCBzcGxpdCBzZWNvbmQgYmVmb3JlIHlvdXIgaWxsLWdvdHRlbiBnYWlucyBraWNrIGluLCBhc2s6IDxlbT5Ib3cgZG8gSSBmZWVsIGFib3V0IG15c2VsZj88L2VtPiBJcyB0aGF0IG1vbWVudCB3aGVuIGZlYXIgcmlzZXMgaW4geW91ciB0aHJvYXQgYmVjYXVzZSB5b3Ugc3VzcGVjdCB5b3UgbWF5IGdldCBjYXVnaHQgcmVhbGx5IHdvcnRoIGl0PzwvcD48cD5TZWxmLWF3YXJlbmVzcyBhbmQgd3Jvbmdkb2luZyByYXJlbHkgZ28gdG9nZXRoZXIuIElmIHlvdSBuZWVkIGEgc2VsZmlzaCByZWFzb24gdG8gbm90IGRvIHdyb25nJm1kYXNoO3B1dCB5b3Vyc2VsZiBpbiB0b3VjaCB3aXRoIHRoZXNlIGZlZWxpbmdzLiBUaGV5J3JlIGEgcG93ZXJmdWwgZGlzaW5jZW50aXZlLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDgiLA0KICAgICJ0b3BpYyI6ICJBIEhpZ2hlciBQbGVhc3VyZSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlllcywgZ2V0dGluZyB5b3VyIHdpc2ggd291bGQgaGF2ZSBiZWVuIHNvIG5pY2UuIEJ1dCBpc24ndCB0aGF0IGV4YWN0bHkgd2h5IHBsZWFzdXJlIHRyaXBzIHVzIHVwPyBJbnN0ZWFkLCBzZWUgaWYgdGhlc2UgdGhpbmdzIG1pZ2h0IGJlIGV2ZXIgbmljZXImbWRhc2g7YSBncmVhdCBzb3VsLCBmcmVlZG9tLCBob25lc3R5LCBraW5kbmVzcywgc2FpbnRsaW5lc3MuIEZvciB0aGVyZSBpcyBub3RoaW5nIHNvIHBsZWFzaW5nIGFzIHdpc2RvbSBpdHNlbGYsIHdoZW4geW91IGNvbnNpZGVyIGhvdyBzdXJlLWZvb3RlZCBhbmQgZWZmb3J0bGVzcyB0aGUgd29ya3Mgb2YgdW5kZXJzdGFuZGluZyBhbmQga25vd2xlZGdlIGFyZS4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDUuOSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5Ob2JvZHkgY2FuIGFyZ3VlIHRoYXQgcGxlYXN1cmUgZG9lc24ndCA8ZW0+ZmVlbDwvZW0+IGdvb2QuIFRoYXQncyBwcmV0dHkgbXVjaCB3aGF0IGl0IGRvZXMgYnkgZGVmaW5pdGlvbi48L3A+PHA+QnV0IHRvZGF5IE1hcmN1cyBBdXJlbGl1cyBpcyByZW1pbmRpbmcgeW91Jm1kYXNoO2p1c3QgYXMgaGUgcmVtaW5kZWQgaGltc2VsZiZtZGFzaDt0aGF0IHRob3NlIHBsZWFzdXJlcyBoYXJkbHkgc3RhbmQgdXAgdG8gdmlydHVlLiBUaGUgZG9wYW1pbmUgcnVzaCB0aGF0IGNvbWVzIGZyb20gc2V4IGlzIG1vbWVudGFyeS4gU28gaXMgdGhlIHByaWRlIG9mIGFuIGFjY29tcGxpc2htZW50IG9yIHRoZSBoZWFydHkgYXBwbGF1c2Ugb2YgYSBjcm93ZC4gVGhlc2UgcGxlYXN1cmVzIGFyZSBwb3dlcmZ1bCwgYnV0IHRoZXkgd2VhciBvZmYgYW5kIGxlYXZlIHVzIHdhbnRpbmcgbW9yZS4gV2hhdCBsYXN0IGxvbmdlciAoYW5kIHJlbWFpbnMgbW9yZSB3aXRoaW4gb3VyIGNpcmNsZSBvZiBjb250cm9sKT8gV2lzZG9tLCBnb29kIGNoYXJhY3Rlciwgc29icmlldHksIGFuZCBraW5kbmVzcy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiT2N0b2JlciA5IiwNCiAgICAidG9waWMiOiAiU2V0IHRoZSBTdGFuZGFyZHMgYW5kIFVzZSBUaGVtIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiV2hlbiB0aGUgc3RhbmRhcmRzIGhhdmUgYmVlbiBzZXQsIHRoaW5ncyBhcmUgdGVzdGVkIGFuZCB3ZWlnaGVkLiBBbmQgdGhlIHdvcmsgb2YgcGhpbG9zb3BoeSBpcyBqdXN0IHRoaXMsIHRvIGV4YW1pbmUgYW5kIHVwaG9sZCB0aGUgc3RhbmRhcmRzLCBidXQgdGhlIHdvcmsgb2YgYSB0cnVseSBnb29kIHBlcnNvbiBpcyBpbiB1c2luZyB0aG9zZSBzdGFuZGFyZHMgd2hlbiB0aGV5IGtub3cgdGhlbS4iLA0KICAgICAgICAiYXV0aG9yIjogIkVwaWN0ZXR1cyIsDQogICAgICAgICJzb3VyY2UiOiAiRGlzY291cnNlcywgMi4xMS4yMy0yNSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5XZSBnbyB0aHJvdWdoIG91ciBkYXlzIHJlc3BvbmRpbmcgYW5kIHJlYWN0aW5nLCBidXQgaXQncyByYXJlIHRvIHJlYWxseSBwYXVzZSBhbmQgYXNrOiA8ZW0+SXMgdGhpcyB0aGluZyBJJ20gYWJvdXQgdG8gZG8gY29uc2lzdGVudCB3aXRoIHdoYXQgSSBiZWxpZXZlPzwvZW0+IE9yIGJldHRlcjogPGVtPklzIHRoaXMgdGhlIGtpbmQgb2YgdGhpbmcgdGhlIHBlcnNvbiBJIHdvdWxkIGxpa2UgdG8gYmUgc2hvdWxkIGRvPzwvZW0+IDxwPlRoZSB3b3JrIG9mIGxpdmluZyBpcyB0byBzZXQgc3RhbmRhcmRzIGFuZCB0aGVuIDxlbT5ub3Q8L2VtPiBjb21wcm9taXNlIHRoZW0uIFdoZW4geW91J3JlIGJydXNoaW5nIHlvdXIgdGVldGgsIGNob29zaW5nIHlvdXIgZnJpZW5kcywgbG9zaW5nIHlvdXIgdGVtcGVyLCBmYWxsaW5nIGluIGxvdmUsIGluc3RydWN0aW5nIHlvdXIgY2hpbGQsIG9yIHdhbGtpbmcgeW91ciBkb2cmbWRhc2g7YWxsIG9mIHRoZXNlIGFyZSBvcHBvcnR1bml0aWVzLjwvcD48cD5Ob3QsIDxlbT5JIHdhbnQgdG8gZG8gZ29vZDwvZW0+Jm1kYXNoO3RoYXQncyBhbiBleGN1c2UuIEJ1dCwgPGVtPkkgd2lsbCBkbyBnb29kIGluIHRoaXMgcGFydGljdWxhciBpbnN0YW5jZSwgcmlnaHQgbm93LjwvZW0+IFNldCBhIHN0YW5kYXJkOyBob2xkIGZhc3QgdG8gaXQuIFRoYXQncyBhbGwgdGhlcmUgaXMuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk9jdG9iZXIgMTAiLA0KICAgICJ0b3BpYyI6ICJSZXZlcmVuY2UgYW5kIEp1c3RpY2UiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJMZWF2ZSB0aGUgcGFzdCwgbGV0IHRoZSBncmFuZCBkZXNpZ24gdGFrZSBjYXJlIG9mIHRoZSBmdXR1cmUsIGFuZCBpbnN0ZWFkIG9ubHkgcmlnaHRseSBndWlkIHRoZSBwcmVzZW50IHRvIHJldmVyZW5jZSBhbmQganVzdGljZS4gUmV2ZXJlbmNlIHNvIHRoYXQgeW91J2xsIGxvdmUgd2hhdCB5b3UndmUgYmVlbiBhbGxvdHRlZCwgZm9yIG5hdHVyZSBicm91Z2h0IHlvdSBib3RoIHRvIGVhY2ggb3RoZXIuIEp1c3RpY2Ugc28gdGhhdCB5b3UnbGwgc3BlYWsgdGhlIHRydXRoIGZyZWVseSBhbmQgd2l0aG91dCBldmFzaW9uLCBhbmQgc28gdGhhdCB5b3UnbGwgYWN0IG9ubHkgYXMgdGhlIGxhdyBhbmQgdmFsdWUgb2YgdGhpbmdzIHJlcXVpcmUuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCAxMi4xIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkF1bHVzIEdlbGxpdXMgcmVsYXRlcyB0aGF0IEVwaWN0ZXR1cyBvbmNlIHNhaWQsIDxxPklmIGFueW9uZSB3b3VsZCB0YWtlIHR3byB3b3JkcyB0byBoZWFyIGFuZCB0YWtlIHBhaW5zIHRvIGdvdmVybiBhbmQgd2F0Y2ggb3ZlciB0aGVtc2VsdmVzIGJ5IHRoZW0sIHRoZXkgd2lsbCBsaXZlIGFuIGltcGVjY2FibGUgYW5kIGltbWVuc2VseSB0cmFucXVpbCBsaWZlLiBUaGUgdHdvIHdvcmRzIGFyZTogcGVyc2lzdCBhbmQgcmVzaXN0LjwvcT4gVGhhdCdzIGdyZWF0IGFkdmljZS4gQnV0IHdoYXQgcHJpbmNpcGxlcyBzaG91bGQgZGV0ZXJtaW5lIHdoYXQgd2UgcGVyc2lzdCBpbiBhbmQgd2hhdCBvdWdodCB0byByZXNpc3Q/PC9wPjxwPk1hcmN1cyBzdXBwbGllcyB0aGF0IGFuc3dlcjogcmV2ZXJlbmNlIGFuZCBqdXN0aWNlLiBJbiBvdGhlciB3b3JkcywgdmlydHVlLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDExIiwNCiAgICAidG9waWMiOiAiSG9uZXN0eSBhcyBvdXIgRGVmYXVsdCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkhvdyByb3R0ZW4gYW5kIGZyYXVkdWxlbnQgd2hlbiBwZW9wbGUgc2F5IHRoZXkgaW50ZW5kIHRvICdnaXZlIGl0IHRvIHlvdSBzdHJhaWdodC4nIFdoYXQgYXJlIHlvdSB1cCB0bywgZGVhciBmcmllbmQ/IEl0IHNob3VsZG4ndCBuZWVkIHlvdXIgYW5ub3VuY2VtZW50LCBidXQgYmUgcmVhZGlseSBzZWVuLCBhcyBpZiB3cml0dGVuIG9uIHlvdXIgZm9yZWhlYWQsIGhlYXJkIGluIHRoZSByaW5nIG9mIHlvdXIgdm9pY2UsIGEgZmxhc2ggaW4geW91IGV5ZXMmbWRhc2g7anVzdCBhcyB0aGUgYmVsb3ZlZCBzZWVzIGl0IGFsbCBpbiB0aGUgbG92ZXIncyBnbGFuY2UuIEluIHNob3J0LCB0aGUgc3RyYWlnaHQtZm9yd2FyZCBhbmQgZ29vZCBwZXJzb24gc2hvdWxkIGJlIGxpa2UgYSBzbWVsbHkgZ29hdCZtZGFzaDt5b3Uga25vdyB3aGVuIHRoZXkgYXJlIGluIHRoZSByb29tIHdpdGggeW91LiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgMTEuMTUiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+QWxsIG9mIHVzIGhhdmUgdXNlZCBwaHJhc2VzIGxpa2UgdGhhdCBiZWZvcmUuPHE+SSdtIGdvaW5nIHRvIGJlIHN0cmFpZ2h0LWZvcndhcmQgd2l0aCB5b3UgaGVyZS4uLjwvcT4gPHE+SSdsbCBiZSBob25lc3QuLi48L3E+IDxxPk5vIGRpc3Jlc3BlY3QgYnV0Li4uPC9xPiBFbXB0eSBleHByZXNzaW9ucyBvciBub3QsIHRoZXkgcHJvbXB0IHRoZSBxdWVzdGlvbjogSWYgeW91IGhhdmUgdG8gcHJlZmFjZSB5b3VyIHJlbWFya3Mgd2l0aCBpbmRpY2F0b3JzIG9mIGhvbmVzdHkgb3IgZGlyZWN0bmVzcywgd2hhdCBkb2VzIHRoYXQgc2F5IGFib3V0IGV2ZXJ5dGhpbmcgZWxzZSB5b3Ugc2F5PyBJZiB5b3Ugc2F5IHlvdSdyZSBiZWluZyBob25lc3QgPGVtPm5vdzwvZW0+LCBkb2VzIHRoYXQgbWVhbiB5b3UgdXN1YWxseSBhcmVuJ3Q/PC9wPjxwPldoYXQgaWYsIGluc3RlYWQsIHlvdSBjdWx0aXZhdGVkIGEgbGlmZSBhbmQgcmVwdXRhdGlvbiBpbiB3aGljaCBob25lc3R5IHdhcyBhcyBiYW5rYWJsZSBhcyBhIG5vdGUgZnJvbSB0aGUgVS5TLiBUcmVhc3VyeSwgYXMgZW1waGF0aWMgYW5kIGV4cGxpY2l0IGFzIGEgY29udHJhY3QsIGFzIHBlcm1hbmVudCBhcyBhIHRhdHRvbz8gTm90IG9ubHkgd291bGQgaXQgc2F2ZSB5b3UgZnJvbSBuZWVkaW5nIHRvIHVzZSB0aGUgcmVhc3N1cmFuY2VzIHRoYXQgb3RoZXIsIGxlc3Mgc2NydXB1bG91cyBwZW9wbGUgbXVzdCBlbmdhZ2UgaW4sIGl0IHdpbGwgbWFrZSB5b3UgYSBiZXR0ZXIgcGVyc29uLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDEyIiwNCiAgICAidG9waWMiOiAiQWx3YXlzIExvdmUiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJIZWN0byBzYXlzLCA8cT5JIGNhbiB0ZWFjaCB5b3UgYSBsb3ZlIHBvdGlvbiBtYWRlIHdpdGhvdXQgYW55IGRydWdzLCBoZXJicywgb3Igc3BlY2lhbCBzcGVsbCZtZGFzaDtpZiB5b3Ugd291bGQgYmUgbG92ZWQsIGxvdmUuPC9xPiIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJNb3JhbCBMZXR0ZXJzLCA5LjYiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+SW4gMTk5MiwgQmFyYmFyYSBKb3JkYW4gYWRkcmVzc2VkIHRoZSBEZW1vY3JhdGljIE5hdGlvbmFsIENvbnZlbnRpb24gYW5kIHJhaWxlZCBhZ2FpbnN0IHRoZSBncmVlZCBhbmQgc2VsZmlzaG5lc3MgYW5kIGRpdmlzaXZlbmVzcyBvZiB0aGUgcHJldmlvdXMgZGVjYWRlLiBQZW9wbGUgd2VyZSByZWFkeSBmb3IgYSBjaGFuZ2UuIDxxPkNoYW5nZSBpdCB0byB3aGF0PzwvcT4gc2hlIGFza2VkLiA8cT5DaGFuZ2UgdGhhdCBlbnZpcm9ubWVudCBvZiB0aGUgODBzIHRvIGFuIGVudmlyb25tZW50IHdoaWNoIGlzIGNoYXJhY3Rlcml6ZWQgYnkgYSBkZXZvdGlvbiB0byB0aGUgcHVibGljIGludGVyZXN0LCBwdWJsaWMgc2VydmljZSwgdG9sZXJhbmNlLCBhbmQgbG92ZS4gTG92ZS4gTG92ZS4gTG92ZS48L3E+PC9wPjxwPkxvdmUuIExvdmUuIExvdmUuIExvdmUuIFdoeT8gQmVjYXVzZSwgYXMgdGhlIEJlYXRsZXMgcHV0IGl0LCA8cT5JbiB0aGUgZW5kLCB0aGUgbG92ZSB5b3UgdGFrZSBpcyBlcXVhbCB0byB0aGUgbG92ZSB5b3UgbWFrZS48L3E+IE5vdCBqdXN0IGluIHBvbGl0aWNzLCBub3QganVzdCBpbiB0b2xlcmFuY2UsIGJ1dCBpbiBvdXIgcGVyc29uYWwgbGl2ZXMuIFRoZXJlIGlzIGFsbW9zdCBubyBzaXR1YXRpb24gaW4gd2hpY2ggaGF0cmVkIGhlbHBzLiBZZXQgYWxtb3N0IGV2ZXJ5IHNpdHVhdGlvbiBpcyBtYWRlIGJldHRlciBieSBsb3ZlJm1kYXNoO29yIGVtcGF0aHksIHVuZGVyc3RhbmRpbmcsIGFwcHJlY2lhdGlvbiZtZGFzaDtldmVuIHNpdHVhdGlvbnMgaW4gd2hpY2ggeW91IGFyZSBpbiBvcHBvc2l0aW9uIHRvIHNvbWVvbmUuPC9wPjxwPkFuZCB3aG8ga25vd3MsIHlvdSBtaWdodCBqdXN0IGdldCBzb21lIG9mIHRoYXQgbG92ZSBiYWNrLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDEzIiwNCiAgICAidG9waWMiOiAiUmV2ZW5nZSBpcyBhIERpc2ggQmVzdCBOb3QgU2VydmVkIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiVGhlIGJlc3Qgd2F5IHRvIGF2ZW5nZSB5b3Vyc2VsZiBpcyB0byBub3QgYmUgbGlrZSB0aGF0LiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgNi42Ig0KICAgICAgfSwNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkhvdyBtdWNoIGJldHRlciB0byBoZWFsIHRoYW4gc2VlayByZXZlbmdlIGZyb20gaW5qdXJ5LiBWZW5nZWFuY2Ugd2FzdGVzIGEgbG90IG9mIHRpbWUgYW5kIGV4cG9zZXMgeW91IHRvIG1hbnkgbW9yZSBpbmp1cmllcyB0aGFuIHRoZSBmaXJzdCB0aGF0IHNwYXJrZWQgaXQuIEFuZ2VyIGFsd2F5cyBvdXRsYXN0cyBodXJ0LiBCZXN0IHRvIHRha2UgdGhlIG9wcG9zaXRlIGNvdXJzZS4gV291bGQgYW55b25lIHRoaW5rIGl0IG5vcm1hbCB0byByZXR1cm4gYSBraWNrIHRvIGEgbXVsZSBvciBhIGJpdGUgdG8gYSBkb2c/IiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk9uIEFuZ2VyLCAzLjI3LjIiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+TGV0J3Mgc2F5IHRoYXQgc29tZW9uZSBoYXMgdHJlYXRlZCB5b3UgcnVkZWx5LiBMZXQncyBzYXkgc29tZW9uZSBnb3QgcHJvbW90ZWQgYWhlYWQgb2YgeW91IGJlY2F1c2UgdGhleSB0b29rIGNyZWRpdCBmb3IgeW91ciB3b3JrIG9yIGRpZCBzb21ldGhpbmcgZGlzaG9uZXN0LiBJdCdzIG5hdHVyYWwgdG8gdGhpbms6IDxlbT5PaCwgdGhhdCdzIGhvdyB0aGUgd29ybGQgd29ya3M8L2VtPiwgb3IgPGVtPk9uZSBkYXkgaXQgd2lsbCBiZSBteSB0dXJuIHRvIGJlIGxpa2UgdGhhdDwvZW0+LiBPciBtb3N0IGNvbW1vbjogPGVtPkknbGwgZ2V0IHRoZW0gZm9yIHRoaXM8L2VtPi4gRXhjZXB0IHRoZXNlIGFyZSB0aGUgd29yc3QgcG9zc2libGUgcmVzcG9uc2VzIHRvIGJhZCBiZWhhdmlvci48L3A+PHA+QXMgTWFyY3VzIGFuZCBTZW5lY2EgYm90aCB3cm90ZSwgdGhlIHByb3BlciByZXNwb25zZSZtZGFzaDtpbmRlZWQgdGhlIGJlc3QgcmV2ZW5nZSZtZGFzaDtpcyB0byBleGFjdCBubyByZXZlbmdlIGF0IGFsbC4gSWYgc29tZW9uZSB0cmVhdHMgeW91IHJ1ZGVseSBhbmQgeW91IHJlc3BvbmQgd2l0aCBydWRlbmVzcywgeW91IGhhdmUgbm90IGRvbmUgYW55dGhpbmcgYnV0IHByb3ZlIHRvIHRoZW0gdGhhdCB0aGV5IHdlcmUganVzdGlmaWVkIGluIHRoZWlyIGFjdGlvbnMuIElmIHlvdSBtZWV0IG90aGVyIHBlb3BsZSdzIGRpc2hvbmVzdHkgd2l0aCBkaXNob25lc3R5IG9mIHlvdXIgb3duLCBndWVzcyB3aGF0PyBZb3UncmUgcHJvdmluZyB0aGVtIHJpZ2h0Jm1kYXNoO25vdyBldmVyeW9uZSA8ZW0+aXM8L2VtPiBhIGxpYXIuPC9wPjxwPkluc3RlYWQsIHRvZGF5LCBsZXQncyBzZWVrIHRvIGJlIGJldHRlciB0aGFuIHRoZSB0aGluZ3MgdGhhdCBkaXNhcHBvaW50IG9yIGh1cnQgdXMuIExldCdzIHRyeSB0byBiZSB0aGUgZXhhbXBsZSB3ZSdkIGxpa2Ugb3RoZXJzIHRvIGZvbGxvdy4gSXQncyBhd2Z1bCB0byBiZSBhIGNoZWF0LCB0byBiZSBzZWxmaXNoLCB0byBmZWVsIHRoZSBuZWVkIHRvIGluZmxpY3QgcGFpbiBvbiBvdXIgZmVsbG93IGh1bWFuIGJlaW5ncy4gTWVhbndoaWxlLCBsaXZpbmcgbW9yYWxseSBhbmQgd2VsbCBpcyBxdWl0ZSBuaWNlLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDE0IiwNCiAgICAidG9waWMiOiAiRG9uJ3QgR2V0IE1hZCwgSGVscCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkFyZSB5b3UgYW5ncnkgd2hlbiBzb21lb25lJ3MgYXJtcGl0cyBzdGluayBvciB3aGVuIHRoZWlyIGJyZWF0aCBpcyBiYWQ/IFdoYXQgd291bGQgYmUgdGhlIHBvaW50PyBIYXZpbmcgc3VjaCBhIG1vdXRoIGFuZCBzdWNoIGFybXBpdHMsIHRoZXJlJ3MgZ29pbmcgdG8gYmUgYSBzbWVsbCBlbWFuYXRpbmcuIFlvdSBzYXksIHRoZXkgbXVzdCBoYXZlIHNlbnNlLCBjYW4ndCB0aGV5IHRlbGwgaG93IHRoZXkgYXJlIG9mZmVuZGluZyBvdGhlcnM/IFdlbGwsIHlvdSBoYXZlIHNlbnNlIHRvbywgY29uZ3JhdHVsYXRpb25zISBTbywgdXNlIHlvdXIgbmF0dXJhbCByZWFzb24gdG8gYXdha2VuIHRoZWlycywgc2hvdyB0aGVtLCBjYWxsIGl0IG91dC4gSWYgdGhlIHBlcnNvbiB3aWxsIGxpc3RlbiwgeW91IHdpbGwgaGF2ZSBjdXJlZCB0aGVtIHdpdGhvdXQgdXNlbGVzcyBhbmdlci4gTm8gZHJhbWEgbm9yIHVuc2VlbWx5IHNob3cgcmVxdWlyZWQuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA1LjI4Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoZSBwZXJzb24gc2l0dGluZyBuZXh0IHRvIHlvdSBvbiB0aGUgcGxhbmUsIHRoZSBvbmUgd2hvIGlzIGxvdWRseSBjaGF0dGVyaW5nIGFuZCBrbm9ja2luZyBhcm91bmQgaW4geW91ciBzcGFjZT8gVGhlIG9uZSB5b3UncmUgZ3JpbmRpbmcgeW91ciB0ZWV0aCBhYm91dCwgaGF0aW5nIGZyb20gdGhlIGRlcHRoIG9mIHlvdXIgc291bCBiZWNhdXNlIHRoZXkncmUgcnVkZSwgaWdub3JhbnQsIG9ibm94aW91cz8gSW4gdGhlc2Ugc2l0dWF0aW9ucywgeW91IG1pZ2h0IGZlZWwgaXQgdGFrZXMgZXZlcnl0aGluZyB5b3UgaGF2ZSB0byByZXN0cmFpbiB5b3Vyc2VsZiBmcm9tIG11cmRlcmluZyB0aGVtLjwvcD48cD5JdCdzIGZ1bm55IGhvdyA8ZW0+dGhhdDwvZW0+IHRob3VnaHQgY29tZXMgaW50byBvdXIgaGVhZHMgYmVmb3JlLCB5b3Uga25vdywgcG9saXRlbHkgYXNraW5nIHRoZW0gdG8gc3RvcCwgb3IgbWFraW5nIHRoZSBtaW5vciBzY2VuZSBvZiBhc2tpbmcgZm9yIGFuIGF3a3dhcmQgY29udmVyc2F0aW9uIHRoYXQgbWlnaHQgYWN0dWFsbHkgaGVscCB0aGlzIHBlcnNvbiBhbmQgbWFrZSB0aGUgd29ybGQgYSBiZXR0ZXIgcGxhY2UuIFdlIGRvbid0IGp1c3Qgd2FudCBwZW9wbGUgdG8gYmUgYmV0dGVyLCB3ZSBleHBlY3QgaXQgdG8gbWFnaWNhbGx5IGhhcHBlbiZtZGFzaDt0aGF0IHdlIGNhbiBzaW1wbHkgd2lsbCBvdGhlciBwZW9wbGUgdG8gY2hhbmdlLCBidXJuaW5nIGhvbGVzIGludG8gdGhlaXIgc2t1bGwgd2l0aCBvdXIgYW5ncnkgc3RhcmUuPC9wPjxwPkFsdGhvdWdoIHdoZW4geW91IHRoaW5rIGFib3V0IGl0IHRoYXQgd2F5LCBpdCBtYWtlcyB5b3Ugd29uZGVyIHdobyB0aGUgcnVkZSBvbmUgYWN0dWFsbHkgaXMuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk9jdG9iZXIgMTUiLA0KICAgICJ0b3BpYyI6ICJTcHJlYWQgdGhlIFdvcmQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJTb21lIHBlb3BsZSB3aXRoIGV4Y2VwdGlvbmFsIG1pbmRzIHF1aWNrbHkgZ3Jhc3AgdmlydHVlLCBvciBwcm9kdWNlIGl0IHdpdGhpbiB0aGVtc2VsdmVzLiBCdXQgb3RoZXIgZGltIGFuZCBsYXp5IHR5cGVzLCBoaW5kZXJlZCBieSBiYWQgaGFiaXRzLCBtdXN0IGhhdmUgdGhlaXIgcnVzdHkgc291bHMgY29uc3RhbnRseSBzY3J1YmJlZCBkb3duLi4uLiBUaGUgd2Vha2VyIHNvcnRzIHdpbGwgYmUgaGVscGVkIGFuZCBsaWZ0ZWQgZnJvbSB0aGVpciBiYWQgb3BpbmlvbnMgaWYgd2UgcHV0IHRoZW0gaW4gdGhlIGNhcmUgb2YgcGhpbG9zb3BoeSdzIHByaW5jaXBsZXMuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk1vcmFsIExldHRlcnMsIDk1LjM2LTM3Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlN0b2ljaXNtIGlzIG5vdCBhbiBldmFuZ2VsaWNhbCByZWxpZ2lvbi4gWW91J3JlIG5vdCBvYmxpZ2F0ZWQgdG8gc2F2ZSBhbnlvbmUmbWRhc2g7dGhlcmUncyBubyBoZWxsIGlmIGEgc291bCByZW1haW5zIGluIGlnbm9yYW5jZSBvZiB0aGUgdGVhY2hpbmdzIG9mIEVwaWN0ZXR1cyBvciBNYXJjdXMgQXVyZWxpdXMuPC9wPjxwPkJ1dCBub3cgdGhhdCB5b3UndmUgbGVhcm5lZCBhbmQgc3R1ZGllZCBhIGJldHRlciBwYXRoLCB5b3UgY2FuIGJlIG9mIHNlcnZpY2UgdG8gb3RoZXJzLiBZb3UgY2FuIHNoYXJlIHlvdXIgd2lzZG9tIG9yIGluc2lnaHQgd2l0aCBhIGZyaWVuZCBvciBzdHJhbmdlciZtZGFzaDtyZW1lbWJlcmluZyB0aGF0IGJlaGF2aW9yIGlzIGFsd2F5cyBhIGJldHRlciBleGFtcGxlIHRoYW4gYSBsZWN0dXJlLjwvcD48cD5FdmVyeW9uZSBkZXNlcnZlcyB0byBiZW5lZml0IGZyb20gPHE+cGhpbG9zb3BoeSdzIHByaW5jaXBsZXM8L3E+IGFzIFNlbmVjYSBwdXQgaXQuIElmIHlvdSBzZWUgc29tZW9uZSB3aG8gaXMgaW4gbmVlZCBvZiBoZWxwLCBvciBoYXMgYXNrZWQgZm9yIGd1aWRhbmNlLCBwcm92aWRlIGl0LiBZb3Ugb3dlIHRoZW0gdGhhdCBtdWNoLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDE2IiwNCiAgICAidG9waWMiOiAiU3ByZWFkIHRoZSBXb3JkIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiU29tZSBwZW9wbGUgd2l0aCBleGNlcHRpb25hbCBtaW5kcyBxdWlja2x5IGdyYXNwIHZpcnR1ZSwgb3IgcHJvZHVjZSBpdCB3aXRoaW4gdGhlbXNlbHZlcy4gQnV0IG90aGVyIGRpbSBhbmQgbGF6eSB0eXBlcywgaGluZGVyZWQgYnkgYmFkIGhhYml0cywgbXVzdCBoYXZlIHRoZWlyIHJ1c3R5IHNvdWxzIGNvbnN0YW50bHkgc2NydWJiZWQgZG93bi4uLiBUaGUgd2Vha2VyIHNvcnRzIHdpbGwgYmUgaGVscGVkIGFuZCBsaWZ0ZWQgZnJvbSB0aGVpciBiYWQgb3BpbmlvbnMgaWYgd2UgcHV0IHRoZW0gaW4gdGhlIGNhcmUgb2YgcGhpbG9zb3BoeSdzIHByaW5jaXBsZXMuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk1vcmFsIExldHRlcnMsIDk1LjM2LTM3Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlN0b2ljaXNtIGlzIG5vdCBhbiBldmFuZ2VsaWNhbCByZWxpZ2lvbi4gWW91J3JlIG5vdCBvYmxpZ2F0ZWQgdG8gc2F2ZSBhbnlvbmUmbWRhc2g7dGhlcmUncyBubyByaXNrIG9mIGhlbGwgaWYgYSBzb3VsIHJlbWFpbnMgaW4gaWdub3JhbmNlIG9mIHRoZSB0ZWFjaGluZ3Mgb2YgRXBpY3RldHVzIG9yIE1hcmN1cyBBdXJlbGl1cy48L3A+PHA+QnV0IG5vdyB0aGF0IHlvdSd2ZSBsZWFybmVkIGFuZCBzdHVkaWVkIGEgYmV0dGVyIHBhdGgsIHlvdSBjYW4gYmUgb2Ygc2VydmljZSB0byBvdGhlcnMuIFlvdSBjYW4gc2hhcmUgeW91ciB3aXNkb20gb3IgaW5zaWdodCB3aXRoIGEgZnJpZW5kIG9yIHN0cmFuZ2VyJm1kYXNoO3JlbWVtYmVyaW5nIHRoYXQgYmVoYXZpb3IgaXMgYWx3YXlzIGEgYmV0dGVyIGV4YW1wbGUgdGhhbiBhIGxlY3R1cmUuPC9wPjxwPkV2ZXJ5b25lIGRlc2VydmVzIHRvIGJlbmVmaXQgZnJvbSA8cT5waGlsb3NvcGh5J3MgcHJpbmNpcGxlczwvcT4gYXMgU2VuZWNhIHB1dCBpdC4gSWYgeW91IHNlZSBzb21lb25lIHdobyBpcyBpbiBuZWVkIG9mIGhlbHAsIG9yIGhhcyBhc2tlZCBmb3IgZ3VpZGFuY2UsIHByb3ZpZGUgaXQuIFlvdSBvd2UgdGhlbSB0aGF0IG11Y2guPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk9jdG9iZXIgMTciLA0KICAgICJ0b3BpYyI6ICJUaGUgQmVuZWZpdCBvZiBLaW5kbmVzcyIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkEgYmVuZWZpdCBzaG91bGQgYmUga2VwdCBsaWtlIGEgYnVyaWVkIHRyZWFzdXJlLCBvbmx5IHRvIGJlIGR1ZyB1cCBpbiBuZWNlc3NpdHkuLi4uTmF0dXJlIGJpZHMgdXMgdG8gZG8gd2VsbCBieSBhbGwuLi4uV2hlcmV2ZXIgdGhlcmUgaXMgYSBodW1hbiBiZWluZywgd2UgaGF2ZSBhbiBvcHBvcnR1bml0eSBmb3Iga2luZG5lc3MuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk9uIFRoZSBIYXBweSBMaWZlLCAyNC4yLTMiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIGZpcnN0IHBlcnNvbiB5b3UgbWVldCB0b2RheSZtZGFzaDtwYXNzaW5nIGFjcXVhaW50YW5jZSBvciBmcmllbmQmbWRhc2g7bm8gbWF0dGVyIHRoZSBjb250ZXh0Jm1kYXNoO3Bvc2l0aXZlIG9yIG5lZ2F0aXZlJm1kYXNoO2lzIGFuIG9wcG9ydHVuaXR5IGZvciBraW5kbmVzcy4gT3IgYXMgZGlmZmVyZW50IHRyYW5zbGF0b3JzIGhhdmUgdGFrZW4gdGhpcyBsaW5lIGZyb20gU2VuZWNhIHRvIG1lYW4sIGl0IGlzIGFuIG9wcG9ydHVuaXR5IGZvciA8ZW0+YmVuZWZpdDwvZW0+LiBGb3IgYm90aCBvZiB5b3UuIFlvdSBjYW4gc2VlayB0byB1bmRlcnN0YW5kIHdoZXJlIHRoZXkgYXJlIGNvbWluZyBmcm9tLiBZb3UgY2FuIHNlZWsgdG8gdW5kZXJzdGFuZCB3aG8gdGhleSBhcmUsIHdoYXQgdGhleSBuZWVkLCBhbmQgd2hhdCBmb3JjZXMgb3IgaW1wdWxzZXMgbWlnaHQgYmUgYWN0aW5nIG9uIHRoZW0uIEFuZCB5b3UgY2FuIHRyZWF0IHRoZW0gd2VsbCBhbmQgYmUgYmV0dGVyIG9mZiBmb3IgaXQuPC9wPjxwPlRoZSBzYW1lIGlzIHRydWUgd2l0aCB0aGUgc2Vjb25kIHBlcnNvbiB5b3UgZW5jb3VudGVyLCBhbmQgdGhlIHRoaXJkLiBPZiBjb3Vyc2UsIHRoZXJlIGlzIG5vIGd1YXJhbnRlZSB0aGF0IHRoZXkgd2lsbCByZXR1cm4gdGhlIGZhdm9yLCBidXQgdGhhdCdzIG5vdCBvdXIgY29uY2Vybi4gQXMgYWx3YXlzLCB3ZSdyZSBnb2luZyB0byBmb2N1cyBvbiB3aGF0IHdlIGNvbnRyb2w6IGluIHRoaXMgY2FzZSwgdGhlIGFiaWxpdHkgdG8gY2hvb3NlIHRvIHJlc3BvbmQgd2l0aCBraW5kbmVzcy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiT2N0b2JlciAxOCIsDQogICAgInRvcGljIjogIkZyZW5lbWllcyIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlRoZXJlJ3Mgbm90aGluZyB3b3JzZSB0aGFuIGEgd29sZiBiZWZyaWVuZGluZyBhIHNoZWVwLiBBdm9pZCBmYWxzZSBmcmllbmRzaGlwIGF0IGFsbCBjb3N0cy4gSWYgeW91IGFyZSBnb29kLCBzdHJhaWdodGZvcndhcmQsIGFuZCB3ZWxsIG1lYW5pbmcgaXQgc2hvdWxkIHNob3cgaW4geW91ciBleWVzIGFuZCBub3QgZXNjYXBlIG5vdGljZS4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDExLjE1Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkl0J3MgcHJldHR5IG9idmlvdXMgdGhhdCBvbmUgc2hvdWxkIGtlZXAgYXdheSBmcm9tIHRoZSB3aWNrZWQgYW5kIHR3by1mYWNlZCBhcyBtdWNoIGFzIHBvc3NpYmxlJm1kYXNoO3RoZSBqZWFsb3VzIGZyaWVuZCwgdGhlIG5hcmNpc3Npc3RpYyBwYXJlbnQsIHRoZSB1bnRydXN0d29ydGh5IHBhcnRuZXIuIEF0IGZpcnN0IGdsYW5jZSwgTWFyY3VzIEF1cmVsaXVzIGlzIHJlbWluZGluZyB1cyB0byBhdm9pZCBmYWxzZSBmcmllbmRzLjwvcD48cD5CdXQgd2hhdCBpZiB3ZSB0dXJuIGl0IGFyb3VuZD8gV2hhdCBpZiwgaW5zdGVhZCwgd2UgYXNrIGFib3V0IHRoZSB0aW1lcyB0aGF0IHdlIGhhdmUgYmVlbiBmYWxzZSB0byA8ZW0+b3VyPC9lbT4gZnJpZW5kcy48L3A+PHA+V2UndmUgYWxsIGJlZW4gYSBmcmVuZW15IGF0IG9uZSBwb2ludCBvciBhbm90aGVyLiBXZSd2ZSBiZWVuIG5pY2UgdG8gdGhlaXIgZmFjZSZtZGFzaDt1c3VhbGx5IGJlY2F1c2UgdGhlcmUgd2FzIHNvbWV0aGluZyBpbiBpdCBmb3IgdXMmbWRhc2g7YnV0IGxhdGVyLCBpbiBkaWZmZXJlbnQgY29tcGFueSwgd2Ugc2FpZCBob3cgd2UgcmVhbGx5IGZlbHQuIE9yIHdlJ3ZlIHN0cnVuZyBzb21lb25lIGFsb25nLCBjYXJlZCBvbmx5IHdoZW4gdGhpbmdzIHdlcmUgZ29pbmcgd2VsbCwgb3IgZGVjbGluZWQgdG8gaGVscCBldmVuIHRob3VnaCBzb21lb25lIHJlYWxseSBuZWVkZWQgdXMuPC9wPjxwPlRoaXMgYmVoYXZpb3IgaXMgYmVuZWF0aCB1cyZtZGFzaDthbmQgd29ydGggcmVtZW1iZXJpbmcgdGhlIG5leHQgdGltZSB3ZSBhY2N1c2Ugc29tZW9uZSBlbHNlIG9mIGJlaW5nIGEgYmFkIGZyaWVuZC48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiT2N0b2JlciAxOSIsDQogICAgInRvcGljIjogIkdvb2QgSGFiaXRzIERyaXZlIE91dCBCYWQgSGFiaXRzIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiU2luY2UgaGFiaXQgaXMgc3VjaCBhIHBvd2VyZnVsIGluZmx1ZW5jZSwgYW5kIHdlJ3JlIHVzZWQgdG8gcHVyc3Vpbmcgb3VyIGltcHVsc2VzIHRvIGdhaW4gYW5kIGF2b2lkIG91dHNpZGUgb3VyIG93biBjaG9pY2UsIHdlIHNob3VsZCBzZXQgYSBjb250cmFyeSBoYWJpdCBhZ2FpbnN0IHRoYXQsIGFuZCB3aGVyZSBhcHBlYXJhbmNlcyBhcmUgcmVhbGx5IHNsaXBwZXJ5LCB1c2UgdGhlIGNvdW50ZXJmb3JjZSBvZiBvdXIgdHJhaW5pbmcuIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDMuMTIuNiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5XaGVuIGEgZG9nIGlzIGJhcmtpbmcgbG91ZGx5IGJlY2F1c2Ugc29tZW9uZSBpcyBhdCB0aGUgZG9vciwgdGhlIHdvcnN0IHRoaW5nIHlvdSBjYW4gZG8gaXMgeWVsbC4gVG8gdGhlIGRvZywgaXQncyBsaWtlIHlvdSdyZSBiYXJraW5nIHRvbyEgV2hlbiBhIGRvZyBpcyBydW5uaW5nIGF3YXksIGl0J3Mgbm90IGhlbHBmdWwgdG8gY2hhc2UgaXQmbWRhc2g7YWdhaW4sIG5vdyBpdCdzIGxpa2UgeW91J3JlIGJvdGggcnVubmluZy4gQSBiZXR0ZXIgb3B0aW9uIGluIGJvdGggc2NlbmFyaW9zIGlzIHRvIGdpdmUgdGhlIGRvZyBzb21ldGhpbmcgZWxzZSB0byBkby4gVGVsbCBpdCB0byBzaXQuIFRlbGwgaXQgdG8gZ28gdG8gaXRzIGJlZCBvciBrZW5uZWwuIFJ1biBpbiB0aGUgb3RoZXIgZGlyZWN0aW9uLiBCcmVhayB0aGUgcGF0dGVybiwgaW50ZXJydXB0IHRoZSBuZWdhdGl2ZSBpbXB1bHNlLjwvcD48cD5UaGUgc2FtZSBnb2VzIGZvciB1cy4gV2hlbiBhIGJhZCBoYWJpdCByZXZlYWxzIGl0c2VsZiwgY291bnRlcmFjdCBpdCB3aXRoIGEgY29tbWl0bWVudCB0byBhIGNvbnRyYXJ5IHZpcnR1ZS4gRm9yIGluc3RhbmNlLCBsZXQncyBzYXkgeW91IGZpbmQgeW91cnNlbGYgcHJvY3Jhc3RpbmF0aW5nIHRvZGF5Jm1kYXNoO2Rvbid0IGRpZyBpbiBhbmQgZmlnaHQgaXQuIEdldCB1cCBhbmQgdGFrZSBhIHdhbGsgdG8gY2xlYXIgeW91ciBoZWFkIGFuZCByZXNldCBpbnN0ZWFkLiBJZiB5b3UgZmluZCB5b3Vyc2VsZiBzYXlpbmcgc29tZXRoaW5nIG5lZ2F0aXZlIG9yIG5hc3R5LCBkb24ndCBraWNrIHlvdXJzZWxmLiBBZGQgc29tZXRoaW5nIHBvc2l0aXZlIGFuZCBuaWNlIHRvIHF1YWxpZnkgdGhlIHJlbWFyay48L3A+PHA+T3Bwb3NlIGVzdGFibGlzaGVkIGhhYml0cywgYW5kIHVzZSB0aGUgY291bnRlcmZvcmNlIG9mIHRyYWluaW5nIHRvIGdldCB0cmFjdGlvbiBhbmQgbWFrZSBwcm9ncmVzcy4gSWYgeW91IGZpbmQgeW91cnNlbGYgY3V0dGluZyBjb3JuZXJzIGR1cmluZyBhIGEgd29ya291dCBvciBvbiBhIHByb2plY3QsIHNheSB0byB5b3Vyc2VsZjogPHE+T0ssIG5vdyBJIGFtIGdvaW5nIHRvIGdvIGV2ZW4gZnVydGhlciBvciBkbyBldmVuIGJldHRlci48L3E+PC9wPjxwPkdvb2QgaGFiaXRzIGhhdmUgdGhlIHBvd2VyIHRvIGRyaXZlIG91dCBiYWQgaGFiaXRzLiBBbmQgaGFiaXRzIGFyZSBlYXN5IHRvIHBpY2sgdXAmbWRhc2g7YXMgd2UgYWxsIGtub3cuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk9jdG9iZXIgMjAiLA0KICAgICJ0b3BpYyI6ICJNYXJrcyBvZiB0aGUgR29vZCBMaWZlIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiWW91IGhhdmUgcHJvb2YgaW4gdGhlIGV4dGVudCBvZiB5b3VyIHdhbmRlcmluZ3MgdGhhdCB5b3UgbmV2ZXIgZm91bmQgdGhlIGFydCBvZiBsaXZpbmcgYW55d2hlcmUmbWRhc2g7bm90IGluIGxvZ2ljLCBub3IgaW4gd2VhbHRoLCBmYW1lLCBvciBpbiBhbnkgaW5kdWxnZW5jZS4gTm93aGVyZS4gV2hlcmUgaXMgaXQgdGhlbj8gSW4gZG9pbmcgd2hhdCBodW1hbiBuYXR1cmUgZGVtYW5kcy4gSG93IGlzIGEgcGVyc29uIHRvIGRvIHRoaXM/IEJ5IGhhdmluZyBwcmluY2lwbGVzIGJlIHRoZSBzb3VyY2Ugb2YgZGVzaXJlIGFuZCBhY3Rpb24uIFdoYXQgcHJpbmNpcGxlcz8gVGhvc2UgdG8gZG8gd2l0aCBnb29kIGFuZCBldmlsLCBpbmRlZWQgaW4gdGhlIGJlbGllZiB0aGF0IHRoZXJlIGlzIG5vIGdvb2QgZm9yIGEgaHVtYW4gYmVpbmcgZXhjZXB0IHdoYXQgY3JlYXRlcyBqdXN0aWNlLCBzZWxmLWNvbnRyb2wsIGNvdXJhZ2UgYW5kIGZyZWVkb20sIGFuZCBub3RoaW5nIGV2aWwgZXhjZXB0IHdoYXQgZGVzdHJveXMgdGhlc2UgdGhpbmdzLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgOC4xLig1KSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD48ZW0+V2hhdCBpcyB0aGUgbWVhbmluZyBvZiBsaWZlPyBXaHkgd2FzIEkgYm9ybj88L2VtPiBNb3N0IG9mIHVzIHN0cnVnZ2xlIHdpdGggdGhlc2UgcXVlc3Rpb25zJm1kYXNoO3NvbWV0aW1lcyB3aGVuIHdlJ3JlIHlvdW5nLCBzb21ldGltZXMgbm90IHVudGlsIHdlJ3JlIG9sZGVyLiBSYXJlbHkgZG8gd2UgZmluZCBtdWNoIGluIHRoZSB3YXkgb2YgZGlyZWN0aW9uLiBCdXQgdGhhdCdzIHNpbXBseSBiZWNhdXNlIHdlIG1pc3MgdGhlIHBvaW50LiBBcyBWaWt0b3IgRnJhbmtsIHBvaW50cyBvdXQgaW4gPGNpdGU+TWFuJ3MgU2VhcmNoIGZvciBNZWFuaW5nPC9jaXRlPiwgaXQgaXMgbm90IG91ciBxdWVzdGlvbiB0byBhc2suIEluc3RlYWQsIGl0IGlzIDxlbT53ZTwvZW0+IHdobyBhcmUgYmVpbmcgYXNrZWQgdGhlIHF1ZXN0aW9uLiBJdCdzIG91ciBsaXZlcyB0aGF0IGFyZSB0aGUgYW5zd2VyLjwvcD48cD5ObyBhbW91bnQgb2YgdHJhdmVsIG9yIHJlYWRpbmcgb3IgY2xldmVyIHNhZ2VzIGNhbiB0ZWxsIHlvdSB3aGF0IHlvdSB3YW50IHRvIGtub3cuIEluc3RlYWQsIGl0IGlzIDxlbT55b3U8L2VtPiB3aG8gbXVzdCBmaW5kIHRoZSBhbnN3ZXIgaW4geW91ciBhY3Rpb25zLCBpbiBsaXZpbmcgdGhlIGdvb2QgbGlmZSZtZGFzaDtieSBlbWJvZHlpbmcgdGhlIHNlbGYtZXZpZGVudCBwcmluY2lwbGVzIG9mIGp1c3RpY2UsIHNlbGYtY29udHJvbCwgY291cmFnZSwgZnJlZWRvbSwgYW5kIGFic3RhaW5pbmcgZnJvbSBldmlsLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDIxIiwNCiAgICAidG9waWMiOiAiSGVyb2VzLCBIZXJlIGFuZCBOb3ciLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJTdWNoIGJlaGF2aW9yISBQZW9wbGUgZG9uJ3Qgd2FudCB0byBwcmFpc2UgdGhlaXIgY29udGVtcG9yYXJpZXMgd2hvc2UgbGl2ZXMgdGhleSBhY3R1YWxseSBzaGFyZSwgYnV0IGhvbGQgZ3JlYXQgZXhwZWN0YXRpb25zIGZvciB0aGUgcHJhaXNlIG9mIGZ1dHVyZSBnZW5lcmF0aW9ucyZtZGFzaDtwZW9wbGUgdGhleSBoYXZlbid0IG1ldCBvciBldmVyIHdpbGwhIFRoaXMgaXMgYWtpbiB0byBiZWluZyB1cHNldCB0aGF0IHBhc3QgZ2VuZXJhdGlvbnMgZGlkbid0IHByYWlzZSB5b3UuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA2LjE4Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkFsZXhhbmRyaWEsIHRoZSBjaXR5IGluIEVneXB0LCBzdGlsbCBiZWFycyB0aGUgbmFtZSBvZiBpdHMgZm91bmRlciwgQWxleGFuZGVyIHRoZSBHcmVhdCwgc29tZSAyLDMwMCB5ZWFycyBhZnRlciBoZSBzZXQgZm9vdCB0aGVyZS4gSG93IGNvb2wgd291bGQgaXQgZmVlbCB0byBoYXZlIGEgY2l0eSBuYW1lZCBhZnRlciB5b3UgZm9yIHNvIG1hbnkgY2VudHVyaWVzPyBUbyBrbm93IHRoYXQgcGVvcGxlIGFyZSBzdGlsbCBzYXlpbmcgeW91ciBuYW1lPzwvcD48cD5IZXJlJ3MgYSB0aG91Z2h0OiBpdCB3b3VsZG4ndCBiZSBjb29sLiBCZWNhdXNlLCBsaWtlIEFsZXhhbmRlciwgeW91J2xsIGJlIGRlYWQuIFlvdSdsbCBoYXZlIG5vIGlkZWEgd2hldGhlciB5b3VyIG5hbWUgbGFzdGVkIGRvd24gdGhyb3VnaCB0aGUgY2VudHVyaWVzLiBObyBvbmUgZ2V0cyB0byBlbmpveSB0aGVpciBvd24gbGVnYWN5Jm1kYXNoO2J5IGRlZmluaXRpb24uPC9wPjxwPldvcnNlLCB0aGluayBvZiBhbGwgdGhlIGhvcnJpYmxlIHRoaW5ncyBBbGV4YW5kZXIgZGlkIHRvIGFjaGlldmUgd2hhdCBoZSBkaWQuIEhlIGZvdWdodCBwb2ludGxlc3Mgd2Fycy4gSGUgaGFkIGEgdGVycmlibGUgdGVtcGVyJm1kYXNoO2V2ZW4ga2lsbGluZyBoaXMgYmVzdCBmcmllbmQgaW4gYSBkcnVua2VuIGZpZ2h0LiBIZSB3YXMgcnV0aGxlc3MgYW5kIGEgc2xhdmUgdG8gaGlzIGFtYml0aW9uLiBJcyBoZSByZWFsbHkgc28gYWRtaXJhYmxlPzwvcD48cD5JbnN0ZWFkIG9mIHdhc3RpbmcgZXZlbiBhIHNlY29uZCBjb25zaWRlcmluZyB0aGUgb3BpbmlvbnMgb2YgZnV0dXJlIHBlb3BsZSZtZGFzaDtwZW9wbGUgd2hvIGFyZSBub3QgZXZlbiBib3JuIHlldCZtZGFzaDtmb2N1cyBldmVyeSBiaXQgb2YgeW91cnNlbGYgb24gYmVpbmcgdGhlIGJlc3QgcGVyc29uIHlvdSBjYW4gYmUgaW4gdGhlIHByZXNlbnQgbW9tZW50LiBPbiBkb2luZyB0aGUgcmlnaHQsIHJpZ2h0IG5vdy4gVGhlIGRpc3RhbnQgZnV0dXJlIGlzIGlycmVsZXZhbnQuIEJlIGdvb2QgYW5kIG5vYmxlIGFuZCBpbXByZXNzaXZlIG5vdyZtZGFzaDt3aGlsZSBpcyBzdGlsbCBtYXR0ZXJzLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDIyIiwNCiAgICAidG9waWMiOiAiSXQncyBFYXN5IHRvIEdldCBCZXR0ZXIsIEJ1dCBCZXR0ZXIgYXQgV2hhdD8iLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJTbyBzb21lb25lJ3MgZ29vZCBhdCB0YWtpbmcgZG93biBhbiBvcHBvbmVudCwgYnV0IHRoYXQgZG9lc24ndCBtYWtlIHRoZW0gbW9yZSBjb21tdW5pdHktbWluZGVkLCBvciBtb2Rlc3QsIG9yIHdlbGwtcHJlcGFyZWQgZm9yIGFueSBjaXJjdW1zdGFuY2UsIG9yIG1vcmUgdG9sZXJhbnQgb2YgdGhlIGZhdWx0cyBvZiBvdGhlcnMuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA3LjUyIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlNlbGYtaW1wcm92ZW1lbnQgaXMgYSBub2JsZSBwdXJzdWl0LiBNb3N0IHBlb3BsZSBkb24ndCBldmVuIGJvdGhlci4gQnV0IGFtb25nIHRob3NlIHdobyBkbywgaXQncyBwb3NzaWJsZSBmb3IgdmFuaXR5IGFuZCBzdXBlcmZpY2lhbGl0eSB0byBjb3JydXB0IHRoZSBwcm9jZXNzLiBEbyB5b3Ugd2FudCBzaXgtcGFjayBhYnMgYmVjYXVzZSB5b3UgYXJlIGNoYWxsZW5naW5nIHlvdXJzZWxmIGFuZCBjb21taXR0aW5nIHRvIGEgZGlmZmljdWx0IGdvYWw/IE9yIGlzIGl0IGJlY2F1c2UgeW91IHdhbnQgdG8gaW1wcmVzcyBwZW9wbGUgd2l0aCB5b3VyIHNoaXJ0IG9mZj8gQXJlIHlvdSBydW5uaW5nIHRoYXQgbWFyYXRob24gYmVjYXVzZSB5b3Ugd2FudCB0byB0ZXN0IHlvdXIgbGltaXRzIG9yIGJlY2F1c2UgeW91J3JlIHJ1bm5pbmcgYXdheSBmcm9tIHlvdXIgcHJvYmxlbXMgYXQgaG9tZT88L3A+PHA+T3VyIHdpbGwgc2hvdWxkbid0IGJlIGRpcmVjdGVkIGF0IGJlY29taW5nIHRoZSBwZXJzb24gd2hvIGlzIGluIHBlcmZlY3Qgc2hhcGUgb3Igd2hvIGNhbiBzcGVhayBtdWx0aXBsZSBsYW5ndWFnZXMgYnV0IHdobyBkb2Vzbid0IGhhdmUgYSBzZWNvbmQgZm9yIG90aGVyIHBlb3BsZS4gV2hhdCdzIHRoZSBwb2ludCBvZiB3aW5uaW5nIGF0IHNwb3J0cyBidXQgbG9zaW5nIGluIHRoZSBlZmZvcnQgdG8gYmUgYSBnb29kIGh1c2JhbmQsIHdpZmUsIGZhdGhlciwgbW90aGVyLCBzb24sIG9yIGRhdWdodGVyPyBMZXQncyBub3QgY29uZnVzZSBnZXR0aW5nIGJldHRlciBhdCA8ZW0+c3R1ZmY8L2VtPiB3aXRoIGJlaW5nIGEgYmV0dGVyIDxlbT5wZXJzb248L2VtPi4gT25lIGlzIGEgbXVjaCBiaWdnZXIgcHJpb3JpdHkgdGhhdCB0aGUgb3RoZXIuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk9jdG9iZXIgMjMiLA0KICAgICJ0b3BpYyI6ICJTaG93IHRoZSBRdWFsaXRpZXMgWW91IFdlcmUgTWFkZSBGb3IiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJQZW9wbGUgYXJlbid0IGluIGF3ZSBvZiB5b3VyIHNoYXJwIG1pbmQ/IFNvIGJlIGl0LiBCdXQgeW91IGhhdmUgbWFueSBvdGhlciBxdWFsaXRpZXMgeW91IGNhbid0IGNsYWltIHRvIGhhdmUgYmVlbiBkZXByaXZlZCBvZiBhdCBiaXJ0aC4gRGlzcGxheSB0aGVuIHRob3NlIHF1YWxpdGllcyBpbiB5b3VyIG93biBwb3dlcjogaG9uZXN0eSwgZGlnbml0eSwgZW5kdXJhbmNlLCBjaGFzdGl0eSwgY29udGVudG1lbnQsIGZydWdhbGl0eSwga2luZG5lc3MsIGZyZWVkb20sIHBlcnNpc3RlbmNlLCBhdm9pZGluZyBnb3NzaXAsIGFuZCBtYWduYW5pbWl0eS4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMgNS41Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkl0JyBlYXN5IHRvIGJsYW1lIG91ciBjaXJjdW1zdGFuY2VzLiBPbmUgcGVyc29uIGN1cnNlcyB0aGF0IHRoZXkgd2VyZW4ndCBib3JuIHRhbGxlciwgYW5vdGhlciB0aGV5J3JlIG5vdCBzbWFydGVyLCB3aXRoIGEgZGlmZmVyZW50IGNvbXBsZXhpb24sIG9yIGJvcm4gaW4gYSBkaWZmZXJlbnQgY291bnRyeS4gSXQnZCBiZSBoYXJkIHRvIGZpbmQgYSBzaW5nbGUgcGVyc29uIG9uIHRoaXMgcGxhbmV0Jm1kYXNoO2Zyb20gc3VwZXJtb2RlbHMgb24gZG93biZtZGFzaDt3aG8gZG9lc24ndCB0aGluayB0aGV5J3JlIGRlZmljaWVudCBpbiBhIGxlYXN0IHNvbWUgd2F5LiBCdXQgd2hhdGV2ZXIgeW91ciBwZXJjZWl2ZWQgZGVmaWNpdHMgYXJlLCByZW1lbWJlciB0aGF0IHRoZXJlIGFyZSBwb3NpdGl2ZSBxdWFsaXRpZXMgdGhhdCB5b3UgY2FuIGRldmVsb3AgdGhhdCBkb24ndCBkZXBlbmQgb24gZ2VuZXRpYyBhY2NpZGVudHMuPC9wPjxwPllvdSBoYXZlIHRoZSA8ZW0+Y2hvaWNlPC9lbT4gdG8gYmUgdHJ1dGhmdWwuIFlvdSBoYXZlIHRoZSA8ZW0+Y2hvaWNlPC9lbT4gdG8gYmUgZGlnbmlmaWVkLiBZb3UgY2FuIDxlbT5jaG9vc2U8L2VtPiB0byBlbmR1cmUuIFlvdSBjYW4gY2hvb3NlIHRvIGJlIGNoYXN0ZS4gWW91IGNhbiBjaG9vc2UgdG8gYmUgdGhyaWZ0eS4gWW91IGNhbiBjaG9vc2UgdG8gYmUga2luZCB0byBvdGhlcnMuIFlvdSBjYW4gY2hvb3NlIHRvIGJlIGZyZWUuIFlvdSBjYW4gcGVyc2lzdCB1bmRlciBkaWZmaWN1bHQgb2Rkcy4gWW91IGNhbiBhdm9pZCB0cmFmZmlja2luZyBpbiBnb3NzaXAuIFlvdSBjYW4gY2hvb3NlIHRvIGJlIGdyYWNpb3VzLjwvcD48cD5BbmQgaG9uZXN0bHksIGFyZW4ndCB0aGUgdHJhaXRzIHRoYXQgYXJlIHRoZSByZXN1bHQgb2YgZWZmb3J0IGFuZCBza2lsbCBtb3JlIGltcHJlc3NpdmUgYW55d2F5PzwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDI0IiwNCiAgICAidG9waWMiOiAiVGhlIEZvdW50YWluIG9mIEdvb2RuZXNzIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiRGlnIGRlZXAgd2l0aGluIHlvdXJzZWxmLCBmb3IgdGhlcmUgaXMgYSBmb3VudGFpbiBvZiBnb29kbmVzcyBldmVyIHJlYWR5IHRvIGZsb3cgaWYgeW91IHdpbGwga2VlcCBkaWdnaW5nLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucyA3LjU5Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRvZGF5LCB3ZSBjb3VsZCBob3BlIHRoYXQgZ29vZG5lc3MgY29tZXMgb3VyIHdheSZtZGFzaDtnb29kIG5ld3MsIGdvb2Qgd2VhdGhlciwgZ29vZCBsdWNrLiBPciB3ZSBjb3VsZCA8ZW0+ZmluZDwvZW0+IGl0IG91cnNlbHZlcywgPGVtPmluPC9lbT4gb3Vyc2VsdmVzLiBHb29kbmVzcyBpc24ndCBzb21ldGhpbmcgdGhhdCdzIGdvaW5nIHRvIGJlIGRlbGl2ZXJlZCBieSBtYWlsLiBZb3UgaGF2ZSB0byBkaWcgaXQgdXAgaW5zaWRlIHlvdXIgb3duIHNvdWwuIFlvdSBmaW5kIGl0IHdpdGhpbiB5b3VyIG93biB0aG91Z2h0cywgYW5kIHlvdSBtYWtlIGl0IHdpdGggeW91ciBvd24gYWN0aW9ucy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiT2N0b2JlciAyNSIsDQogICAgInRvcGljIjogIlR3byBUYXNrcyIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIldoYXQsIHRoZW4sIG1ha2VzIGEgcGVyc29uIGZyZWUgZnJvbSBoaW5kcmFuY2UgYW5kIHNlbGYtZGV0ZXJtaW5pbmc/IEZvciB3ZWFsdGggZG9lc24ndCwgbmVpdGhlciBkb2VzIGhpZ2gtb2ZmaWNlLCBzdGF0ZSBvciBraW5nZG9tJm1kYXNoO3JhdGhlciwgc29tZXRoaW5nIGVsc2UgbXVzdCBiZSBmb3VuZC4uLmluIHRoZSBjYXNlIG9mIGxpdmluZywgaXQgaXMgdGhlIGtub3dsZWRnZSBvZiBob3cgdG8gbGl2ZS4iLA0KICAgICAgICAiYXV0aG9yIjogIkVwaWN0ZXR1cyIsDQogICAgICAgICJzb3VyY2UiOiAiRGlzY291cnNlcywgNC4xLjYyLTY0Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPllvdSBoYXZlIHR3byBlc3NlbnRpYWwgdGFza3MgaW4gbGlmZTogdG8gYmUgYSBnb29kIHBlcnNvbiBhbmQgdG8gcHVyc3VlIHRoZSBvY2N1cGF0aW9uIHRoYXQgeW91IGxvdmUuIEV2ZXJ5dGhpbmcgZWxzZSBpcyBhIHdhc3RlIG9mIGVuZXJneSBhbmQgYSBzcXVhbmRlcmluZyBvZiB5b3VyIHBvdGVudGlhbC48L3A+PHA+SG93IGRvZXMgb25lIGRvIHRoYXQ/IE9LLCB0aGF0J3MgYSB0b3VnaGVyIHF1ZXN0aW9uLiBCdXQgdGhlIHBoaWxvc29waHkgd2Ugc2VlIGZyb20gdGhlIFN0b2ljcyBtYWtlcyBpdCBzaW1wbGUgZW5vdWdoOiBzYXkgbm8gdG8gZGlzdHJhY3Rpb25zLCB0byBkZXN0cnVjdGl2ZSBlbW90aW9ucywgdG8gb3V0c2lkZSBwcmVzc3VyZS4gQXNrIHlvdXJzZWxmOiA8ZW0+V2hhdCBpcyBpdCB0aGF0IG9ubHkgSSBjYW4gZG8/IFdoYXQgaXMgdGhlIGJlc3QgdXNlIG9mIG15IGxpbWl0ZWQgdGltZSBvbiB0aGlzIHBsYW5ldD88L2VtPiBUcnkgdG8gZG8gdGhlIHJpZ2h0IHRoaW5nIHdoZW4gdGhlIHNpdHVhdGlvbiBjYWxscyBmb3IgaXQuIFRyZWF0IG90aGVyIHBlb3BsZSB0aGUgd2F5IHlvdSB3b3VsZCBob3BlIHRvIGJlIHRyZWF0ZWQuIEFuZCB1bmRlcnN0YW5kIHRoYXQgZXZlcnkgc21hbGwgY2hvaWNlIGFuZCB0aW55IG1hdHRlciBpcyBhbiBvcHBvcnR1bml0eSB0byBwcmFjdGljZSB0aGVzZSBsYXJnZXIgcHJpbmNpcGxlcy48L3A+PHA+VGhhdCdzIGl0LiB0aGF0J3Mgd2hhdCBnb2VzIGludG8gdGhlIG1vc3QgaW1wb3J0YW50IHNraWxsIG9mIGFsbDogaG93IHRvIGxpdmUuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk9jdG9iZXIgMjYiLA0KICAgICJ0b3BpYyI6ICJUaHJlZSBQYXJ0cywgT25lIEFpbSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlRoZSBiZXN0IGFuZCB0aGUgZ3JlYXRlc3QgbnVtYmVyIG9mIGF1dGhvcnMgaGF2ZSBhc3NlcnRlZCB0aGF0IHBoaWxvc29waHkgY29uc2lzdHMgb2YgdGhyZWUgcGFydHM6IHRoZSBtb3JhbCwgdGhlIG5hdHVyYWwsIGFuZCB0aGUgcmF0aW9uYWwuIFRoZSBmaXJzdCBwdXRzIHRoZSBzb3VsIGluIG9yZGVyLiBUaGUgc2Vjb25kIHRob3JvdWdobHkgZXhhbWluZXMgdGhlIG5hdHVyYWwgb3JkZXIgb2YgdGhpbmdzLiBUaGUgdGhpcmQgaW5xdWlyZXMgaW50byB0aGUgcHJvcGVyIG1lYW5pbmcgb2Ygd29yZHMsIGFuZCB0aGVpciBhcnJhbmdlbWVudHMgYW5kIHByb29mcyB3aGljaCBrZWVwIGZhbHNlaG9vZHMgZnJvbSBjcmVlcGluZyBpbiB0byBkaXNwbGFjZSB0cnV0aC4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiTW9yYWwgTGV0dGVycywgODkuOSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGVzZSB0aHJlZSBwYXJ0cyZtZGFzaDt0aGUgbW9yYWwsIHRoZSBuYXR1cmFsLCBhbmQgdGhlIHJhdGlvbmFsJm1kYXNoO2hhdmUgb25lIGFpbS4gQXMgZGlmZmVyZW50IGFzIHRoZXkgYXJlLCB0aGV5IGhhdmUgdGhlIHNhbWUgcHVycG9zZTogdG8gaGVscCB5b3UgbGl2ZSBhIGdvb2QgbGlmZSBydWxlZCBieSByZWFzb248L3A+PHA+Tm90IGluIHRoZSBmdXR1cmUsIGJ1dCByaWdodCBub3cuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk9jdG9iZXIgMjciLA0KICAgICJ0b3BpYyI6ICJXZSBSZWFwIFdoYXQgV2UgU293IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiQ3JpbWVzIG9mdGVuIHJldHVybiB0byB0aGVpciB0ZWFjaGVyLiIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJUaHllc3RlcywgMzExIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkl0J3MgaXJvbmljIHRoYXQgU2VuZWNhIHdvdWxkIGhhdmUgb25lIG9mIGhpcyBjaGFyYWN0ZXJzIHV0dGVyIHRoaXMgbGluZS4gQXMgd2Uga25vdywgZm9yIG1hbnkgeWVhcnMgU2VuZWNhIHNlcnZlZCBhcyB0aGUgdHV0b3IgYW5kIG1lbnRvciB0byB0aGUgZW1wZXJvciBOZXJvLiBUaGVyZSBpcyBhIGxvdCBvZiBldmlkZW5jZSB0aGF0IFNlbmVjYSB3YXMsIGluIGZhY3QsIGEgcG9zaXRpdmUgbW9yYWwgaW5mbHVlbmNlIG9uIHRoZSBkZXJhbmdlZCB5b3VuZyBtYW4sIGJ1dCBldmVuIGF0IHRoZSB0aW1lLCBTZW5lY2EncyBjb250ZW1wb3JhcmllcyBmb3VuZCBpdCBzdHJhbmdlIHRoYXQgYSBwaGlsb3NvcGhlciB3b3VsZCBzZXJ2ZSBhcyB0aGUgcmlnaHQgaGFuZCB0byBzdWNoIGFuIGV2aWwgcGVyc29uLiBUaGV5IGV2ZW4gdXNlZCB0aGUgR3JlZWsgd29yZCA8ZW0+dHlyYW5ub2RpZGFza2Fsb3M8L2VtPiZtZGFzaDt0eXJhbnQgdGVhY2hlciZtZGFzaDt0byBkZXNjcmliZSBoaW0uIEFuZCBqdXN0IGFzIFNoYWtlc3BlYXJlIG9ic2VydmVkIGluIDxjaXRlPk1hY2JldGg8L2NpdGU+LCA8cT5CbG9vZHkgaW5zdHJ1Y3Rpb25zLCB3aGljaCwgYmVpbmcgdGF1Z2h0LCByZXR1cm4gLyBUbyBwbGFndWUgdGgnaW52ZW50b3IsPC9xPiBTZW5lY2EncyBjb2xsYWJvcmF0aW9uIHdpdGggTmVybyB1bHRpbWF0ZWx5IGVuZGVkIHdpdGggdGhlIHN0dWRlbnQgbXVyZGVyaW5nIHRoZSB0ZWFjaGVyLjwvcD48cD5JdCdzIHNvbWV0aGluZyB0byB0aGluayBhYm91dCB3aGVuIHlvdSBjb25zaWRlciB3aG9tIHRvIHdvcmsgd2l0aCBhbmQgd2hvbSB0byBkbyBidXNpbmVzcyB3aXRoIGluIGxpZmUuIElmIHlvdSBzaG93IGEgY2xpZW50IGhvdyB0byBkbyBzb21ldGhpbmcgdW5ldGhpY2FsIG9yIGlsbGVnYWwsIG1pZ2h0IHRoZXkgcmV0dXJuIHRoZSBmYXZvciB0byBhbiB1bnN1c3BlY3RpbmcgeW91IGxhdGVyIG9uPyBJZiB5b3UgcHJvdmlkZSBhIGJhZCBleGFtcGxlIHRvIHlvdXIgZW1wbG95ZWVzLCB0byB5b3VyIGFzc29jaWF0ZXMsIHRvIHlvdXIgY2hpbGRyZW4sIG1pZ2h0IHRoZXkgYmV0cmF5IHlvdSBvciBodXJ0IHlvdSBkb3duIHRoZSByb2FkPyBXaGF0IGdvZXMgYXJvdW5kIGNvbWVzIGFyb3VuZCwgaXMgdGhlIHNheWluZy4gS2FybWEgaXMgYSBub3Rpb24gd2UgaGF2ZSBpbXBvcnRlZCBmcm9tIHRoZSBFYXN0LCBhbG9uZyBzaW1pbGFyIGxpbmVzLjwvcD48cD5TZW5lY2EgcGFpZCBhIHByaWNlIGZvciBoaXMgaW5zdHJ1Y3Rpb24gdG8gTmVyby4gQXMgaGFzIGJlZW4gdHJ1ZSB0aHJvdWdob3V0IHRoZSBhZ2VzLCBoaXMgaHlwb2NyaXN5Jm1kYXNoO2F2b2lkYWJsZSBvciBub3QmbWRhc2g7d2FzIGNvc3RseS4gU28gdG9vIHdpbGwgYmUgeW91cnMuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk9jdG9iZXIgMjgiLA0KICAgICJ0b3BpYyI6ICJXZSBXZXJlIE1hZGUgRm9yIEVhY2ggT3RoZXIiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJZb3UnbGwgbW9yZSBxdWlja2x5IGZpbmQgYW4gZWFybHkgdGhpbmcga2VwdCBmcm9tIHRoZSBlYXJ0aCB0aGFuIHlvdSB3aWxsIGEgcGVyc29uIGN1dCBvZmYgZnJvbSBvdGhlciBodW1hbiBiZWluZ3MuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA5LjkuMyINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5OYXR1cmFsbHksIE1hcmN1cyBBdXJlbGl1cyBhbmQgdGhlIHJlc3Qgb2YgdGhlIFN0b2ljcyB3ZXJlIG5vdCBmYW1pbGlhciB3aXRoIE5ld3RvbmlhbiBwaHlzaWNzLiBCdXQgdGhleSBrbmV3IHRoYXQgd2hhdCB3ZW50IHVwIG11c3QgY29tZSBkb3duLiBUaGF0J3MgdGhlIGFuYWxvZ3kgaGUncyB1c2luZyBoZXJlOiBvdXIgbXV0dWFsIGludGVyZGVwZW5kZW5jZSB3aXRoIG91ciBmZWxsb3cgaHVtYW4gYmVpbmdzIGlzIHN0cm9uZ2VyIHRoYW4gdGhlIGxhdyBvZiBncmF2aXR5LjwvcD48cD5QaGlsb3NvcGh5IGF0dHJhY3RzIGludHJvdmVydHMuIFRoZSBzdHVkeSBvZiBodW1hbiBuYXR1cmUgY2FuIG1ha2UgeW91IGF3YXJlIG9mIG90aGVyIHBlb3BsZSdzIGZhdWx0cyBhbmQgY2FuIGJyZWVkIGNvbnRlbXB0IGZvciBvdGhlcnMuIFNvIGRvIHN0cnVnZ2xlIGFuZCBkaWZmaWN1bHR5Jm1kYXNoO3RoZXkgaXNvbGF0ZSB1cyBmcm9tIHRoZSB3b3JsZC48L3A+PHA+QnV0IG5vbmUgb2YgdGhhdCBjaGFuZ2VzIHRoYXQgd2UgYXJlLCBhcyBBcmlzdG90bGUgcHV0IGl0LCBzb2NpYWwgYW5pbWFscy4gV2UgbmVlZCBlYWNoIG90aGVyLiBXZSBtdXN0IGJlIHRoZXJlIGZvciBlYWNoIG90aGVyLiBXZSBtdXN0IHRha2UgY2FyZSBvZiBlYWNoIG90aGVyIChhbmQgdG8gYWxsb3cgb3RoZXJzIHRvIGNhcmUgZm9yIHVzIGluIHJldHVybikuIFRvIHByZXRlbmQgb3RoZXJ3aXNlIGlzIHRvIHZpb2xhdGUgb3VyIG5hdHVyZSwgdG8gYmUgbW9yZSBvciBsZXNzIHRoYW4gd2hhdCBpdCBtZWFucyB0byBiZSBhIGh1bWFuIGJlaW5nLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDI5IiwNCiAgICAidG9waWMiOiAiQ2hhcmFjdGVyIGlzIEZhdGUiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJFYWNoIHBlcnNvbiBhY3F1aXJlcyB0aGVpciBvd24gY2hhcmFjdGVyLCBidXQgdGhlaXIgb2ZmaWNpYWwgcm9sZXMgYXJlIGRlc2lnbmF0ZWQgYnkgY2hhbmNlLiBZb3Ugc2hvdWxkIGludml0ZSBzb21lIHRvIHlvdXIgdGFibGUgYmVjYXVzZSB0aGV5IGFyZSBkZXNlcnZpbmcsIG90aGVycyBiZWNhdXNlIHRoZXkgbWF5IGNvbWUgdG8gZGVzZXJ2ZSBpdC4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiTW9yYWwgTGV0dGVycywgNDcuMTViIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkluIHRoZSBoaXJpbmcgcHJvY2VzcywgbW9zdCBlbXBsb3llcnMgbG9vayBhdCB3aGVyZSBzb21lb25lIHdlbnQgdG8gc2Nob29sLCB3aGF0IGpvYnMgdGhleSd2ZSBoZWxkIGluIHRoZSBwYXN0LiBUaGlzIGlzIGJlY2F1c2UgcGFzdCBzdWNjZXNzIGNhbiBiZSBhbiBpbmRpY2F0b3Igb2YgZnV0dXJlIHN1Y2Nlc3Nlcy4gQnV0IGlzIGl0IGFsd2F5cz8gVGhlcmUgYXJlIHBsZW50eSBvZiBwZW9wbGUgd2hvIHdlcmUgc3VjY2Vzc2Z1bCBiZWNhdXNlIG9mIGx1Y2suIE1heWJlIHRoZXkgZ290IGludG8gT3hmb3JkIG9yIEhhcnZhcmQgYmVjYXVzZSBvZiB0aGVpciBwYXJlbnRzLiBBbmQgd2hhdCBhYm91dCBhIHlvdW5nIHBlcnNvbiB3aG8gaGFzbid0IGhhZCB0aW1lIHRvIGJ1aWxkIGEgdHJhY2sgcmVjb3JkPyBBcmUgdGhleSB3b3J0aGxlc3M/PC9wPjxwPk9mIGNvdXJzZSBub3QuIFRoaXMgaXMgd2h5IDxlbT5jaGFyYWN0ZXI8L2VtPiBpcyBhIGZhciBiZXR0ZXIgbWVhc3VyZSBvZiBhIG1hbiBvciB3b21hbi4gTm90IGp1c3QgZm9yIGpvYnMsIGJ1dCBmb3IgZnJpZW5kc2hpcHMsIHJlbGF0aW9uc2hpcHMsIGZvciBldmVyeXRoaW5nLiBIZXJhY2xpdHVzIHB1dCBpdCBhcyBhIG1heGltOiA8cT5DaGFyYWN0ZXIgaXMgZmF0ZS48L3E+PC9wPjxwPldoZW4geW91IHNlZWsgdG8gYWR2YW5jZSB5b3VyIG93biBwb3NpdGlvbiBpbiBsaWZlLCBjaGFyYWN0ZXIgaXMgdGhlIGJlc3QgbGV2ZXImbWRhc2g7cGVyaGFwcyBub3QgaW4gdGhlIHNob3J0IHRlcm0sIGJ1dCBjZXJ0YWlubHkgb3ZlciB0aGUgbG9uZyB0ZXJtLiBBbmQgdGhlIHNhbWUgZ29lcyBmb3IgdGhlIHBlb3BsZSB5b3UgaW52aXRlIGludG8geW91ciBsaWZlLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDMwIiwNCiAgICAidG9waWMiOiAiV2hvIEdldCdzIHRoZSBMaW9uJ3MgU2hhcmU/IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiQXJlbid0IHlvdSBhc2hhbWVkIHRvIHJlc2VydmUgZm9yIHlvdXJzZWxmIG9ubHkgdGhlIHJlbW5hbnRzIG9mIHlvdXIgbGlmZSBhbmQgdG8gZGVkaWNhdGUgdG8gd2lzZG9tIG9ubHkgdGhhdCB0aW1lIGNhbid0IGJlIGRpcmVjdGVkIHRvIGJ1c2luZXNzPyIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJPbiB0aGUgQnJldml0eSBvZiBMaWZlLCAzLjViIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkluIG9uZSBvZiBoaXMgbGV0dGVycywgU2VuZWNhIHRlbGxzIHRoZSBzdG9yeSBhYm91dCBBbGV4YW5kZXIgdGhlIEdyZWF0LiBBcHBhcmVudGx5IGFzIEFsZXhhbmRlciB3YXMgY29ucXVlcmluZyB0aGUgd29ybGQsIGNlcnRhaW4gY291bnRyaWVzIHdvdWxkIG9mZmVyIGhpbSBwaWVjZXMgb2YgdGhlaXIgdGVycml0b3J5IGluIGhvcGVzIHRoYXQgaGUnZCBsZWF2ZSB0aGVtIGFsb25lIGluIGV4Y2hhbmdlLiBBbGV4YW5kZXIgd291bGQgdGVsbCB0aGVtLCB3cml0ZXMgU2VuZWNhLCB0aGF0IGhlIGhhZG4ndCBjb21lIGFsbCB0aGUgd2F5IHRvIEFzaWEgdG8gYWNjZXB0IHdoYXRldmVyIHRoZXkgd291bGQgZ2l2ZSBoaW0sIGJ1dCBpbnN0ZWFkIHRoZXkgd2VyZSBnb2luZyB0byBoYXZlIHRvIGFjY2VwdCB3aGF0ZXZlciBoZSBjaG9zZSB0byBsZWF2ZSB0aGVtLjwvcD48cD5BY2NvcmRpbmcgdG8gU2VuZWNhLCB3ZSBzaG91bGQgdHJlYXQgcGhpbG9zb3BoeSB0aGUgc2FtZSB3YXkgaW4gb3VyIGxpdmVzLiBQaGlsb3NvcGh5IHNob3VsZG4ndCBoYXZlIHRvIGFjY2VwdCB3aGF0IHRpbWUgb3IgZW5lcmd5IGlzIGxlZnQgb3ZlciBmcm9tIG90aGVyIG9jY3VwYXRpb25zIGJ1dCBpbnN0ZWFkIHdlIHNob3VsZCBncmFjaW91c2x5IG1ha2UgdGltZSBmb3IgdGhvc2Ugb3RoZXIgcHVyc3VpdHMgb25seSBvbmNlIG91ciBzdHVkeSBpcyBmaW5pc2hlZC48L3A+PHA+SWYgcmVhbCBzZWxmLWltcHJvdmVtZW50IGlzIHdoYXQgd2UncmUgYWZ0ZXIsIHdoeSBkbyB3ZSBsZWF2ZSBvdXIgcmVhZGluZyB1bnRpbCB0aG9zZSBmZXcgbWludXRlcyBiZWZvcmUgd2Ugc2h1dCBvZmYgdGhlIGxpZ2h0cyBhbmQgZ28gdG8gYmVkPyBXaHkgZG8gd2UgYmxvY2sgb2ZmIGVpZ2h0IHRvIHRlbiBob3VycyBpbiB0aGUgbWlkZGxlIG9mIHRoZSBkYXkgdG8gYmUgYXQgdGhlIG9mZmljZSBvciB0byBnbyB0byBtZWV0aW5ncyBidXQgYmxvY2sgb3V0IG5vIHRpbWUgZm9yIHRoaW5raW5nIGFib3V0IHRoZSBiaWcgcXVlc3Rpb25zPyBUaGUgYXZlcmFnZSBwZXJzb24gc29tZWhvdyBtYW5hZ2VzIHRvIHNxdWVlemUgaW4gdHdlbnR5LWVpZ2h0IGhvdXJzIG9mIHRlbGV2aXNpb24gcGVyIHdlZWsmbWRhc2g7YnV0IGFzayB0aGVtIGlmIHRoZXkgaGFkIHRpbWUgdG8gc3R1ZHkgcGhpbG9zb3BoeSwgYW5kIHRoZXkgd2lsbCBwcm9iYWJseSB0ZWxsIHlvdSB0aGV5J3JlIHRvbyBidXN5LjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJPY3RvYmVyIDMxIiwNCiAgICAidG9waWMiOiAiWW91IFdlcmUgQm9ybiBHb29kIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiVGhlIGh1bWFuIGJlaW5nIGlzIGJvcm4gd2l0aCBhbiBpbmNsaW5hdGlvbiB0b3dhcmQgdmlydHVlLiIsDQogICAgICAgICJhdXRob3IiOiAiTXVzb25pdXMgUnVmdXMiLA0KICAgICAgICAic291cmNlIjogIkxlY3R1cmVzLCAyLjcuMS0yIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoZSBub3Rpb24gb2Ygb3JpZ2luYWwgc2luIGhhcyB3ZWlnaGVkIGRvd24gaHVtYW5raW5kIGZvciBjZW50dXJpZXMuIEluIHJlYWxpdHksIHdlJ3JlIG1hZGUgdG8gaGVscCBlYWNoIG90aGVyIGFuZCBiZSBnb29kIHRvIGVhY2ggb3RoZXIuIFdlIHdvdWxkbid0IGhhdmUgc3Vydml2ZWQgYXMgYSBzcGVjaWVzIG90aGVyd2lzZS48L3A+PHA+VGhlcmUgaXMgaGFyZGx5IGFuIGlkZWEgaW4gU3RvaWMgcGhpbG9zb3BoeSB0aGF0IHdvdWxkbid0IGJlIGltbWVkaWF0ZWx5IGFncmVlYWJsZSB0byBhIGNoaWxkIG9yIHRoYXQgZG9lc24ndCBqaWJlIHdpdGggY29tbW9uIHNlbnNlLiBUaGUgaWRlYXMgd2l0aGluIGl0IGdvIHRvIHRoZSBjb3JlIG9mIHdobyB3ZSBhcmUgYW5kIHdoYXQgd2Uga25vdyB0byBiZSB0cnVlLiBUaGUgb25seSB0aGluZ3MgdGhleSBjb25mbGljdCB3aXRoIGFyZSB0aGUgdmFyaW91cyBpbnZlbnRpb25zIG9mIHNvY2lldHkmbWRhc2g7d2hpY2ggdXN1YWxseSBzZXJ2ZSBzb21lIHNlbGZpc2ggaW50ZXJlc3QgbW9yZSB0aGFuIHRoZXkgYmVuZWZpdCB0aGUgY29tbW9uIGdvb2QuPC9wPjxwPllvdSB3ZXJlIGJvcm4gZ29vZC4gPHE+QWxsIG9mIHVzIGhhdmUgYmVlbiBtYWRlIGJ5IG5hdHVyZSw8L3E+IFJ1ZnVzIHNhaWQsIDxxPnNvIHRoYXQgd2UgY2FuIGxpdmUgZnJlZSBmcm9tIGVycm9yIGFuZCBub2JseSZtZGFzaDtub3QgdGhhdCBvbmUgY2FuIGFuZCBhbm90aGVyIGNhbid0LCBidXQgYWxsLjwvcT4gWW91IHdlcmUgYm9ybiB3aXRoIGFuIGF0dHJhY3Rpb24gdG8gdmlydHVlIGFuZCBzZWxmLW1hc3RlcnkuIElmIHlvdSd2ZSBnb3R0ZW4gZmFyIGZyb20gdGhhdCwgaXQncyBub3Qgb3V0IG9mIHNvbWUgaW5ib3JuIGNvcnJ1cHRpb24gYnV0IGZyb20gYSBudXJ0dXJpbmcgb2YgdGhlIHdyb25nIHRoaW5ncyBhbmQgdGhlIHdyb25nIGlkZWFzLiBBcyBTZW5lY2EgcG9pbnRlZCBvdXQsIHBoaWxvc29waHkgaXMgYSB0b29sIHRvIHN0cmlwIGl0IGFsbCBhd2F5Jm1kYXNoO3RvIGdldCBiYWNrIHRvIG91ciB0cnVlIG5hdHVyZS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTm92ZW1iZXIgMSIsDQogICAgInRvcGljIjogIkFjY2VwdGluZyBXaGF0IElzIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiRG9uJ3Qgc2VlayBmb3IgZXZlcnl0aGluZyB0byBoYXBwZW4gYXMgeW91IHdpc2ggaXQgd291bGQsIGJ1dCByYXRoZXIgd2lzaCB0aGF0IGV2ZXJ5dGhpbmcgaGFwcGVucyBhcyBpdCBhY3R1YWxseSB3aWxsJm1kYXNoO3RoZW4geW91ciBsaWZlIHdpbGwgZmxvdyB3ZWxsLiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJFbmNoaXJpZGlvbiwgOCINCiAgICAgIH0sDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJJdCBpcyBlYXN5IHRvIHByYWlzZSBwcm92aWRlbmNlIGZvciBhbnl0aGluZyB0aGF0IG1heSBoYXBwZW4gaWYgeW91IGhhdmUgdHdvIHF1YWxpdGllczogYSBjb21wbGV0ZSB2aWV3IG9mIHdoYXQgaGFzIGFjdHVhbGx5IGhhcHBlbmVkIGluIGVhY2ggaW5zdGFuY2UgYW5kIGEgc2Vuc2Ugb2YgZ3JhdGl0dWRlLiBXaXRob3V0IGdyYXRpdHVkZSB3aGF0IGlzIHRoZSBwb2ludCBvZiBzZWVpbmcsIGFuZCB3aXRob3V0IHNlZWluZyB3aGF0IGlzIHRoZSBvYmplY3Qgb2YgZ3JhdGl0dWRlPyIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCAxLjYuMS0yIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlNvbWV0aGluZyBoYXBwZW5lZCB0aGF0IHdlIHdpc2ggaGFkIG5vdC4gV2hpY2ggb2YgdGhlc2UgaXMgZWFzaWVzdCB0byBjaGFuZ2U6IG91ciBvcGluaW9uIG9yIHRoZSBldmVudCB0aGF0IGlzIHBhc3Q/PC9wPjxwPlRoZSBhbnN3ZXIgaXMgb2J2aW91cy4gQWNjZXB0IHdoYXQgaGFwcGVuZWQgYW5kIGNoYW5nZSB5b3VyIHdpc2ggdGhhdCBpdCBoYWQgbm90IGhhcHBlbmVkLiBTdG9pY2lzbSBjYWxscyB0aGlzIHRoZSA8cT5hcnQgb2YgYWNxdWllc2NlbmNlPC9xPiZtZGFzaDt0byBhY2NlcHQgcmF0aGVyIHRoYW4gZmlnaHQgZXZlcnkgbGl0dGxlIHRoaW5nLjwvcD48cD5BbmQgdGhlIG1vc3QgcHJhY3RpY2VkIFN0b2ljcyB0YWtlIGl0IGEgc3RlcCBmdXJ0aGVyLiBJbnN0ZWFkIG9mIHNpbXBseSA8ZW0+YWNjZXB0aW5nPC9lbT4gd2hhdCBoYXBwZW5zLCB0aGV5IHVyZ2UgdXMgdG8gYWN0dWFsbHkgPGVtPmVuam95PC9lbT4gd2hhdCBoYXMgaGFwcGVuZWQmbWRhc2g7d2hhdGV2ZXIgaXQgaXMuIE5pZXR6c2NoZSwgbWFueSBjZW50dXJpZXMgbGF0ZXIsIGNvaW5lZCB0aGUgcGVyZmVjdCBleHByZXNzaW9uIHRvIGNhcHR1cmUgdGhpcyBpZGVhOiA8ZW0+YW1vciBmYXRpPC9lbT4gKGEgbG92ZSBvZiBmYXRlKS4gSXQncyBub3QganVzdCBhY2NlcHRpbmcsIGl0J3MgPGVtPmxvdmluZzwvZW0+IGV2ZXJ5dGhpbmcgdGhhdCBoYXBwZW5zLjwvcD48cD5UbyB3aXNoIGZvciB3aGF0IGhhcHBlbmVkIHRvIGhhcHBlbiBpcyBhIGNsZXZlciB3YXkgdG8gYXZvaWQgZGlzYXBwb2ludG1lbnQgYmVjYXVzZSBub3RoaW5nIGlzIGNvbnRyYXJ5IHRvIHlvdXIgZGVzaXJlcy4gQnV0IHRvIGFjdHVhbGx5IGZlZWwgZ3JhdGl0dWRlIGZvciB3aGF0IGhhcHBlbnM/IFRvIGxvdmUgaXQ/IFRoYXQncyBhIHJlY2lwZSBmb3IgaGFwcGluZXNzIGFuZCBqb3kuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDIiLA0KICAgICJ0b3BpYyI6ICJCaW5kaW5nIE91ciBXaXNoZXMgdG8gV2hhdCBXaWxsIEJlIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiQnV0IEkgaGF2ZW4ndCBhdCBhbnkgdGltZSBiZWVuIGhpbmRlcmVkIGluIG15IHdpbGwsIG5vciBmb3JjZWQgYWdhaW5zdCBpdC4gQW5kIGhvdyBpcyB0aGlzIHBvc3NpYmxlPyBJIGhhdmUgYm91bmQgdXAgbXkgY2hvaWNlIHRvIGFjdCB3aXRoIHRoZSB3aWxsIG9mIEdvZC4gR29kIHdpbGxzIHRoYXQgSSBiZSBzaWNrLCBzdWNoIGlzIG15IHdpbGwuIEhlIHdpbGxzIHRoYXQgSSBzaG91bGQgY2hvb3NlIHNvbWV0aGluZywgc28gZG8gSS4gSGUgd2lsbHMgdGhhdCBJIHJlYWNoIGZvciBzb21ldGhpbmcsIG9yIHNvbWV0aGluZyBiZSBnaXZlbiB0byBtZSZtZGFzaDtJIHdpc2ggZm9yIHRoZSBzYW1lLiBXaGF0IEdvZCBkb2Vzbid0IHdpbGwsIEkgZG8gbm90IHdpc2ggZm9yLiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCA0LjEuODkiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+V2hlbiBHZW5lcmFsIER3aWdodCBELiBFaXNlbmhvd2VyIHdyb3RlIHRvIGhpcyB3aWZlIG9uIHRoZSBldmUgb2YgdGhlIGludmFzaW9uIG9mIE5vcm1hbmR5LCBoZSB0b2xkIGhlciwgPHE+RXZlcnl0aGluZyB3ZSBjb3VsZCB0aGluayBvZiBoYXMgYmVlbiBkb25lLCB0aGUgdHJvb3BzIGFyZSBmaXQgZXZlcnlib2R5IGlzIGRvaW5nIGhpcyBiZXN0LiBUaGUgYW5zd2VyIGlzIGluIHRoZSBsYXAgb2YgdGhlIGdvZHMuPC9xPiBIZSdkIGRvbmUgZXZlcnl0aGluZyBoZSBjb3VsZCZtZGFzaDthbmQgbm93LCB3aGF0IHdvdWxkIGhhcHBlbiB3b3VsZCBoYXBwZW4gYW5kIGFzIEVwaWN0ZXR1cyBtaWdodCBzYXksIGhlIHdhcyByZWFkeSB0byBiZWFyIHdoYXRldmVyIHRoYXQgd2FzLiBJbiBmYWN0LCBFaXNlbmhvd2VyIGhhZCB3cml0dGVuIGFub3RoZXIgbGV0dGVyIHRoYXQgbmlnaHQgYW5kIHByZXBhcmVkIGl0IGZvciByZWxlYXNlIGluIGNhc2UgdGhlIGludmFzaW9uIGZhaWxlZC4gSWYgZmFpbHVyZSB3YXMgd2hhdCBHb2QmbWRhc2g7b3IgZmF0ZSBvciBsdWNrIG9yIHdoYXRldmVyIHlvdSB3YW50IHRvIGNhbGwgaXQmbWRhc2g7d2lsbGVkLCBoZSB3YXMgcmVhZHkuPC9wPjxwPlRoZXJlIGlzIGEgd29uZGVyZnVsIGxlc3NvbiB0aGVyZS4gVGhlIG1hbiBpbiBjaGFyZ2Ugb2YgcGVyaGFwcyB0aGUgbW9zdCBwb3dlcmZ1bCBhcm15IHRoZSB3b3JsZCBoYWQgZXZlciBhc3NlbWJsZWQsIG9uIHRoZSBldmUgb2YgdGhlIG1vc3QgZXhwZXJ0bHkgb3JnYW5pemVkIGFuZCBwbGFubmVkIGludmFzaW9uIHRoZSB3b3JsZCB3aWxsIGhvcGVmdWxseSBldmVyIGtub3csIHdhcyBodW1ibGUgZW5vdWdoIHRvIGtub3cgdGhhdCB0aGUgb3V0Y29tZSB1bHRpbWF0ZWx5IGJlbG9uZ2VkIHRvIHNvbWVvbmUgb3Igc29tZXRoaW5nIGJpZ2dlciB0aGFuIGhpbS48L3A+PHA+QW5kIHNvIGl0IGdvZXMgd2l0aCBhbGwgb3VyIHZlbnR1cmVzLiBObyBtYXR0ZXIgaG93IG11Y2ggcHJlcGFyYXRpb24sIG5vIG1hdHRlciBob3cgc2tpbGxlZCBvciBzbWFydCB3ZSBhcmUsIHRoZSB1bHRpbWF0ZSBvdXRjb21lIGlzIGluIHRoZSBsYXAgb2YgdGhlIGdvZHMuIFRoZSBzb29uZXIgd2Uga25vdyB0aGF0LCB0aGUgYmV0dGVyIHdlIHdpbGwgYmUuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDMiLA0KICAgICJ0b3BpYyI6ICJGb2xsb3dpbmcgdGhlIERvY3RvcidzIE9yZGVycyIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkp1c3QgYXMgd2UgY29tbW9ubHkgaGVhciBwZW9wbGUgc2F5IHRoZSBkb2N0b3IgcHJlc2NyaWJlZCBzb21lb25lIHBhcnRpY3VsYXIgcmlkaW5nIGV4ZXJjaXNlcywgb3IgaWNlIGJhdGhzLCBvciB3YWxraW5nIHdpdGhvdXQgc2hvZXMsIHdlIHNob3VsZCBpbiB0aGUgc2FtZSB3YXkgc2F5IHRoYXQgbmF0dXJlIHByZXNjcmliZWQgc29tZW9uZSB0byBiZSBkaXNlYXNlZCwgb3IgZGlzYWJsZWQsIG9yIHRvIHN1ZmZlciBhbnkga2luZCBvZiBpbXBhaXJtZW50LiBJbiB0aGUgY2FzZSBvZiB0aGUgZG9jdG9yLCBwcmVzY3JpYmVkIG1lYW5zIHNvbWV0aGluZyBvcmRlcmVkIHRvIGhlbHAgYWlkIHNvbWVvbmUncyBoZWFsaW5nLiBCdXQgaW4gdGhlIGNhc2Ugb2YgbmF0dXJlLCBpdCBtZWFucyB0aGF0IHdoYXQgaGFwcGVucyB0byBlYWNoIG9mIHVzIGlzIG9yZGVyZWQgdG8gaGVscCBhaWQgb3VyIGRlc3RpbnkuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA1LjgiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIFN0b2ljcyB3ZXJlIG1hc3RlcnMgYXQgYW5hbG9naWVzIGFuZCB1c2VkIHRoZW0gYXMgYSB0b29sIHRvIGhlbHAgc3RyZW5ndGhlbiB0aGVpciByZWFzb25pbmcuPC9wPjxwPkhlcmUsIE1hcmN1cyBvYnNlcnZlcyBob3cgd2lsbGluZ2x5IHdlIHdpbGwgcHV0IHVwIHdpdGggdW5wbGVhc2FudG5lc3MgaWYgY29tbWFuZGVkIHRvIGJ5IHRoZSBtYWdpYyB3b3JkcyA8cT5kb2N0b3IncyBvcmRlcnMuPC9xPiBUaGUgZG9jdG9yIHNheXMgeW91J3ZlIGdvdCB0byB0YWtlIHRoaXMgbmFzdHkgbWVkaWNpbmUsIGFuZCB5b3UnbGwgZG8gaXQuIFRoZSBkb2N0b3IgdGVsbHMgeW91IHlvdSBoYXZlIHRvIHN0YXJ0IHNsZWVwaW5nIGhhbmdpbmcgdXBzaWRlIGRvd24gbGlrZSBhIGJhdC4gWW91J2xsIGZlZWwgc2lsbHksIGJ1dCBzb29uIGVub3VnaCB5b3UnbGwgZ2V0IHRvIGRhbmdsaW5nIGJlY2F1c2UgeW91IHRoaW5rIGl0IHdpbGwgbWFrZSB5b3UgYmV0dGVyLjwvcD48cD5PbiB0aGUgb3RoZXIgaGFuZCwgd2hlbiBpdCBjb21lcyB0byBleHRlcm5hbCBldmVudHMsIHdlIGZpZ2h0IGxpa2UgaGVsbCBpZiBhbnl0aGluZyBoYXBwZW5zIGNvbnRyYXJ5IHRvIG91ciBwbGFucy4gQnV0IHdoYXQgaWYsIE1hcmN1cyBhc2tzLCBhIGRvY3RvciBoYWQgcHJlc2NyaWJlZCB0aGlzIGV4YWN0IHRoaW5nIGFzIGEgcGFydCBvZiBvdXIgdHJlYXRtZW50PyBXaGF0IGlmIHRoaXMgd2FzIGFzIGdvb2QgZm9yIHVzIGFzIG1lZGljaW5lPzwvcD48cD5XZWxsLCB3aGF0IGlmPzwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciA0IiwNCiAgICAidG9waWMiOiAiTm90IEdvb2QsIE5vciBCYWQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJUaGVyZSBpcyBubyBldmlsIGluIHRoaW5ncyBjaGFuZ2luZywganVzdCBhcyB0aGVyZSBpcyBubyBnb29kIGluIHBlcnNpc3RpbmcgaW4gYSBuZXcgc3RhdGUuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA0LjQyIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPldoZW4gcGVvcGxlIHNheSBjaGFuZ2UgaXMgZ29vZCwgdGhleSdyZSB1c3VhbGx5IHRyeWluZyB0byByZWFzc3VyZSBzb21lb25lIChvciB0aGVtc2VsdmVzKS4gQmVjYXVzZSBpbnN0aW5jdGl2ZWx5IHdlIHZpZXcgY2hhbmdlIGFzIGJhZCZtZGFzaDtvciBhdCBsZXN0IHdlJ3JlIHN1c3BpY2lvdXMgb2YgaXQuPC9wPjxwPlRoZSBTdG9pY3Mgd2FudCB5b3UgdG8gZG8gYXdheSB3aXRoIHRob3NlIGxhYmVscyBhbHRvZ2V0aGVyLiBDaGFuZ2UgaXNuJ3QgZ29vZC4gVGhlIHN0YXR1cyBxdW8gaXNuJ3QgYmFkLiBUaGV5IGp1c3QgPGVtPmFyZTwvZW0+LjwvcD48cD5SZW1lbWJlciwgZXZlbnRzIGFyZSBvYmplY3RpdmUuIEl0J3Mgb25seSBvdXIgb3BpbmlvbiB0aGF0IHNheXMgc29tZXRoaW5nIGlzIGdvb2Qgb3IgYmFkIChhbmQgdGh1cyB3b3J0aCBmaWdodGluZyBhZ2FpbnN0IG9yIGZpZ2h0aW5nIGZvcikuIEEgYmV0dGVyIGF0dGl0dWRlPyBUbyBkZWNpZGUgdG8gbWFrZSB0aGUgbW9zdCBvZiBldmVyeXRoaW5nLiBCdXQgdG8gZG8gdGhhdCB5b3UgbXVzdCBmaXJzdCBjZWFzZSBmaWdodGluZy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTm92ZW1iZXIgNSIsDQogICAgInRvcGljIjogIkEgSGlnaGVyIFBvd2VyIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiVGhpcyBpcyB0aGUgdmVyeSB0aGluZyB3aGljaCBtYWtlcyB1cCB0aGUgdmlydHVlIG9mIHRoZSBoYXBweSBwZXJzb24gYW5kIGEgd2VsbC1mbG93aW5nIGxpZmUmbWRhc2g7d2hlbiB0aGUgYWZmYWlycyBvZiBsaWZlIGFyZSBpbiBldmVyeSB3YXkgdHVuZWQgdG8gdGhlIGhhcm1vbnkgYmV0d2VlbiB0aGUgaW5kaXZpZHVhbCBkaXZpbmUgc3Bpcml0IGFuZCB0aGUgd2lsbCBvZiB0aGUgZGlyZWN0b3Igb2YgdGhlIHVuaXZlcnNlLiIsDQogICAgICAgICJhdXRob3IiOiAiQ2hyeXNpcHB1cywgUXVvdGVkIGluIERpb2dlbmVzIExhZXJ0aXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJMaXZlcyBvZiB0aGUgRW1pbmVudCBQaGlsb3NvcGhlcnMsIDcuMS44OCINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5JbiB1bmRlcmdvaW5nIGEgdHdlbHZlLXN0ZXAgcHJvZ3JhbSwgbWFueSBhZGRpY3RzIHN0cnVnZ2xlIG1vc3Qgd2l0aCBzdGVwIDI6IGFja25vd2xlZGdpbmcgYSBoaWdoZXIgcG93ZXIuIEFkZGljdHMgb2Z0ZW4gZmlnaHQgdGhpcyBvbmUuIEF0IGZpcnN0IHRoZXkgY2xhaW0gaXQncyBiZWNhdXNlIHRoZXkncmUgYXRoZWlzdHMgb3IgYmVjYXVzZSB0aGV5IGRvbid0IGxpa2UgcmVsaWdpb24gb3IgYmVjYXVzZSB0aGV5IGRvbid0IHVuZGVyc3RhbmQgd2h5IGl0IG1hdHRlcnMuPC9wPjxwPkJ1dCB0aGV5IGxhdGVyIHJlYWxpemUgdGhhdCB0aGlzIGlzIGp1c3QgdGhlIGFkZGljdGlvbiB0YWxraW5nJm1kYXNoO2l0J3MgYW5vdGhlciBmb3JtIG9mIHNlbGZpc2huZXNzIGFuZCBzZWxmLWFic29ycHRpb24uIFRoZSBhY3R1YWwgbGFuZ3VhZ2Ugb2YgdGhlIHN0ZXAgaXMgcHJldHR5IGVhc3kgdG8gc3dhbGxvdzogPHE+W1dlXSBjYW1lIHRvIGJlbGlldmUgdGhhdCBhIFBvd2VyIGdyZWF0ZXIgdGhhbiBvdXJzZWx2ZXMgY291bGQgcmVzdG9yZSB1cyB0byBzYW5pdHkuPC9xPiBTdWJzZXF1ZW50IHN0ZXBzIGFzayB0aGUgYWRkaWN0IHRvIHN1Ym1pdCBhbmQgbGV0IGdvLiBUaGUgc2Vjb25kIHN0ZXAgcmVhbGx5IGhhcyBsZXNzIHRvIGRvIHdpdGggPHE+Z29kPC9xPiB0aGFuIHRob3NlIG90aGVyIHN0ZXBzJm1kYXNoO3RoZSBsZXR0aW5nIGdvLiBJdCdzIGFib3V0IGF0dHVuaW5nIHRvIHRoZSB1bml2ZXJzZSBhbmQgZGlzY2FyZGluZyB0aGUgdG94aWMgaWRlYSB0aGF0IHdlJ3JlIGF0IHRoZSBjZW50ZXIgb2YgaXQuPC9wPjxwPkl0J3Mgbm8gd29uZGVyIHRoYSB0aGUgU3RvaWNzIGFyZSBwb3B1bGFyIHdpdGggdGhvc2UgaW4gdHdlbHZlLXN0ZXAgcHJvZ3JhbXMuIEl0J3MgYWxzbyBjbGVhciB0aGF0IHRoaXMgd2lzZG9tIGlzIGJlbmVmaWNpYWwgdG8gdXMgYWxsLiBZb3UgZG9uJ3QgaGF2ZSB0byBiZWxpZXZlIHRoZXJlIGlzIGEgZ29kIGRpcmVjdGluZyB0aGUgdW5pdmVyc2UsIHlvdSBqdXN0IG5lZWQgdG8gc3RvcCBiZWxpZXZpbmcgdGhhdCA8ZW0+eW91J3JlPC9lbT4gdGhhdCBkaXJlY3Rvci4gQXMgc29vbiBhcyB5b3UgY2FuIGF0dHVuZSB5b3VyIHNwaXJpdCB0byB0aGF0IGlkZWEsIHRoZSBlYXNpZXIgYW5kIGhhcHBpZXIgeW91ciBsaWZlIHdpbGwgYmUsIGJlY2F1c2UgeW91IHdpbGwgaGF2ZSBnaXZlbiB1cCB0aGUgbW9zdCBwb3RlbnQgYWRkaWN0aW9uIG9mIGFsbDogY29udHJvbDwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciA2IiwNCiAgICAidG9waWMiOiAiU29tZW9uZSBFbHNlIGlzIFNwaW5uaW5nIHRoZSBUaHJlYWQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJJZiB0aGUgYnJlYWtpbmcgZGF5IHNlZXMgc29tZW9uZSBwcm91ZCw8YnIgLz5UaGUgZW5kaW5nIGRheSBzZWVzIHRoZW0gYnJvdWdodCBsb3cuPGJyIC8+Tm8gb25lIHNob3VsZCBwdXQgdG9vIG11Y2ggdHJ1c3QgaW4gdHJpdW1waCw8YnIgLz5ObyBvbmUgc2hvdWxkIGdpdmUgdXAgaG9wZSBvZiB0cmlhbHMgaW1wcm92aW5nLjxiciAvPkNsb3RobyBtaXhlcyBvbmUgd2l0aCB0aGUgb3RoZXIgYW5kIHN0b3BzPGJyIC8+Rm9ydHVuZSBmcm9tIHJlc3RpbmcsIHNwaW5uaW5nIGV2ZXJ5IGZhdGUgYXJvdW5kLjxiciAvPk5vIG9uZSBoYXMgaGFkIHNvIG11Y2ggZGl2aW5lIGZhdm9yPGJyIC8+VGhhdCB0aGV5IGNvdWxkIGd1YXJhbnRlZSB0aGVtc2VsdmVzIHRvbW9ycm93LjxiciAvPkdvZCBrZWVwcyBvdXIgbGl2ZXMgaHVydGxpbmcgb24sPGJyIC8+U3Bpbm5pbmcgaW4gYSB3aGlybHdpbmQuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIlRoeWVzdGVzLCA2MTMiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIG5vdmVsaXN0IENvcm1hYyBNY0NhcnRoeSB3YXMgbGl2aW5nIGluIGEgbW90ZWwgcm9vbSB3aGVuIGhlIGhlYXJkIGEga25vY2sgYXQgdGhlIGRvb3IuIEl0IHdhcyBhIG1lc3NlbmdlciZtZGFzaDtoZSdkIGJlZW4gYXdhcmRlZCB0aGUgTWFjQXJ0aHVyIDxxPmdlbml1czwvcT4gZ3JhbnQgYW5kICQyNTAsMDAwLiBVbmV4cGVjdGVkIGV2ZW50cyBjYW4gYmUgZ29vZCBhcyB3ZWxsIGFzIGJhZC48L3A+PHA+V2hvIGNvdWxkIGRyZWFtIG9mIHN1Y2ggYW4gdW5leHBlY3RlZCB0d2lzdD8gV2hvIGJ1dCBDbG90aG9zLCBvbmUgb2YgdGhlIHRocmVlIEdyZWVrIGdvZGRlc3NlcyBvZiBmYXRlLCB3aG8gPHE+c3BpbnM8L3E+IHRoZSB0aHJlYWQgb2YgaHVtYW4gbGlmZT8gVG8gdGhlIGFuY2llbnRzLCBzaGUgd2FzIHRoZSBvbmUgd2hvIGRlY2lkZWQgdGhlIGNvdXJzZSBvZiB0aGUgZXZlbnRzIG9mIG91ciBsaXZlcyZtZGFzaDtzb21lIGdvb2QsIHNvbWUgYmFkLiBBcyB0aGUgcGxheXdyaWdodCBBZXNjaHlsdXMgd3JvdGUsIDxxPldoZW4gdGhlIGdvZHMgc2VuZCBldmlsLCBvbmUgY2Fubm90IGVzY2FwZSBpdC48L3E+IFRoZSBzYW1lIHdhcyB0cnVlIGZvciBncmVhdCBkZXN0aW55IGFuZCBnb29kIGZvcnR1bmUuPC9wPjxwPlRoZWlyIHJlc2lnbmVkIGF0dGl0dWRlIG1pZ2h0IHNlZW0gc3RyYW5nZSB0byB1cyB0b2RheSwgYnV0IHRoZXkgdW5kZXJzdG9vZCB3aG8gd2FzIHJlYWxseSBpbiBjb250cm9sIChub3QgdGhlbSwgbm90IHVzISkuIE5vIGFtb3VudCBvZiBwcm9zcGVyaXR5LCBubyBhbW91bnQgb2YgZGlmZmljdWx0eSwgaXMgY2VydGFpbiBvciBmb3JldmVyLiBBIHRyaXVtcGggYmVjb21lcyBhIHRyaWFsLCBhIHRyaWFsIGJlY29tZXMgYSB0cml1bXBoLiBMaWZlIGNhbiBjaGFuZ2UgaW4gYW4gaW5zdGFudC4gUmVtZW1iZXIsIHRvZGF5LCBob3cgb2Z0ZW4gaXQgZG9lcy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTm92ZW1iZXIgNyIsDQogICAgInRvcGljIjogIkhvdyB0byBiZSBQb3dlcmZ1bCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkRvbid0IHRydXN0IGluIHlvdXIgcmVwdXRhdGlvbiwgbW9uZXksIG9yIHJlcHV0YXRpb24sIGJ1dCBpbiB0aGUgc3RyZW5ndGggdGhhdCBpcyB5b3VycyZtZGFzaDtuYW1lbHksIHlvdXIganVkZ2VtZW50cyBhYm91dCB0aGUgdGhpbmdzIHRoYXQgeW91IGNvbnRyb2wgYW5kIGRvbid0IGNvbnRyb2wuIEZvciB0aGlzIGFsb25lIGlzIHdoYXQgbWFrZXMgdXMgZnJlZSBhbmQgdW5mZXR0ZXJlZCwgdGhhdCBwaWNrcyB1cyB1cCBieSB0aGUgbmVjayBmcm9tIHRoZSBkZXB0aHMgYW5kIGxpZnRzIHVzIGV5ZSB0byBleWUgd2l0aCB0aGUgcmljaCBhbmQgcG93ZXJmdWwuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDMuMjYuMzQtMzUiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+SW4gYSBzY2VuZSBpbiBTdGV2ZW4gUHJlc3NmaWVsZCdzIGNsYXNzaWMgbm92ZWwgYWJvdXQgQWxleGFuZGVyIHRoZSBHcmVhdCwgPGNpdGU+VGhlIFZpcnR1ZXMgb2YgV2FyPC9jaXRlPiwgQWxleGFuZGVyIHJlYWNoZXMgYSByaXZlciBjcm9zc2luZyBvbmx5IHRvIGJlIGNvbmZyb250ZWQgYnkgYSBwaGlsb3NvcGhlciB3aG8gcmVmdXNlcyB0byBtb3ZlLiA8cT5UaGlzIG1hbiBoYXMgY29ucXVlcmVkIHRoZSB3b3JsZCE8L3E+IG9uZSBvZiBBbGV4YW5kZXIncyBtZW4gc2hvdXRzLiA8cT5XaGF0IGhhdmUgeW91IGRvbmU/PC9xPiBUaGUgcGhpbG9zb3BoZXIgcmVzcG9uZHMsIHdpdGggY29tcGxldGUgY29uZmlkZW5jZSwgPHE+SSBoYXZlIGNvbnF1ZXJlZCB0aGUgbmVlZCB0byBjb25xdWVyIHRoZSB3b3JsZC48L3E+PC9wPjxwPldlIGRvIGtub3cgdGhhdCBBbGV4YW5kZXIgZGlkIGNsYXNoIHdpdGggRGlvZ2VuZXMgdGhlIEN5bmljLCBhIHBoaWxvc29waGVyIGtub3duIGZvciBoaXMgcmVqZWN0aW9uIG9mIHdoYXQgc29jaWV0eSBwcml6ZXMgYW5kLCBieSBleHRlbnNpb24sIEFsZXhhbmRlcidzIHNlbGYtaW1hZ2UuIEp1c3QgYXMgaW4gUHJlc3NmaWVsZCdzIGZpY3Rpb25hbCBlbmNvdW50ZXIsIGluIERpb2dlbmVzJ3MgcmVhbCBjb25mcm9udGF0aW9uIHdpdGggQWxleGFuZGVyLCB0aGUgcGhpbG9zb3BoZXIgd2FzIG1vcmUgcG93ZXJmdWwgdGhhbiB0aGUgbW9zdCBwb3dlcmZ1bCBtYW4gaW4gdGhlIHdvcmxkJm1kYXNoO2JlY2F1c2UsIHVubGlrZSBoaW0sIERpb2dlbmVzIGhhZCBmZXdlciB3YW50cy4gVGhleSB3ZXJlIGFibGUgdG8gbG9vayBlYWNoIG90aGVyIGluIHRoZSBleWUgYW5kIHNlZSB3aG8gcmVhbGx5IGhhZCBjb250cm9sIG92ZXIgaGltc2VsZiwgd2hvIGhhZCBhY2hpZXZlZCB0aGUgc2VsZi1tYXN0ZXJ5IHJlcXVpcmVkIGZvciByZWFsIGFuZCBsYXN0aW5nIHBvd2VyLjwvcD48cD5Zb3UgY2FuIGhhdmUgdGhhdCB0b28uIEl0IGp1c3QgbWVhbnMgZm9jdXNpbmcgaW53YXJkIG9uIGFjcXVpcmluZyBwb3dlciByYXRoZXIgdGhhbiBvdXR3YXJkLiBBcyBQdWJsaWx1cyBTeXJ1cywgaGltc2VsZiBhIGZvcm1lciBzbGF2ZSwgcHV0IGl0OiA8cT5Xb3VsZCB5b3UgaGF2ZSBhIGdyZWF0IGVtcGlyZT8gUnVsZSBvdmVyIHlvdXJzZWxmITwvcT48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTm92ZW1iZXIgOCIsDQogICAgInRvcGljIjogIkFjdG9ycyBpbiBhIFBsYXkiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJSZW1lbWJlciB0aGF0IHlvdSBhcmUgYW4gYWN0b3IgaW4gYSBwbGF5LCBwbGF5aW5nIGEgY2hhcmFjdGVyIGFjY29yZGluZyB0byB0aGUgd2lsbCBvZiB0aGUgcGxheXdyaWdodCZtZGFzaDtpZiBhIHNob3J0IHBsYXksIHRoZW4gaXQncyBzaG9ydDsgaWYgbG9uZywgbG9uZy4gSWYgaGUgd2lzaGVzIHlvdSB0byBwbGF5IHRoZSBiZWdnYXIsIHBsYXkgZXZlbiB0aGF0IHJvbGUgd2VsbCwganVzdCBhcyB5b3Ugd291bGQgaWYgaXQgd2VyZSBhIGNyaXBwbGUsIGEgaG9uY2hvLCBvciBhbiBldmVyeWRheSBwZXJzb24uIEZvciB0aGlzIGlzIHlvdXIgZHV0eSwgdG8gcGVyZm9ybSB3ZWxsIHRoZSBjaGFyYWN0ZXIgYXNzaWduZWQgeW91LiBUaGF0IHNlbGVjdGlvbiBiZWxvbmdzIHRvIGFub3RoZXIuIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkVuY2hpcmlkaW9uLCAxNyINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5NYXJjdXMgQXVyZWxpdXMgZGlkbid0IHdhbnQgdG8gYmUgZW1wZXJvci4gSGUgd2Fzbid0IGEgcG9saXRpY2lhbiB3aG8gc291Z2h0IG9mZmljZSwgYW5kIGhlIHdhc24ndCBhIHRydWUgaGVpciB0byB0aGUgdGhyb25lLiBBcyBmYXIgYXMgd2UgY2FuIHRlbGwgZnJvbSBoaXMgbGV0dGVycyBhbmQgZnJvbSBoaXN0b3J5LCB3aGF0IGhlIHJlYWxseSB3YW50ZWQgd2FzIHRvIGJlIGEgcGhpbG9zb3BoZXIuIEJ1dCB0aGUgcG93ZXJmdWwgZWxpdGUgaW4gUm9tZSwgaW5jbHVkaW5nIHRoZSBlbXBlcm9yIEhhZHJpYW4sIHNhdyBzb21ldGhpbmcgaW4gaGltLiBHcm9vbWVkIGZvciBwb3dlciwgTWFyY3VzIHdhcyBhZG9wdGVkIGFuZCBwdXQgaW4gbGluZSBmb3IgdGhlIHRocm9uZSBiZWNhdXNlIHRoZXkga25ldyBoZSBjb3VsZCBoYW5kbGUgaXQuIE1lYW53aGlsZSwgRXBpY3RldHVzIGxpdmVkIG11Y2ggb2YgaGlzIGxpZmUgYXMgYSBzbGF2ZSBhbmQgd2FzIHBlcnNlY3V0ZWQgZm9yIGhpcyBwaGlsb3NvcGhpY2FsIHRlYWNoaW5ncy4gQm90aCBkaWQgcXVpdGUgYSBsb3Qgd2l0aCB0aGUgcm9sZXMgdGhleSB3ZXJlIGFzc2lnbmVkLiA8L3A+PHA+T3VyIHN0YXRpb24gaW4gbGlmZSBjYW4gYmUgYXMgcmFuZG9tIGFzIGEgcm9sbCBvZiB0aGUgZGljZS4gU29tZSBvZiB1cyBhcmUgYm9ybiBpbnRvIHByaXZpbGVnZSwgb3RoZXJzIGludG8gYWR2ZXJzaXR5LiBTb21ldGltZXMgd2UncmUgZ2l2ZW4gZXhhY3RseSB0aGUgb3Bwb3J0dW5pdGllcyB3ZSB3YW50LiBBdCBvdGhlciB0aW1lcywgd2UncmUgZ2l2ZW4gYSBsdWNreSBicmVhaywgYnV0IHRvIHVzIGl0IGZlZWxzIGxpa2UgYSBidXJkZW4uPC9wPjxwPlRoZSBTdG9pY3MgcmVtaW5kIHVzIHRoYXQgd2hhdGV2ZXIgaGFwcGVucyB0byB1cyB0b2RheSBvciBvdmVyIHRoZSBjb3Vyc2Ugb2Ygb3VyIGxpdmVzLCB3aGVyZXZlciB3ZSBmYWxsIG9uIHRoZSBpbnRlbGxlY3R1YWwsIHNvY2lhbCwgb3IgcGh5c2ljYWwgc3BlY3RyYSwgb3VyIGpvYiBpcyBub3QgdG8gY29tcGxhaW4gb3IgYmVtb2FuIG91ciBwbGlnaHQgYnV0IHRvIGRvIHRoZSBiZXN0IHdlIGNhbiB0byBhY2NlcHQgaXQgYW5kIGZ1bGZpbGwgaXQuIElzIHRoZXJlIHN0aWxsIHJvb20gZm9yIGZsZXhpYmlsaXR5IG9yIGFtYml0aW9uPyBPZiBjb3Vyc2UhIFRoZSBoaXN0b3J5IG9mIHRoZSBzdGFnZSBpcyBsaXR0ZXJlZCB3aXRoIHN0b3JpZXMgb2YgYml0IHBhcnRzIHRoYXQgdHVybmVkIGludG8gc3RhcnJpbmcgcm9sZXMgYW5kIGluZGVsaWJsZSBjaGFyYWN0ZXJzIHRoYXQgd2VyZSBleHBhbmRlZCBpbiBmdXR1cmUgYWRhcHRhdGlvbnMuIEJ1dCBldmVuIHRoaXMgYmVnaW5zIHdpdGggYWNjZXB0YW5jZSBhbmQgdW5kZXJzdGFuZGluZyZtZGFzaDthbmQgYSBkZXNpcmUgdG8gZXhjZWwgYXQgd2hhdCB3ZSBoYXZlIGJlZW4gYXNzaWduZWQuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDkiLA0KICAgICJ0b3BpYyI6ICJBbGwgaXMgRmx1aWQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJUaGUgdW5pdmVyc2UgaXMgY2hhbmdlLiBMaWZlIGlzIG9waW5pb24uIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA0LjMuNGIiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+SW4gUGx1dGFyY2gncyA8Y2l0ZT5MaWZlIG9mIFRoZXNldXM8L2NpdGU+LCBoZSBkZXNjcmliZXMgaG93IHRoZSBzaGlwIG9mIFRoZXNldXMsIGFuIEF0aGVuaWFuIGhlcm8sIHdhcyBwcmVzZXJ2ZWQgYnkgdGhlIHBlb3BsZSBvZiBBdGhlbnMgaW4gYmF0dGxlLXJlYWR5IGNvbmRpdGlvbiBmb3IgbWFueSBjZW50dXJpZXMuIEVhY2ggdGltZSBhIGJvYXJkIGRlY2F5ZWQsIGl0IHdvdWxkIGJlIHJlcGxhY2VkIHVudGlsIGV2ZW50dWFsbHkgZXZlcnkgc3RpY2sgb2Ygd29vZCBpbiBpdCBoYWQgYmVlbiByZXBsYWNlZC4gUGx1dGFyY2ggYXNrczogSXMgaXQgc3RpbGwgdGhlIHNoaXAgb2YgVGhlc2V1cywgb3IgaXMgaXQgYSBuZXcgb25lPzwvcD48cD5JbiBKYXBhbiwgYSBmYW1vdXMgU2hpbnRvIHNocmluZSBpcyByZWJ1aWx0IGV2ZXJ5IHR3ZW50eS10aHJlZSB5ZWFycy4gSXQncyBnb25lIHRocm91Z2ggbW9yZSB0aGFuIHNpeHR5IG9mIHRob3NlIGN5Y2xlcy4gSXMgaXQgb25lIHNocmluZSwgMSw0MDAgeWVhcnMgb2xkPyBPciBzaXh0eSBjb25zZWN1dGl2ZSBzaHJpbmVzPyBFdmVuIHRoZSBVLlMuIFNlbmF0ZSwgZ2l2ZW4gaXRzIHN0YWdnZXJlZCBlbGVjdGlvbnMsIGNvdWxkIGJlIHNhaWQgdG8gaGF2ZSBuZXZlciBiZWVuIGZ1bGx5IHR1cm5lZCBvdmVyLiBJcyBpdCB0aGUgc2FtZSBib2R5IGZvcm1lZCBpbiB0aGUgZGF5cyBvZiBHZW9yZ2UgV2FzaGluZ3Rvbj88L3A+PHA+T3VyIHVuZGVyc3RhbmRpbmcgb2Ygd2hhdCBzb21ldGhpbmcgPGVtPmlzPC9lbT4gaXMganVzdCBhIHNuYXBzaG90Jm1kYXNoO2FuIGVwaGVtZXJhbCBvcGluaW9uLiBUaGUgdW5pdmVyc2UgaXMgaW4gYSBjb25zdGFudCBzdGF0ZSBvZiBjaGFuZ2UuIE91ciBuYWlscyBncm93IGFuZCBhcmUgY3V0IGFuZCBrZWVwIGdyb3dpbmcuIE5ldyBza2luIHJlcGxhY2VzIGRlYWQgc2tpbi4gT2xkIG1lbW9yaWVzIGFyZSByZXBsYWNlZCBieSBuZXcgbWVtb3JpZXMuIEFyZSB3ZSBzdGlsbCB0aGUgc2FtZSBwZW9wbGU/IEFyZSB0aGUgcGVvcGxlIGFyb3VuZCB1cyB0aGUgc2FtZT8gTm90aGluZyBpcyBleGVtcHQgZnJvbSB0aGlzIGZsdWlkaXR5LCBub3QgZXZlbiB0aGUgdGhpbmdzIHdlIGhvbGQgbW9zdCBzYWNyZWQuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDEwIiwNCiAgICAidG9waWMiOiAiQWx3YXlzIHRoZSBTYW1lIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiVGhpbmsgYnkgd2F5IG9mIGV4YW1wbGUgb24gdGhlIHRpbWVzIG9mIFZlc3Bhc2lhbiwgYW5kIHlvdSdsbCBzZWUgYWxsIHRoZXNlIHRoaW5nczogbWFycnlpbmcsIHJhaXNpbmcgY2hpbGRyZW4sIGZhbGxpbmcgaWxsLCBkeWluZywgd2FycywgaG9saWRheSBmZWFzdHMsIGNvbW1lcmNlLCBmYXJtaW5nLCBmbGF0dGVyaW5nLCBwcmV0ZW5kaW5nLCBzdXNwZWN0aW5nLCBzY2hlbWluZywgcHJheWluZyB0aGF0IG90aGVycyBkaWUsIGdydW1ibGluZyBvdmVyIG9uZSdzIGxvdCwgZmFsbGluZyBpbiBsb3ZlLCBhbWFzc2luZyBmb3J0dW5lcywgbHVzdGluZyBhZnRlciBvZmZpY2UgYW5kIHBvd2VyLiBOb3cgdGhhdCBsaWZlIG9mIHRoZWlycyBpcyBkZWFkIGFuZCBnb25lIC4gLiAuIHRoZSB0aW1lIG9mIFRyYWphbiwgYWdhaW4gdGhlIHNhbWUgLiAuIC4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDQuMzIiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+RWFybmVzdCBIZW1pbmd3YXkgb3BlbnMgaGlzIGJvb2sgPGNpdGU+VGhlIFN1biBBbHNvIFJpc2VzPC9jaXRlPiB3aXRoIGEgQmlibGUgdmVyc2U6IDxxPk9uZSBnZW5lcmF0aW9uIHBhc3NldGgsIGFuZCBhbm90aGVyIGdlbmVyYXRpb24gY29tZXRoOyBidXQgdGhlIGVhcnRoIGFiaWRldGggZm9yZXZlci4gVGhlIHN1biBhbHNvIGFyaXNldGgsIGFuZCB0aGUgc3VuIGdvZXRoIGRvd24sIGFuZCBoYXN0ZXRoIHRvIGhpcyBwbGFjZSB3aGVyZSBoZSBhcm9zZS48L3E+IEl0IHdhcyB0aGlzIHBhc3NhZ2UsIGhpcyBlZGl0b3Igd291bGQgc2F5LCB0aGF0IDxxPmNvbnRhaW5lZCBhbGwgdGhlIHdpc2RvbSBvZiB0aGUgYW5jaWVudCB3b3JsZC48L3E+PC9wPjxwPkFuZCB3aGF0IHdpc2RvbSBpcyB0aGF0PyBPbmUgb2YgdGhlIG1vc3Qgc3RyaWtpbmcgdGhpbmdzIGFib3V0IGhpc3RvcnkgaXMganVzdCBob3cgbG9uZyBodW1hbiBiZWluZ3MgaGF2ZSBiZWVuIGRvaW5nIHdoYXQgdGhleSBkby4gVGhvdWdoIGNlcnRhaW4gYXR0aXR1ZGVzIGFuZCBwcmFjdGljZXMgaGF2ZSBjb21lIGFuZCBnb25lLCB3aGF0J3MgbGVmdCBhcmUgcGVvcGxlJm1kYXNoO2xpdmluZywgZHlpbmcsIGxvdmluZywgZmlnaHRpbmcsIGNyeWluZywgbGF1Z2hpbmcuPC9wPjxwPkJyZWF0aGxlc3MgbWVkaWEgcmVwb3J0cyBvciBwb3B1bGFyIGJvb2tzIG9mdGVuIHBlcnBldHVhdGUgdGhlIGJlbGllZiB0aGF0IHdlJ3ZlIHJlYWNoZWQgdGhlIGFwZXggb2YgaHVtYW5pdHksIG9yIHRoYXQgdGhpcyB0aW1lLCB0aGluZ3MgPGU+cmVhbGx5IGFyZSBkaWZmZXJlbnQ8L2U+LiBUaGUgaXJvbnkgaXMgdGhhdCBwZW9wbGUgaGF2ZSBiZWxpZXZlZCB0aGF0IGZvciBjZW50dXJpZXMuPC9wPjxwPlN0cm9uZyBwZW9wbGUgcmVzaXN0IHRoaXMgbm90aW9uLiBUaGV5IGtub3cgdGhhdCB3aXRoIGEgZmV3IGV4Y2VwdGlvbnMsIHRoaW5ncyBhcmUgdGhlIHNhbWUgYXMgdGhleSd2ZSBhbHdheXMgYmVlbiBhbmQgYWx3YXlzIHdpbGwgYmUuIFlvdSdyZSBqdXN0IGxpa2UgdGhlIHBlb3BsZSB3aG8gY2FtZSBiZWZvcmUgeW91LCBhbmQgeW91J3JlIGJ1dCBhIGJyaWVmIHN0b3BvdmVyIHVudGlsIHRoZSBwZW9wbGUganVzdCBsaWtlIHlvdSB3aG8gd2lsbCBjb21lIGFmdGVyLiBUaGUgZWFydGggYWJpZGVzIGZvcmV2ZXIsIGJ1dCB3ZSB3aWxsIGNvbWUgYW5kIGdvLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciAxMSIsDQogICAgInRvcGljIjogIkl0J3MgTm90IFRoZSBUaGluZywgSXQncyBXaGF0IFdlIE1ha2UgT2YgSXQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJXaGVuIHlvdSBhcmUgZGlzdHJlc3NlZCBieSBhbiBleHRlcm5hbCB0aGluZywgaXQncyBub3QgdGhlIHRoaW5nIGl0c2VsZiB0aGF0IHRyb3VibGVzIHlvdSwgYnV0IG9ubHkgeW91ciBqdWRnZW1lbnQgb2YgaXQuIEFuZCB5b3UgY2FuIHdpcGUgdGhpcyBvdXQgYXQgYSBtb2VtZW50J3Mgbm90aWNlLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgOC40NyINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5JbWFnaW5lIHlvdSd2ZSBkcmVhbWVkIG9mIGEgbGlmZSBpbiBwb2xpdGljcy4gWW91J3JlIHlvdW5nLCB5b3UncmUgdmlnb3JvdXMsIGFuZCB5b3UndmUgaGVsZCBpbmNyZWFzaW5nbHkgcG93ZXJmdWwgcG9zaXRpb25zIG92ZXIgdGhlIGNvdXJzZSBvZiB5b3VyIGNhcmVlci4gVGhlbiBhdCB0aGlydHktbmluZSwgeW91IHN0YXJ0IHRvIGZlZWwgcnVuIGRvd24uIFlvdXIgZG9jdG9ycyB0ZWxsIHlvdSB0aGF0IHlvdSBoYXZlIHBvbGlvIGFuZCB5b3VyIGxpZmUgd2lsbCBuZXZlciBiZSB0aGUgc2FtZS4gWW91ciBjYXJlZXIgaXMgb3ZlciZtZGFzaDtyaWdodD88L3A+PHA+VGhpcyBpcyB0aGUgc3Rvcnkgb2YgRnJhbmtsaW4gRGVsYW5vIFJvb3NldmVsdCwgbm93IHdpZGVseSByZWdhcmRlZCBhcyBvbmUgb2YgQW1lcmljYSdzIGdyZWF0ZXN0IHBvbGl0aWNhbCBsZWFkZXJzLiBIZSB3YXMsIGF0IG1pZGRsZSBhZ2UsIGRpYWdub3NlZCB3aXRoIHBvbGlvIGFmdGVyIHNwZW5kaW5nIHllYXJzIHByZXBhcmluZyBmb3IgYW5kIGRyZWFtaW5nIGFib3V0IHRoZSBwcmVzaWRlbmN5LjwvcD48cD5JdCdzIGltcG9zc2libGUgdG8gdW5kZXJzdGFuZCBGRFIgd2l0aG91dCB1bmRlcnN0YW5kaW5nIHRoaXMgZGlzYWJpbGl0eS4gVGhlIDxxPmV4dGVybmFsIHRoaW5nPC9xPiB3YXMgdGhhdCBoZSB3YXMgY3JpcHBsZWQmbWRhc2g7dGhpcyB3YXMgYSBsaXRlcmFsIGZhY3QmbWRhc2g7YnV0IGhpcyBqdWRnZW1lbnQgb2YgaXQgd2FzIHRoYXQgaXQgZGlkIG5vdCBjcmlwcGxlIGhpcyBjYXJlZXIgb3IgaGlzIHBlcnNvbmhvb2QuIFRob3VnaCBoZSB3YXMgY2VydGFpbmx5IHRoZSB2aWN0aW0gb2YgYSB0aGVuIGluY3VyYWJsZSBkaXNlYXNlLCBoZSB3aXBlZCBhd2F5Jm1kYXNoO2FsbW9zdCBpbW1lZGlhdGVseSZtZGFzaDt0aGUgdmljdGltJ3MgbWVudGFsaXR5LjwvcD48cD5MZXQncyBub3QgY29uZnVzZSBhY2NlcHRhbmNlIHdpdGggcGFzc2l2aXR5LjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciAxMiIsDQogICAgInRvcGljIjogIlRoZSBTdHJvbmcgQWNjZXB0IFJlc3BvbnNpYmlsaXR5IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiSWYgd2UganVkZ2UgYXMgZ29vZCBhbmQgZXZpbCBvbmx5IHRoZSB0aGluZ3MgaW4gdGhlIHBvd2VyIG9mIG91ciBvd24gY2hvaWNlLCB0aGVuIHRoZXJlIGlzIG5vIHJvb20gbGVmdCBmb3IgYmxhbWluZyBnb2RzIG9yIGJlaW5nIGhvc3RpbGUgdG8gb3RoZXJzLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgNi40MSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5BIHNpZ24gb24gUHJlc2lkZW50IEhhcnJ5IFRydW1hbidzIGRlc2sgcmVhZCwgVEhFIEJVQ0sgU1RPUFMgSEVSRS4gQXMgcHJlc2lkZW50LCB3aXRoIG1vcmUgcG93ZXIgYW5kIGNvbnRyb2wgdGhhbiBwcmV0dHkgbXVjaCBhbnlvbmUgZWxzZSwgaGUga25ldyB0aGF0LCBnb29kIG9yIGJhZCwgdGhlcmUgd2Fzbid0IGFueW9uZSBoZSBjb3VsZCBibGFtZSBmb3Igc3R1ZmYgb3RoZXIgdGhhbiBoaW1zZWxmLiBUaGVyZSB3YXMgbm8gb25lIHRvIHBhc3MgdGhlIGJ1Y2sgdG8uIFRoZSBjaGFpbiBlbmRlZCB0aGVyZSwgaW4gdGhlIE92YWwgT2ZmaWNlLjwvcD48cD5BcyB0aGUgcHJlc2lkZW50IG9mIG91ciBvd24gbGl2ZXMmbWRhc2g7YW5kIGtub3dpbmcgdGhhdCBvdXIgcG93ZXJzIGJlZ2luIGFuZCBlbmQgd2l0aCBvdXIgcmVhc29uZWQgY2hvaWNlJm1kYXNoO3dlIHdvdWxkIGRvIHdlbGwgdG8gaW50ZXJuYWxpemUgdGhpcyBzYW1lIGF0dGl0dWRlLiBXZSBkb24ndCBjb250cm9sIHRoaW5ncyBvdXRzaWRlIHRoYXQgc3BoZXJlLCBidXQgd2UgZG8gY29udHJvbCBvdXIgYXR0aXR1ZGVzIGFuZCBvdXIgcmVzcG9uc2VzIHRvIHRob3NlIGV2ZW50cyZtZGFzaDthbmQgdGhhdCdzIHBsZW50eS4gSXQncyBlbm91Z2ggdGhhdCB3ZSBnbyBpbnRvIGVhY2ggYW5kIGV2ZXJ5IGRheSBrbm93aW5nIHRoYXQgdGhlcmUgaXMgbm8gb25lIHRvIHBhc3MgdGhlIGJ1Y2sgdG8uIEl0IGVuZHMgd2l0aCB1cy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTm92ZW1iZXIgMTMiLA0KICAgICJ0b3BpYyI6ICJOZXZlciBDb21wbGFpbiwgTmV2ZXIgRXhwbGFpbiIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkRvbid0IGFsbG93IHlvdXJzZWxmIHRvIGJlIGhlYXJkIGFueSBsb25nZXIgZ3JpcGluZyBhYm91dCBwdWJsaWMgbGlmZSwgbm90IGV2ZW4gd2l0aCB5b3VyIG93biBlYXJzISIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgOC45Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPk5vdCBvbmx5IGRvIGV2ZW4gdGhlIG1vc3QgZm9ydHVuYXRlIG9mIHVzIGNvbXBsYWluLCBpdCBvZnRlbiBzZWVtcyBsaWtlIHRoZSBtb3JlIGZvcnR1bmF0ZSB3ZSBhcmUsIHRoZSBtb3JlIHRpbWUgd2UgaGF2ZSB0byBkbyBzby4gTWFyY3VzIEF1cmVsaXVzIHdhcyBhIHJlbHVjdGFudCBjaGllZiBleGVjdXRpdmUmbWRhc2g7anVzdCBhcyB5b3UgbWlnaHQgYmUgYSByZWx1Y3RhbnQgYWNjb3VudGFudCwga2lkJ3Mgc29jY2VyIGNvYWNoLCBvciBsYXd5ZXIuIE9yIHBlcmhhcHMgeW91IGdlbmVyYWxseSBsaWtlIHlvdXIgam9iLCBidXQgeW91IGNvdWxkIGRvIHdpdGhvdXQgYSBmZXcgb2YgaXRzIGF0dGVuZGFudCByZXNwb25zaWJpbGl0aWVzLiBXaGVyZSBkb2VzIHRoYXQgdGhpbmtpbmcgZ2V0IHlvdT8gTm93aGVyZSwgb3RoZXIgdGhhbiBpbiBhIG5lZ2F0aXZlIHN0YXRlIG9mIG1pbmQuPC9wPjxwPkl0IGNhbGxzIHRvIG1pbmQgYSBtb3R0byBvZiBCcml0aXNoIHByaW1lIG1pbmlzdGVyIEJlbmphbWluIERpc3JhZWxpOiA8cT5OZXZlciBjb21wbGFpbiwgbmV2ZXIgZXhwbGFpbi48L3E+IEhlIHNhaWQgdGhpcyBiZWNhdXNlLCBsaWtlIE1hcmN1cywgaGUga25ldyB0aGF0IHRoZSBidXJkZW5zIG9mIHJlc3BvbnNpYmlsaXR5IHdlcmUgaW1tZW5zZS4gSXQncyBzbyBlYXN5IHRvIGNvbXBsYWluIGFib3V0IHRoaXMgb3IgdGhhdCwgb3IgdG8gdHJ5IHRvIG1ha2UgZXhjdXNlcyBhbmQganVzdGlmaWNhdGlvbnMgZm9yIHRoZSB0aGluZ3MgeW91J3ZlIGRvbmUuIEJ1dCB0aGF0IGRvZXNuJ3QgYWNjb21wbGlzaCBhbnl0aGluZyZtZGFzaDthbmQgaXQgbmV2ZXIgbGlnaHRlbnMgdGhlIGxvYWQuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDE0IiwNCiAgICAidG9waWMiOiAiWW91IENob29zZSBUaGUgT3V0Y29tZSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkhlIHdhcyBzZW50IHRvIHByaXNvbi4gQnV0IHRoZSBvYnNlcnZhdGlvbiAmbHNxdW87aGUgaGFzIHN1ZmZlcmVkIGV2aWwsJnJzcXVvOyBpcyBhbiBhZGRpdGlvbiBjb21pbmcgZnJvbSB5b3UuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDMuOC41Yi02YSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGlzIGlzIGNsYXNzaWMgU3RvaWMgdGhpbmtpbmcsIGFzIHlvdSd2ZSBnYXRoZXJlZCBieSBub3cuIEFuIGV2ZW50IGl0c2VsZiBpcyBvYmplY3RpdmUuIEhvdyB3ZSBkZXNjcmliZSBpdCZtZGFzaDt0aGF0IGl0IHdhcyB1bmZhaXIsIG9yIGl0J3MgYSBncmVhdCBjYWxhbWl0eSwgb3IgdGhhdCB0aGV5IGRpZCBpdCBvbiBwdXJwb3NlJm1kYXNoO2lzIG9uIHVzLjwvcD48cD5NYWxjb20gWCAodGhlbiBNYWxjb20gTGl0dGxlKSB3ZW50IGludG8gcHJpc29uIGEgY3JpbWluYWwsIGJ1dCBoZSBsZWZ0IGFzIGFuIGVkdWNhdGVkLCByZWxpZ2lvdXMsIGFuZCBtb3RpdmF0ZWQgbWFuIHdobyB3b3VsZCBoZXAgaW4gdGhlIHN0cnVnZ2xlIGZvciBjaXZpbCByaWdodHMuIERpZCBoZSBzdWZmZXIgYW4gZXZpbD8gT3IgZGlkIGhlIGNob29zZSB0byBtYWtlIGhpcyBleHBlcmllbmNlIGEgcG9zaXRpdmUgb25lPzwvcD48cD5BY2NlcHRhbmNlIGlzIHBhc3NpdmUuIEl0J3MgdGhlIGZpcnN0IHN0ZXAgaW4gYW4gYWN0aXZlIHByb2Nlc3MgdG93YXJkIHNlbGYtaW1wcm92aW5nLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciAxNSIsDQogICAgInRvcGljIjogIkV2ZXJ5dGhpbmcgSXMgQ2hhbmdlIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiTWVkaXRhdGUgb2Z0ZW4gb24gdGhlIHN3aWZ0bmVzcyB3aXRoIHdoaWNoIGFsbCB0aGF0IGV4aXN0cyBhbmQgaXMgY29taW5nIGludG8gYmVpbmcgaXMgc3dlcHQgYnkgdXMgYW5kIGNhcnJpZWQgYXdheS4gRm9yIHN1YnN0YW5jZSBpcyBsaWtlIGEgcml2ZXIncyB1bmVuZGluZyBmbG93LCBpdHMgYWN0aXZpdGllcyBjb250aW51YWxseSBjaGFuZ2luZyBhbmQgY2F1c2VzIGluZmluaXRlbHkgc2hpZnRpbmcgc28gdGhhdCBhbG1vc3Qgbm90aGluZyBhdCBhbGwgc3RhbmRzIHN0aWxsLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgNS4yMyINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5NYXJjdXMgYm9ycm93cyB0aGlzIHdvbmRlcmZ1bCBtZXRhcGhvciBmcm9tIEhlcmFjbGl0dXMsIHdobyBzYWlkLCA8cT5ObyBtYW4gc3RlcCBpbiB0aGUgc2FtZSByaXZlciB0d2ljZS48L3E+IEJlY2F1c2UgdGhlIHJpdmVyIGhhcyBjaGFuZ2VkLCBhbmQgc28gaGFzIHRoZSBtYW4uPC9wPjxwPkxpZmUgaXMgaW4gYSBjb25zdGFudCBzdGF0ZSBvZiBjaGFuZ2UuIEFuZCBzbyBhcmUgd2UuIFRvIGdldCB1cHNldCBieSB0aGluZ3MgaXMgdG8gd3JvbmdseSBhc3N1bWUgdGhhdCB0aGV5IHdpbGwgbGFzdC4gVG8ga2ljayBvdXJzZWx2ZXMgb3IgYmxhbWUgb3RoZXJzIGlzIGdyYWJiaW5nIGF0IHRoZSB3aW5kLiBUbyByZXNlbnQgY2hhbmdlIGlzIHRvIHdyb25nbHkgYXNzdW1lIHRoYXQgeW91IGhhdmUgYSBjaG9pY2UgaW4gdGhlIG1hdHRlci48L3A+PHA+RXZlcnl0aGluZyBpcyBjaGFuZ2UuIEVtYnJhY2UgdGhhdC4gRmxvdyB3aXRoIGl0LjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciAxNiIsDQogICAgInRvcGljIjogIkhvcGUgQW5kIEZlYXIgQXJlIFRoZSBTYW1lIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiSGVjYXRvIHNheXMsIOKAmGNlYXNlIHRvIGhvcGUgYW5kIHlvdSB3aWxsIGNlYXNlIHRvIGZlYXIuJyAuIC4gLiBUaGUgcHJpbWFyeSBjYXVzZSBvZiBib3RoIHRoZXNlIGlsbHMgaXMgdGhhdCBpbnN0ZWFkIG9mIGFkYXB0aW5nIG91cnNlbHZlcyB0byBwcmVzZW50IGNpcmN1bXN0YW5jZXMgd2Ugc2VuZCBvdXQgdGhvdWdodHMgdG9vIGZhciBhaGVhZC4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiTW9yYWwgTGV0dGVycywgNS43Yi04Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkhvcGUgaXMgZ2VuZXJhbGx5IHJlZ2FyZGVkIGFzIGdvb2QuIEZlYXIgaXMgZ2VuZXJhbGx5IHJlZ2FyZGVkIGFzIGJhZC4gVG8gYSBTdG9pYyBsaWtlIEhlY2F0byAoa25vd24gYXMgSGVjYXRvIG9mIFJob2RlcyksIHRoZXkgYXJlIHRoZSBzYW1lJm1kYXNoO2JvdGggYXJlIHByb2plY3Rpb25zIGludG8gdGhlIGZ1dHVyZSBhYm91dCB0aGluZ3Mgd2UgZG8gbm90IGNvbnRyb2wuIEJvdGggYXJlIHRoZSBlbmVteSBvZiB0aGlzIHByZXNlbnQgbW9tZW50IHRoYXQgeW91IGFyZSBhY3R1YWxseSBpbi4gQm90aCBtZWFuIHlvdSdyZSBsaXZpbmcgYSBsaWZlIGluIG9wcG9zaXRpb24gdG8gPGVtPmFtb3IgZmF0aTwvZW0+LjwvcD48cD5JdCdzIG5vdCBhYm91dCBvdmVyY29taW5nIG91ciBmZWFycyBidXQgdW5kZXJzdGFuZGluZyB0aGF0IGJvdGggaG9wZSBhbmQgZmVhciBjb250YWluIGEgZGFuZ2Vyb3VzIGFtb3VudCBvZiA8ZW0+d2FudDwvZW0+IGFuZCA8ZW0+d29ycnk8L2VtPiBpbiB0aGVtLiBBbmQsIHNhZGx5LCB0aGUgd2FudCBpcyB3aGF0IGNhdXNlcyB0aGUgd29ycnkuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDE3IiwNCiAgICAidG9waWMiOiAiSnVkZ2UgTm90LCBMZXN0Li4uIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiV2hlbiBwaGlsb3NvcGh5IGlzIHdpZWxkZWQgd2l0aCBhcnJvZ2FuY2UgYW5kIHN0dWJib3JubHksIGl0IGlzIHRoZSBjYXVzZSBmb3IgdGhlIHJ1aW4gb2YgbWFueS4gTGV0IHBoaWxvc29waHkgc2NyYXBlIG9mZiB5b3VyIG93biBmYXVsdHMsIHJhdGhlciB0aGFuIGJlIGEgd2F5IHRvIHJhaWwgYWdhaW5zdCB0aGUgZmF1bHRzIG9mIG90aGVycy4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiTW9yYWwgTGV0dGVycywgMTAzLjRiLTVhIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlJlbWVtYmVyLCB0aGUgcHJvcGVyIGRpcmVjdGlvbiBvZiBwaGlsb3NvcGh5Jm1kYXNoO29mIGFsbCB0aGUgdGhpbmdzIHdlJ3JlIGRvaW5nIGhlcmUmbWRhc2g7aXMgZm9jdXNlZCBpbndhcmQuIFRvIG1ha2UgPGVtPm91cnNlbHZlczwvZW0+IGJldHRlciBhbmQgdG8gbGVhdmUgb3RoZXIgcGVvcGxlIHRvIHRoYXQgdGFzayBmb3IgdGhlbXNlbHZlcyBhbmQgdGhlaXIgb3duIGpvdXJuZXkuIE91ciBmYXVsdHMgYXJlIGluIG91ciBjb250cm9sLiwgYW5kIHNvIHdlIHR1cm4gdG8gcGhpbG9zb3BoeSB0byBoZWxwIHNjcmFwZSB0aGVtIG9mZiBsaWtlIGJhcm5hY2xlcyBmcm9tIHRoZSBodWxsIG9mIGEgc2hpcC4gT3RoZXIgcGVvcGxlJ3MgZmF1bHRzPyBOb3Qgc28gbXVjaC4gVGhhdCdzIGZvciB0aGVtIHRvIGRvLjwvcD48cD5MZWF2ZSBvdGhlciBwZW9wbGUgdG8gdGhlaXIgZmF1bHRzLiBOb3RoaW5nIGluIFN0b2ljIHBoaWxvc29waHkgZW1wb3dlcnMgeW91IHRvIGp1ZGdlIHRoZW0mbWRhc2g7b25seSB0byBhY2NlcHQgdGhlbS4gRXNwZWNpYWxseSB3aGVuIHdlIGhhdmUgc28gbWFueSBvZiBvdXIgb3duLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciAxOCIsDQogICAgInRvcGljIjogIkZvdXIgSGFiaXRzIE9mIFRoZSBTdG9pYyBNaW5kIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiT3VyIHJhdGlvbmFsIG5hdHVyZSBtb3ZlcyBmcmVlbHkgZm9yd2FyZCBpbiBpdHMgaW1wcmVzc2lvbnMgd2hlbiBpdDo8b2w+PGxpPmFjY2VwdHMgbm90aGluZyBmYWxzZSBvciB1bmNlcnRhaW47PC9saT48bGk+ZGlyZWN0cyBpdHMgaW1wdWxzZXMgb25seSB0byBhY3RzIGZvciB0aGUgY29tbW9uIGdvb2Q7PC9saT48bGk+bGltaXRzIGl0cyBkZXNpcmVzIGFuZCBhdmVyc2lvbnMgb25seSB0byB3aGF0J3MgaW4gaXRzIG93biBwb3dlcjwvbGk+PGxpPmVtYnJhY2VzIGV2ZXJ5dGhpbmcgbmF0dXJlIGFzc2lnbnMgaXQ8L2xpPjwvb2w+IiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA4LjciDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+SWYgeW91IG5vdGljZSwgTWFyY3VzIHJlcGVhdGVkbHkgcmVtaW5kcyBoaW1zZWxmIHdoYXQgU3RvaWNpc20gaXMuIFRoZXNlIGJ1bGxldCBwb2ludHMgYXJlIGhlbHBmdWwgdG8gdGhvc2Ugb2YgdXMgcmVhZGluZyB0aG91c2FuZHMgb2YgeWVhcnMgbGF0ZXIsIGJ1dCByZWFsbHkgdGhleSB3ZXJlIGludGVuZGVkIHRvIGJlIGhlbHBmdWwgdG8gaGltLiBNYXliZSB0aGF0IGRheSBoZSBoYWQgYWNjZXB0ZWQgYSBiYWQgaW1wcmVzc2lvbiBvciBoYWQgYWN0ZWQgc2VsZmlzaGx5LiBNYXliZSBoZSBoYWQgcGlubmVkIGhpcyBob3BlcyBvbiBzb21ldGhpbmcgb3V0c2lkZSBoaXMgY29udHJvbCBvciBjb21wbGFpbmVkIGFuZCBmb3VnaHQgYWdhaW5zdCBzb21ldGhpbmcgdGhhdCBoYWQgaGFwcGVuZWQuIE9yIG1heWJlIGl0IGhhZCBqdXN0IGJlZW4gYXdoaWxlIHNpbmNlIGhlJ2QgdGhvdWdodCB0aGVzZSB0aGluZ3MgYW5kIHdhbnRlZCBhIHJlbWluZGVyLjwvcD48cD5XaGF0ZXZlciBoaXMgY2FzZSB3YXMsIG9yIHdoYXRldmVyIG91cnMgaXMgdG9kYXksIGxldCdzIGFsaWduIG91ciBtaW5kcyBhbG9uZyB0aGVzZSBmb3VyIGNyaXRpY2FsIGhhYml0czogPG9sPjxsaT5BY2NlcHQgb25seSB3aGF0IGlzIHRydWUuPC9saT48bGk+V29yayBmb3IgdGhlIGNvbW1vbiBnb29kLjwvbGk+PGxpPk1hdGNoIG91ciBuZWVkcyBhbmQgd2FudHMgd2l0aCB3aGF0IGlzIGluIG91ciBjb250cm9sLjwvbGk+PGxpPkVtYnJhY2Ugd2hhdCBuYXR1cmUgaGFzIGluIHN0b3JlIGZvciB1cy48L2xpPjwvb2w+PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDE5IiwNCiAgICAidG9waWMiOiAiTWF4aW1zIEZyb20gVGhyZWUgV2lzZSBNZW4iLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJGb3IgYW55IGNoYWxsZW5nZSB3ZSBzaG91bGQgaG9sZCB0aHJlZSB0aG91Z2h0cyBhdCBvdXIgY29tbWFuZDo8YnIgLz4nTGVhZCBvbiBHb2QgYW5kIERlc3RpbnksPGJyIC8+VG8gdGhhdCBHb2FsIGZpeGVkIGZvciBtZSBsb25nIGFnby48YnIgLz5JIHdpbGwgZm9sbG93IGFuZCBub3Qgc3R1bWJsZTsgZXZlbiBpZiBteSB3aWxsPGJyIC8+aXMgd2VhayBJIHdpbGwgc29sZGllciBvbi4nIiwNCiAgICAgICAgImF1dGhvciI6ICJDbGVhbnRoZXMiLA0KICAgICAgICAic291cmNlIjogIkVuY2hpcmlkaW9uLCA1MyINCiAgICAgIH0sDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJXaG9ldmVyIGVtYnJhY2VzIG5lY2Vzc2l0eSBjb3VudCBhcyB3aXNlLDxiciAvPnNraWxsZWQgaW4gZGl2aW5lIG1hdHRlcnMuIiwNCiAgICAgICAgImF1dGhvciI6ICJFdXJpcGlkZXMiLA0KICAgICAgICAic291cmNlIjogIkVuY2hpcmlkaW9uLCA1MyINCiAgICAgIH0sDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJJZiBpdCBwbGVhc2VzIHRoZSBnb2RzLCBzbyBiZSBpdC4gVGhleSBtYXkgd2VsbCBraWxsIG1lLCBidXQgdGhleSBjYW4ndCBodXJ0IG1lLiIsDQogICAgICAgICJhdXRob3IiOiAiUGxhdG8ncyBDcml0byBhbmQgQXBvbG9neSIsDQogICAgICAgICJzb3VyY2UiOiAiRW5jaGlyaWRpb24sIDUzIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoZXNlIHRocmVlIHF1b3RlcyBjb21waWxlZCBieSBFcGljdGV0dXMgc2hvdyB1cyZtZGFzaDtpbiB3aXNkb20gYWNyb3NzIGhpc3RvcnkmbWRhc2g7dGhlIHRoZW1lcyBvZiB0b2xlcmFuY2UsIGZsZXhpYmlsaXR5LCBhbmQsIHVsdGltYXRlbHksIGFjY2VwdGFuY2UuIENsZWFudGhlcyBhbmQgRXVyaXBpZGVzIGV2b2tlIGRlc3RpbnkgYW5kIGZhdGUgYXMgY29uY2VwdHMgdGhhdCBoZWxwIGVhc2UgYWNjZXB0YW5jZS4gV2hlbiBvbmUgaGFzIGEgYmVsaWVmIGluIGEgZ3JlYXRlciBvciBoaWdoZXIgcG93ZXIgKGJlIGl0IEdvZCBvciBnb2RzKSwgdGhlbiB0aGVyZSBpcyBubyBzdWNoIHRoaW5nIGFzIGFuIGV2ZW50IGdvaW5nIGNvbnRyYXJ5IHRvIHBsYW4uPC9wPjxwPkV2ZW4gaWYgeW91IGRvbid0IGJlbGlldmUgaW4gYSBkZWl0eSwgeW91IGNhbiB0YWtlIHNvbWUgY29tZm9ydCBpbiB0aGUgdmFyaW91cyBsYXdzIG9mIHRoZSB1bml2ZXJzZSBvciBldmVuIHRoZSBjaXJjbGUgb2YgbGlmZS4gV2hhdCBoYXBwZW5zIHRvIHVzIGFzIGluZGl2aWR1YWxzIGNhbiBzZWVtIHJhbmRvbSBvciB1cHNldHRpbmcgb3IgY3J1ZWwgb3IgaW5leHBsaWNhYmxlLCB3aGVuIGluIGZhY3QgdGhlc2UgZXZlbnRzIG1ha2UgcGVyZmVjdCBzZW5zZSB3aGVuIG91ciBwZXJzcGVjdGl2ZSBpcyB6b29tZWQgb3V0LCBldmVuIGp1c3Qgc2xpZ2h0bHkuPC9wPjxwPkxldCdzIHByYWN0aWNlIHRoaXMgcGVyc3BlY3RpdmUgdG9kYXkuIFByZXRlbmQgdGhhdCBlYWNoIGV2ZW50Jm1kYXNoO3doZXRoZXIgZGVzaXJlZCBvciB1bmV4cGVjdGVkJm1kYXNoO3dhcyB3aWxsZWQgdG8gaGFwcGVuLCB3aWxsZWQgc3BlY2lmaWNhbGx5IGZvciB5b3UuIFlvdSB3b3VsZG4ndCBmaWdodCB0aGF0LCB3b3VsZCB5b3U/PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDIwIiwNCiAgICAidG9waWMiOiAiQmVob2xkLCBOb3cgQXMgRXZlciIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIklmIHlvdSd2ZSBzZWVuIHRoZSBwcmVzZW50LCB5b3UndmUgc2VlbiBhbGwgdGhpbmdzLCBmcm9tIHRpbWUgaW1tZW1vcmlhbCBpbnRvIGFsbCBvZiBldGVybml0eS4gRm9yIGV2ZXJ5dGhpbmcgdGhhdCBoYXBwZW5zIGlzIHJlbGF0ZWQgYW5kIHRoZSBzYW1lLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgNi4zNiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGUgZXZlbnRzIHRoYXQgd2lsbCB0cmFuc3BpcmUgdG9kYXkgYXJlIHRoZSBzYW1lIGFzIHRoZSB0aGluZ3MgdGhhdCBoYXZlIGFsd2F5cyBvY2N1cnJlZC4gUGVvcGxlIGxpdmluZyBhbmQgZHlpbmcsIGFuaW1hbHMgbGl2aW5nIGFuZCBkeWluZywgY2xvdWRzIHJvbGxpbmcgaW4gYW5kIHJvbGxpbmcgb3V0LCBhaXIgc3Vja2VkIGluIGFuZCBzdWNrZWQgb3V0LCBhcyBpdCBoYXMgZm9yIGFlb25zLiBUaGlzIG1vbWVudCByaWdodCBub3csIHRvIHBhcmFwaHJhc2UgRW1lcnNvbiwgaXMgYSBxdW90YXRpb24gb2YgdGhlIG1vbWVudHMgdGhhdCBoYXZlIGNvbWUgYmVmb3JlIGFuZCB3aWxsIGNvbWUgZXZlciBhZnRlci48L3A+PHA+VGhpcyBpZGVhIGlzIGV4cHJlc3NlZCBub3doZXJlIG1vcmUgYmVhdXRpZnVsbHkgdGhhbiBpbiB0aGUgQ2hyaXN0aWFuaXR5IGh5bW4gPGNpdGU+R2xvcmlhIFBhdHJpLjwvY2l0ZT4gPHE+QXMgaXQgd2FzIGluIHRoZSBiZWdpbm5pbmcsIGFuZCBub3csIGFuZCBhbHdheXMsIGFuZCB0byB0aGUgYWdlcyBvZiBhZ2VzLjwvcT4gVGhpcyB0aG91Z2h0IGlzIG5vdCBzdXBwb3NlZCB0byBiZSBkZXByZXNzaW5nIG9yIHVwbGlmdGluZy4gSXQncyBqdXN0IGEgZmFjdC4gSG93ZXZlciwgaXQgY2FuIGhhdmUgYSBjYWxtaW5nLCBjZW50ZXJpbmcgZWZmZWN0LiBObyBuZWVkIHRvIGdldCBleGNpdGVkLCBubyBuZWVkIHRvIHdhaXQgb24gcGlucyBhbmQgbmVlZGxlcy4gSWYgeW91IGhhdmVuJ3Qgc2VlbiB0aGlzIGJlZm9yZSwgc29tZW9uZSBlbHNlIGhhcy4gVGhhdCBjYW4gYmUgYSByZWxpZWYuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDIxIiwNCiAgICAidG9waWMiOiAiT25jZSBJcyBFbm91Z2gsIE9uY2UgSXMgRm9yZXZlciIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkEgZ29vZCBpc24ndCBpbmNyZWFzZWQgYnkgdGhlIGFkZGl0aW9uIG9mIHRpbWUsIGJ1dCBpZiBvbmUgaXMgd2lzZSBmb3IgZXZlbiBhIG1vbWVudCwgdGhleSB3aWxsIGJlIG5vIGxlc3MgaGFwcHkgdGhhbiB0aGUgcGVyc29uIHdobyBleGVyY2lzZXMgdmlydHVyZSBmb3IgYWxsIHRpbWUgYW5kIGhhcHBpbHkgcGFzc2VzIHRoZWlyIGxpZmUgaW4gaXQuIiwNCiAgICAgICAgImF1dGhvciI6ICJDaHJ5c2lwcHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJRdW90ZWQgYnkgUGx1dGFyY2ggaW4gTW9yYWxpYTogPHE+QWdhaW5zdCB0aGUgU3RvaWNzIG9uIENvbW1vbiBDb25jZXB0aW9ucyw8L3E+IDEwNjIgKExvZWIsIFAuNjgyKSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5QZXJoYXBzIHdpc2RvbSBhbmQgaGFwcGluZXNzIGFyZSBsaWtlIHdpbm5pbmcgYSBtZWRhbCBpbiB0aGUgT2x5bXBpY3MuIEl0IGRvZXNuJ3QgbWF0dGVyIHdoZXRoZXIgeW91IHdvbiBhIGh1bmRyZWQgeWVhcnMgYWdvIG9yIHRlbiBtaW51dGVzIGFnbywgb3Igd2hldGhlciB5b3Ugd29uIGp1c3Qgb25jZSBvciBpbiBtdWx0aXBsZSBldmVudHMuIEl0IGRvZXNuJ3QgbWF0dGVyIHdoZXRoZXIgc29tZW9uZSBiZWF0cyB5b3VyIHRpbWUgb3Igc2NvcmUgZG93biB0aGUgcm9kZCwgYW5kIGl0IGRvZXNuJ3QgbWF0dGVyIHdoZXRoZXIgeW91IG5ldmVyIGNvbXBldGUgYWdpbi4gWW91J2xsIGFsd2F5cyBiZSBhIG1lZGFsaXN0LCBhbmQgeW91J2xsIGFsd2F5cyBrbm93IHdoYXQgaWYgZmVlbHMgbGlrZS4gTm8gb25lIGNhbiB0YWtlIHRoYXQgYXdheSZtZGFzaDthbmQgaXQgd291bGQgbm90IGJlIGltcG9zc2libGUgdG8gZmVlbCA8ZW0+bW9yZTwvZW0+IG9mIHRoYXQgZmVlbGluZy48L3A+PHA+VGhlIEp1bGxpYXJkLXRyYWluZWQgYWN0b3IgRXZhbiBIYW5kbGVyLCB3aG8gbm90IG9ubHkgc3Vydml2ZWQgYWN1dGUgbXllbG9pZCBsZXVrZW1pYSBidXQgYWxzbyBzZXZlcmUgZGVwcmVzc2lvbiwgaGFzIHRhbGtlZCBhYm91dCBoaXMgZGVjaXNpb24gdG8gdGFrZSBhbnRpZGVwcmVzc2FudHMsIHdoaWNoIGhlIGRpZCBmb3IgYSBkZWxpYmVyYXRlbHkgYnJpZWYgdGltZS4gSGUgdG9vayB0aGVtIGJlY2F1c2UgaGUgd2FudGVkIHRvIGtub3cgd2hhdCB0cnVlLCBub3JtYWwgaGFwcGluZXNzIGZlbHQgbGlrZS4gT25jZSBoZSBkaWQsIGhlIGtuZXcgaGUgd291bGQgc3RvcC4gSGUgY291bGQgZ28gYmFjayB0byB0aGUgc3RydWdnbGUgbGlrZSBldmVyeW9uZSBlbHNlLiBIZSBoYWQgdGhlIGlkZWFsIGZvciBhIG1vbWVudCBhbmQgdGhhdCB3YXMgZW5vdWdoLjwvcD48cD5QZXJoYXBzIHRvZGF5IHdpbGwgYmUgdGhlIGRheSB3aGVuIHdlIGV4cGVyaWVuY2UgaGFwcGluZXNzIG9yIHdpc2RvbS4gRG9uJ3QgdHJ5IHRvIGdyYWIgdGhhdCBtb21lbnQgYW5kIGhvbGQgb24gdG8gaXQgd2l0aCBhbGwgeW91ciBtaWdodC4gSXQncyBub3QgdW5kZXIgeW91ciBjb250cm9sIGhvdyBsb25nIGl0IGxhc3RzLiBFbmpveSBpdCwgcmVjb2duaXplIGl0LCByZW1lbWJlciBpdC4gSGF2aW5nIGl0IGZvciBhIG1vbWVudCBpcyB0aGUgc2FtZSBhcyBoYXZpbmcgaXQgZm9yZXZlci48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTm92ZW1iZXIgMjIiLA0KICAgICJ0b3BpYyI6ICJUaGUgR2xhc3MgSXMgQWxyZWFkeSBCcm9rZW4iLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJGb3J0dW5lIGZhbGxzIGhlYXZpbHkgb24gdGhvc2UgZm9yIHdob20gc2hlJ3MgdW5leHBlY3RlZC4gVGhlIG9uZSBhbHdheXMgb24gdGhlIGxvb2tvdXQgZWFzaWx5IGVuZHVyZXMuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk9uIENvbnNvbGF0aW9uIFRvIEhlbHZpYSwgNS4zIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoZXJlIGlzIGEgc3Rvcnkgb2YgYSBaZW4gbWFzdGVyIHdobyBoYWQgYSBiZWF1dGlmdWwgcHJpemVkIGN1cC4gVGhlIG1hc3RlciB3b3VsZCByZXBlYXQgdG8gaGltc2VsZiwgPHE+VGhlIGdsYXNzIGlzIGFscmVhZHkgYnJva2VuLjwvcT4gSGUgZW5qb3llZCB0aGUgY3VwLiBIZSB1c2VkIGl0LiBIZSBzaG93ZWQgaWYgb2ZmIHRvIHZpc2l0b3JzLiBCdXQgaW4gaGlzIG1pbmQsIGl0IHdhcyBhbHJlYWR5IGJyb2tlbi4gQW5kIHNvIG9uZSBkYXksIHdoZW4gaXQgZGlkIGJyZWFrLCBoZSBzaW1wbHkgc2FpZCwgPHE+T2YgY291cnNlLjwvcT48L3A+PHA+VGhpcyBpcyBob3cgdGhlIFN0b2ljcyB0aGluayB0b28uIFRoZXJlIGlzIHN1cHBvc2VkbHkgYSB0cnVlIHN0b3J5IGFib3V0IEVwaWN0ZXR1cyBhbmQgYSBsYW1wLiBIZSBuZXZlciBsb2NrZWQgaGlzIGhvdXNlLCBhbmQgc28gaGlzIGV4cGVuc2l2ZSBsYW1wIHdhcyBzdG9sZW4uIFdoZW4gRXBpY3RldHVzIHJlcGxhY2VkIGl0LCBoZSByZXBsYWNlZCBpdCB3aXRoIGEgY2hlYXBlciBvbmUgc28gaGUgY291bGQgYmUgbGVzcyBhdHRhY2hlZCB0byBpdCBpZiBpdCB3ZXJlIHN0b2xlbiBhZ2Fpbi48L3A+PHA+RGV2YXN0YXRpb24mbWRhc2g7dGhhdCBmZWVsaW5nIHRoYXQgd2UncmUgYWJzb2x1dGVseSBjcnVzaGVkIGFuZCBzaG9ja2VkIGJ5IGFuIGV2ZW50Jm1kYXNoO2lzIGEgZmFjdG9yIG9mIGhvdyB1bmxpa2VseSB3ZSBjb25zaWRlcmVkIHRoYXQgZXZlbnQgaW4gdGhlIGZpcnN0IHBsYWNlLiBObyBvbmUgaXMgPGVtPndyZWNrZWQ8L2VtPiBieSB0aGUgZmFjdCB0aGF0IGl0J3Mgc25vd2luZyBpbiB0aGUgd2ludGVyLCBiZWNhdXNlIHdlJ3ZlIGFjY2VwdGVkIChhbmQgZXZlbiBhbnRpY2lwYXRlZCkgdGhpcyB0dXJuIG9mIGV2ZW50cy4gV2hhdCBhYm91dCB0aGUgb2NjdXJyZW5jZXMgdGhhdCBzdXJwcmlzZSB1cz8gV2UgbWlnaHQgbm90IGJlIHNvIHNob2NrZWQgaWYgd2UgdG9vayB0aGUgdGltZSB0byBjb25zaWRlciB0aGVpciBwb3NzaWJpbGl0eS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTm92ZW1iZXIgMjMiLA0KICAgICJ0b3BpYyI6ICJBdHRhY2htZW50cyBBcmUgVGhlIEVuZW15IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiSW4gc2hvcnQsIHlvdSBtdXN0IHJlbWVtYmVyIHRoaXMmbWRhc2g7dGhhdCBpZiB5b3UgaG9sZCBhbnl0aGluZyBkZWFyIG91dHNpZGUgb2YgeW91ciBvd24gcmVhc29uZWQgY2hvaWNlLCB5b3Ugd2lsbCBoYXZlIGRlc3Ryb3llZCB5b3VyIGNhcGFjaXR5IGZvciBjaG9pY2UuIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDQuNC4yMyINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5BY2NvcmRpbmcgdG8gQW50aG9ueSBkZSBNZWxsbywgPHE+dGhlcmUgaXMgb25lIHRoaW5nIGFuZCBvbmx5IG9uZSB0aGluZyB0aGF0IGNhdXNlcyB1bmhhcHBpbmVzcy4gVGhlIG5hbWUgb2YgdGhhdCB0aGluZyBpcyBBdHRhY2htZW50LjwvcT4gQXR0YWNobWVudHMgdG8gYW4gaW1hZ2UgeW91IGhhdmUgb2YgYSBwZXJzb24sIGF0dGFjaG1lbnRzIHRvIHdlYWx0aCBhbmQgc3RhdHVzLCBhdHRhY2htZW50cyB0byBhIGNlcnRhaW4gcGxhY2Ugb3IgdGltZSwgYXR0YWNobWVudHMgdG8gYSBqb2Igb3IgdG8gYSBsaWZlc3R5bGUuIEFsbCBvZiB0aG9zZSB0aGluZ3MgYXJlIGRhbmdlcm91cyBmb3Igb25lIHJlYXNvbjogdGhleSBhcmUgb3V0c2lkZSBvZiBvdXIgcmVhc29uZWQgY2hvaWNlLiBIb3cgbG9uZyB3ZSBrZWVwIHRoZW0gaXMgbm90IGluIG91ciBjb250cm9sLjwvcD48cD5BcyBFcGljdGV0dXMgcmVhbGl6ZWQgc29tZSB0d28gdGhvdXNhbmQgeWVhcnMgYmVmb3JlIGRlIE1lbGxvLCBvdXIgYXR0YWNobWVudHMgYXJlIHdoYXQgbWFrZSBpdCBzbyBoYXJkIHRvIGFjY2VwdCBjaGFuZ2UuIE9uY2Ugd2UgaGF2ZSB0aGVtLCB3ZSBkb24ndCB3YW50IHRvIGxldCBnby4gV2UgYmVjb21lIHNsYXZlcyB0byBtYWludGFpbmluZyB0aGUgc3RhdHVzIHF1by4gV2UgYXJlIGxpa2UgdGhlIFJlZCBRdWVlbiBpbiA8c291cmNlPkFsaWNlIGluIFdvbmRlcmxhbmQ8L3NvdXJjZT4mbWRhc2g7cnVubmluZyBmYXN0ZXIgYW5kIGZhc3RlciB0byBzdGF5IGluIHRoZSBzYW1lIHBsYWNlLjwvcD48cD5CdXQgZXZlcnl0aGluZyBpcyBpbiBhIGNvbnN0YW50IHN0YXRlIG9mIGNoYW5nZS4gV2UgaGF2ZSBjZXJ0YWluIHRoaW5ncyBmb3IgYSB3aGlsZSBhbmQgdGhlbiBsb3NlIHRoZW0uIFRoZSBvbmx5IHBlcm1hbmVudCB0aGluZyBpcyA8ZW0+cHJvaGFpcmVzaXM8L2VtPiwgb3VyIGNhcGFjaXR5IGZvciByZWFzb25lZCBjaG9pY2UuIFRoZSB0aGluZ3Mgd2UgYXJlIGF0dGFjaGVkIHRvIGNhbiBjb21lIGFuZCBnbywgb3VyIGNob2ljZSBpcyByZXNpbGllbnQgYW5kIGFkYXB0YWJsZS4gVGhlIHNvb25lciB3ZSBiZWNvbWUgYXdhcmUgb2YgdGhpcyB0aGUgYmV0dGVyLiBUaGUgZWFzaWVyIGl0IHdpbGwgYmUgdG8gYWNjZXB0IGFuZCBhZGFwdCB0byB3aGF0IGRvZXMgaGFwcGVuLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciAyNCIsDQogICAgInRvcGljIjogIlRyYWluIFRvIExldCBHbyBPZiBXaGF0J3MgTm90IFlvdXJzIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiV2hlbmV2ZXIgeW91IGV4cGVyaWVuY2UgdGhlIHBhbmdzIG9mIGxvc2luZyBzb21ldGhpbmcsIGRvbid0IHRyZWF0IGl0IGxpa2UgYSBwYXJ0IG9mIHlvdXJzZWxmIGJ1dCBhcyBhIGJyZWFrYWJsZSBnbGFzcywgc28gd2hlbiBpdCBmYWxscyB5b3Ugd2lsbCByZW1lbWJlciB0aGF0IGFuZCB3b24ndCBiZSB0cm91YmxlZC4gU28gdG9vLCB3aGVuZXZlciB5b3Uga2lzcyB5b3VyIGNoaWxkLCBzaWJsaW5nLCBvciBmcmllbmQsIGRvbid0IGxheWVyIG9uIHRvcCBvZiB0aGUgZXhwZXJpZW5jZSBhbGwgdGhlIHRoaW5ncyB5b3UgbWlnaHQgd2lzaCwgYnV0IGhvbGQgdGhlbSBiYWNrIGFuZCBzdG9wIHRoZW0sIGp1c3QgYXMgdGhvc2Ugd2hvIHJpZGUgYmVoaW5kIHRyaXVtcGhhbnQgZ2VuZXJhbHMgcmVtaW5kIHRoZW0gdGhleSBhcmUgbW9ydGFsLiBJbiB0aGUgc2FtZSB3YXksIHJlbWluZCB5b3Vyc2VsZiB0aGF0IHlvdXIgcHJlY2lvdXMgb25lIGlzbid0IG9uZSBvZiB5b3VyIHBvc3Nlc3Npb25zLCBidXQgc29tZXRoaW5nIGdpdmVuIGZvciBub3csIG5vdCBmb3JldmVyIC4uLiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCAzLjI0Ljg0LTg2YSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5BdCBhIFJvbWFuIHRyaXVtcGgsIHRoZSBtYWpvcml0eSBvZiB0aGUgcHVibGljIHdvdWxkIGhhdmUgdGhlaXIgZXllcyBnbHVlZCB0byB0aGUgdmljdG9yaW91cyBnZW5lcmFsIGF0IHRoZSBmcm9udCZtZGFzaDtvbmUgb2YgdGhlIG1vc3QgY292ZXRlZCBzcG90cyBkdXJpbmcgcm9tYW4gdGltZXMuIE9ubHkgYSBmZXcgd291bGQgbm90aWNlIHRoZSBhaWRlIGluIHRoZSBiYWNrLCByaWdodCBiZWhpbmQgdGhlIGNvbW1hbmRlciwgd2hpc3BlcmluZyBpbnRvIGhpcyBlYXIsIDxxPlJlbWVtYmVyLCB0aG91IGFyZSBtb3J0YWwuPC9xPiBXaGF0IGEgcmVtaW5kZXIgdG8gaGVhciBhdCB0aGUgcGVhayBvZiBnbG9yeSBhbmQgdmljdG9yeSE8L3A+PHA+SW4gb3VyIG93biBsaXZlcywgd2UgY2FuIHRyYWluIHRvIGJlIHRoYXQgd2hpc3Blci4gV2hlbiB0aGVyZSBpcyBzb21ldGhpbmcgd2UgcHJpemUmbWRhc2g7b3Igc29tZW9uZSB0aGF0IHdlIGxvdmUmbWRhc2g7d2UgY2FuIHdoaXNwZXIgdG8gb3Vyc2VsdmVzIHRoYXQgaXMgaXMgZnJhZ2lsZSwgbW9ydGFsLCBhbmQgbm90IHRydWx5IG91cnMuIE5vIG1hdHRlciBob3cgc3Ryb25nIG9yIGludmluY2libGUgc29tZXRoaW5nIGZlZWxzLCBpdCBuZXZlciBpcy4gV2UgbXVzdCByZW1pbmQgb3Vyc2VsdmVzIHRoYXQgaXQgY2FuIGJyZWFrLCBjYW4gZGllLCBjYW4gbGVhdmUgdXMuPC9wPjxwPkxvc3MgaXMgb25lIG9mIG91ciBkZWVwZXN0IGZlYXJzLiBJZ25vcmFuY2UgYW5kIHByZXRlbmRpbmcgZG9uJ3QgbWFrZSB0aGluZ3MgYW55IGJldHRlci4gVGhleSBqdXN0IG1lYW4gdGhlIGxvc3Mgd2lsbCBiZSBhbGwgdGhlIG1vcmUgamFycmluZyB3aGVuIGl0IG9jY3Vycy48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiUGVyIHRoZSBEaGFtbWFjYWtrYXBwYXZhdHRhbmEgU3V0dGEsIHRoZSA0IG5vYmxlIHRydXRocyBhcmU6IDxvbD48bGk+Tm93IHRoaXMgaXMgdGhlIG5vYmxlIHRydXRoIG9mIHN1ZmZlcmluZzogYmlydGggaXMgc3VmZmVyaW5nLCBhZ2luZyBpcyBzdWZmZXJpbmcsIGlsbG5lc3MgaXMgc3VmZmVyaW5nLCBkZWF0aCBpcyBzdWZmZXJpbmc7IHVuaW9uIHdpdGggd2hhdCBpcyBkaXNwbGVhc2luZyBpcyBzdWZmZXJpbmc7IHNlcGFyYXRpb24gZnJvbSB3aGF0IGlzIHBsZWFzaW5nIGlzIHN1ZmZlcmluZzsgbm90IHRvIGdldCB3aGF0IG9uZSB3YW50cyBpcyBzdWZmZXJpbmc7IGluIGJyaWVmLCB0aGUgZml2ZSBhZ2dyZWdhdGVzIChib2R5LCBmZWVsaW5ncywgcGVyY2VwdGlvbnMsIG1lbnRhbCBhY3Rpdml0eSwgYW5kIGNvbnNjaW91c25lc3MpIHN1YmplY3QgdG8gY2xpbmdpbmcgYXJlIHN1ZmZlcmluZy48L2xpPjxsaT5Ob3cgdGhpcyBpcyB0aGUgbm9ibGUgdHJ1dGggb2YgdGhlIG9yaWdpbiBvZiBzdWZmZXJpbmc6IGl0IGlzIHRoaXMgY3JhdmluZyB3aGljaCBsZWFkcyB0byByZS1iZWNvbWluZywgYWNjb21wYW5pZWQgYnkgZGVsaWdodCBhbmQgbHVzdCwgc2Vla2luZyBkZWxpZ2h0IGhlcmUgYW5kIHRoZXJlOyB0aGF0IGlzLCBjcmF2aW5nIGZvciBzZW5zdWFsIHBsZWFzdXJlcywgY3JhdmluZyBmb3IgYmVjb21pbmcsIGNyYXZpbmcgZm9yIGRpc2JlY29taW5nLjwvbGk+PGxpPk5vdyB0aGlzIGlzIHRoZSBub2JsZSB0cnV0aCBvZiB0aGUgY2Vzc2F0aW9uIG9mIHN1ZmZlcmluZzogaXQgaXMgdGhlIHJlbWFpbmRlcmxlc3MgZmFkaW5nIGF3YXkgYW5kIGNlc3NhdGlvbiBvZiB0aGF0IHNhbWUgY3JhdmluZywgdGhlIGdpdmluZyB1cCBhbmQgcmVsaW5xdWlzaGluZyBvZiBpdCwgZnJlZWRvbSBmcm9tIGl0LCBub24tcmVsaWFuY2Ugb24gaXQuPC9saT48bGk+Tm93IHRoaXMgaXMgdGhlIG5vYmxlIHRydXRoIG9mIHRoZSB3YXkgbGVhZGluZyB0byB0aGUgY2Vzc2F0aW9uIG9mIHN1ZmZlcmluZzogaXQgaXMgdGhpcyBub2JsZSBlaWdodGZvbGQgcGF0aDsgdGhhdCBpcywgcmlnaHQgdmlldywgcmlnaHQgaW50ZW50aW9uLCByaWdodCBzcGVlY2gsIHJpZ2h0IGFjdGlvbiwgcmlnaHQgbGl2ZWxpaG9vZCwgcmlnaHQgZWZmb3J0LCByaWdodCBtaW5kZnVsbmVzcywgcmlnaHQgY29uY2VudHJhdGlvbi48L2xpPjwvb2w+Ig0KICB9LA0KICB7DQogICAgImRhdGUiOiAiTm92ZW1iZXIgMjUiLA0KICAgICJ0b3BpYyI6ICJGdW5ueSBIb3cgVGhhdCBXb3JrcyBPdXQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJBcyBmb3IgbWUsIEkgd291bGQgY2hvb3NlIGJlaW5nIHNpY2sgb3ZlciBsaXZpbmcgaW4gbHV4dXJ5LCBmb3IgYmVpbmcgc2ljayBvbmx5IGhhcm1zIHRoZSBib2R5LCB3aGVyZWFzIGx1eHVyeSBkZXN0cm95cyBib3RoIHRoZSBib2R5IGFuZCB0aGUgc291bCwgY2F1c2luZyB3ZWFrbmVzcyBhbmQgaW5jYXBhY2l0eSBpbiB0aGUgYm9keSwgYW5kIGxhY2sgb2YgY29udHJvbCBhbmQgY293YXJkaWNlIGluIHRoZSBzb3VsLiBXaGF0J3MgbW9yZSwgbHV4dXJ5IGJyZWVkcyBpbmp1c3RpY2UgYmVjYXVzZSBpdCBhbHNvIGJyZWVkcyBncmVlZGluZXNzLiIsDQogICAgICAgICJhdXRob3IiOiAiTXVzb25pdXMgUnVmdXMiLA0KICAgICAgICAic291cmNlIjogIkxlY3R1cmVzLCAyMC45NS4xNC0xNyINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5TdG9yaWVzIGFib3V0IGxvdHRlcnkgd2lubmVycyB0ZW5kIHRvIHNoYXJlIG9uZSBsZXNzb246IHN1ZGRlbmx5IGNvbWluZyBpbnRvIGEgZ3JlYXQgZGVhbCBvZiBtb25leSBpcyBhIGN1cnNlLCBub3QgYSBibGVzc2luZy4gSnVzdCBhIGZldyB5ZWFycyBhZnRlciB0aGV5IGdldCB0aGVpciBiaWcgY2hlY2ssIG1hbnkgbG90dGVyeSB3aW5uZXJzIGFyZSBhY3R1YWxseSBpbiB3b3JzZSBmaW5hbmNpYWwgc2hhcGUuIFRoZXkndmUgbG9zdCBmcmllbmRzLCB0aGV5J3ZlIGdvdHRlbiBkaXZvcmNlZC4gVGhlaXIgd2hvbGUgbGl2ZXMgaGF2ZSBiZWVuIHR1cm5lZCBpbnRvIGEgbmlnaHRtYXJlIGFzIGEgcmVzdWx0IG9mIHRoZWlyIG9ic2NlbmVseSBnb29kIGZvcnR1bmUuPC9wPjxwPkl0J3MgbGlrZSB0aGF0IE1ldGFsbGljYSBseXJpYyAoZml0dGluZ2x5IGZyb20gYSBzb25nIGNhbGwgPHE+Tm8gTGVhZiBDbG92ZXI8L3E+KTogPHE+VGhlbiBpdCBjb21lcyB0byBiZSB0aGF0IHRoZSBzb290aGluZyBsaWdodCBhdCB0aGUgZW5kIG9mIHlvdXIgdHVubmVsIC8gSXMganVzdCBhIGZyZWlnaHQgdHJhaW4gY29taW5nIHlvdXIgd2F5LjwvcT48L3A+PHA+QW5kIHlldCB0aGUgbW9zdCBjb21tb24gcmVzcG9uc2UgZnJvbSBhIGNhbmNlciBzdXJ2aXZvciwgdGhlIHBlcnNvbiB3aG8gd2VudCB0aHJvdWdoIHRoZSB0aGluZyB3ZSBhbGwgZHJlYWQgYW5kIGZlYXI/IDxxPkl0IHdhcyB0aGUgYmVzdCB0aGluZyB0aGF0IGV2ZXIgaGFwcGVuZWQgdG8gbWUuPC9xPjwvcD48cD5GdW5ueSBob3cgdGhhdCB3b3JrcyBvdXQsIGlzbid0IGl0PzwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciAyNiIsDQogICAgInRvcGljIjogIlRoZSBBbHRhciBPZiBObyBEaWZmZXJlbmNlIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiV2UgYXJlIGxpa2UgbWFueSBwZWxsZXRzIG9mIGluY2Vuc2UgZmFsbGluZyBvbiB0aGUgc2FtZSBhbHRhci4gU29tZSBjb2xsYXBzZSBzb29uZXIsIG90aGVycyBsYXRlciwgYnV0IGl0IG1ha2VzIG5vIGRpZmZlcmVuY2UuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA0LjE1Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPldoYXQncyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHlvdSBhbmQgcmljaGVzdCBwZXJzb24gaW4gdGhlIHdvcmxkPyBPbmUgaGFzIGEgbGl0dGxlIG1vcmUgbW9uZXkgdGhhbiB0aGUgb3RoZXIuIFdoYXQncyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHlvdSBhbmQgdGhlIG9sZGVzdCBwZXJzb24gaW4gdGhlIHdvcmxkPyBPbmUgaGFzIGJlZW4gYXJvdW5kIGEgbGl0dGxlIGxvbmdlciB0aGFuIHRoZSBvdGhlci4gU2FtZSBnb2VzIGZvciB0aGUgdGFsbGVzdCwgc21hcnRlc3QsIGZhc3Rlc3QsIGFuZCBvbiBkb3duIHRoZSBsaW5lLjwvcD48cD5NZWFzdXJpbmcgb3Vyc2VsdmVzIGFnYWluc3Qgb3RoZXIgcGVvcGxlIG1ha2VzIGFjY2VwdGFuY2UgZGlmZmljdWx0LCBiZWNhdXNlIHdlIHdhbnQgd2hhdCA8ZW0+dGhleTwvZW0+IGhhdmUsIG9yIHdlIHdhbnQgaG93IHRoaW5ncyA8ZW0+Y291bGQ8L2VtPiBoYXZlIGdvbmUsIG5vdCB3aGF0IHdlIGhhcHBlbiB0byBoYXZlLiBCdXQgdGhhdCBtYWtlcyBubyBkaWZmZXJlbmNlLjwvcD48cD5Tb21lIG1pZ2h0IHNlZSB0aGlzIGxpbmUgZnJvbSBNYXJjdXMgYXMgcGVzc2ltaXN0aWMsIHdoZXJlYXMgb3RoZXJzIHNlZSBpdCBhcyBvcHRpbWlzdGljLiBJdCdzIHJlYWxseSBqdXN0IDxlbT50cnV0aDwvZW0+LiBXZSdyZSBhbGwgaGVyZSBhbmQgd2UncmUgYWxsIGdvaW5nIHRvIGxlYXZlIHRoaXMgZWFydGggZXZlbnR1YWxseSwgc28gbGV0J3Mgbm90IGNvbmNlcm4gb3Vyc2VsdmVzIHdpdGggcGV0dHkgZGlmZmVyZW5jZXMgaW4gdGhlIG1lYW50aW1lLiBXZSBoYXZlIHRvbyBtdWNoIHRvIGRvLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciAyNyIsDQogICAgInRvcGljIjogIlRoZSBQbGVhc3VyZSBPZiBUdW5pbmcgT3V0IFRoZSBOZWdhdGl2ZSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkhvdyBzYXRpc2Z5aW5nIGl0IGlzIHRvIGRpc21pc3MgYW5kIGJsb2NrIG91dCBhbnkgdXBzZXR0aW5nIG9yIGZvcmVpZ24gaW1wcmVzc2lvbiwgYW5kIGltbWVkaWF0ZWx5IHRvIGhhdmUgcGVhY2UgaW4gYWxsIHRoaW5ncy4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDUuMiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGUgU3RvaWNzIHdlcmUgbWVyY2lmdWxseSBzcGFyZWQgdGhlIGluZm9ybWF0aW9uIG92ZXJsb2FkIGVuZGVtaWMgdG8gdG9kYXkncyBzb2NpZXR5LiBUaGV5IGhhZCBubyBzb2NpYWwgbWVkaWEsIG5vIG5ld3NwYXBlcnMsIG5vIHRlbGV2aXNpb24gY2hhdHRlciB0byByaWxlIHRoZW0gdXAuIEJ1dCBldmVuIGJhY2sgdGhlbiwgYW4gdW5kaXNjaXBsaW5lZCBwZXJzb24gd291bGQgaGF2ZSBmb3VuZCBwbGVudHkgdG8gYmUgZGlzdHJhY3RlZCBhbmQgdXBzZXQgYnkuPC9wPjxwPlBhcnQgb2YgdGhlIFN0b2ljIG1pbmRzZXQgdGhlbiB3YXMgYSBzb3J0IG9mIGEgY3VsdGl2YXRlZCBpZ25vcmFuY2UuIFB1YmxpbGl1cyBTeXJ1cydzIGVwaWdyYW0gZXhwcmVzc2VzIGl0IHdlbGw6IDxxPkFsd2F5cyBzaHVuIHRoYXQgd2hpY2ggbWFrZXMgeW91IGFuZ3J5LjwvcT4gTWVhbmluZzogdHVybiB5b3VyIG1pbmQgYXdheSBmcm9tIHRoZSB0aGluZ3MgdGhhdCBwcm92b2tlIGl0LiBJZiB5b3UgZmluZCB0aGF0IGRpc2N1c3NpbmcgcG9saXRpY3MgYXQgdGhlIGRpbm5lciB0YWJsZSBsZWFkcyB0byBmaWdodGluZywgd2h5IGRvIHlvdSBrZWVwIGJyaW5naW5nIGl0IHVwPyBJZiB5b3VyIHNpYmxpbmcncyBsaWZlIGNob2ljZXMgYm90aGVyIHlvdSwgd2h5IGRvbid0IHlvdSBzdG9wIHBpY2tpbmcgYXQgdGhlbSBhbmQgbWFraW5nIHRoZW0geW91ciBjb25jZXJuPyBUaGUgc2FtZSBnb2VzIGZvciBzbyBtYW55IG90aGVyIHNvdXJjZXMgb2YgYWdncmF2YXRpb24uPC9wPjxwPkl0J3Mgbm90IGEgc2lnbiBvZiB3ZWFrbmVzcyB0byBzaHV0IHRoZW0gb3V0LiBJbnN0ZWFkLCBpdCdzIGEgc2lnbiBvZiBzdHJvbmcgd2lsbC4gVHJ5IHNheWluZzogPHE+SSBrbm93IHRoZSByZWFjdGlvbiBJIHR5cGljYWxseSB0YWtlIGluIHRoZXNlIHNpdHVhdGlvbnMsIGFuZCBJJ20gbm90IGdvaW5nIHRvIGRvIGl0IHRoaXMgdGltZS48L3E+IEFuZCB0aGVuIGZvbGxvdyBpdCB3aXRoOiA8cT5JJ20gYWxzbyBnb2luZyB0byByZW1vdmUgdGhlIHN0aW11bHVzIGZyb20gbXkgbGlmZSBpbiB0aGUgZnV0dXJlIHdhcyB3ZWxsLjwvcT48L3A+PHA+QmVjYXVzZSB3aGF0IGZvbGxvd3MgaXMgcGVhY2UgYW5kIHNlcmVuaXR5LjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJOb3ZlbWJlciAyOCIsDQogICAgInRvcGljIjogIkl0J3MgTm90IE9uIFRoZW0sIEl0J3MgT24gWW91IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiSWYgc29tZW9uZSBpcyBzbGlwcGluZyB1cCwga2luZGx5IGNvcnJlY3QgdGhlbSBhbmQgcG9pbnQgb3V0IHdoYXQgdGhleSBtaXNzZWQuIEJ1dCBpZiB5b3UgY2FuJ3QsIGJsYW1lIHlvdXJzZWxmJm1kYXNoO29yIG5vIG9uZS4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDEwLjQiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+QSBnb29kIHRlYWNoZXIga25vd3MgdGhhdCB3aGVuIGEgc3R1ZGVudCBpcyBmYWlsaW5nLCB0aGUgYmxhbWUgZmFsbCBvbiB0aGUgaW5zdHJ1Y3Rvciwgbm90IHRoZSBwdXBpbC4gSG93IG11Y2ggbW9yZSBnZW5lcm91cyBhbmQgdG9sZXJhbnQgd291bGQgd2UgYmUgaWYgd2UgY291bGQgZXh0ZW5kIHRoaXMgdW5kZXJzdGFuZGluZyB0byBvdGhlciBzcGhlcmVzIGluIG91ciBsaWZlPyBUbyBiZSBhYmxlIHRvIHNlZSB0aGF0IGlmIGEgZnJpZW5kIGlzIHVucmVsaWFibGUsIG1heWJlIGl0J3MgYmVjYXVzZSB0aGV5IGRvbid0IGtub3cgd2hhdCdzIHdyb25nIG9yIGJlY2F1c2Ugd2UgaGF2ZW4ndCB0cmllZCB0byBoZWxwIHRoZW0gZml4IHRoZWlyIGZsYXcuIElmIGFuIGVtcGxveWVlIGlzIHVuZGVycGVyZm9ybWluZywganVzdCB0YWxrIHRvIHRoZW0gb3IgZmlndXJlIG91dCBpZiB0aGV5J3JlIGxhY2tpbmcgaW4gc3VwcG9ydC4gSWYgc29tZW9uZSBpcyBiZWluZyBhbm5veWluZywgdHJ5IHRhbGtpbmcgdG8gdGhlbSBhYm91dCB0aGUgcHJvYmxlbSB3aXRoIHRoZWlyIGJlaGF2aW9yLCBvciBhc2sgeW91cnNlbGY6IDxlbT5XaHkgYW0gSSBiZWluZyBzbyBzZW5zaXRpdmU/PC9lbT48L3A+PHA+QW5kIGlmIHRoaXMgZG9lc24ndCB3b3JrLCB0cnkgbGV0dGluZyBpdCBnby4gSXQgbWlnaHQgYmUgYW4gaXNvbGF0ZWQgaW5jaWRlbnQgYW55d2F5LjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICI8cD5MZXQncyBnZXQgYmFjayB0byBhIHRpbWUgd2hlbiBhIHN0dWRlbnQsIGdvZCBmb3JiaWQsIGNvdWxkIGFjdHVhbGx5IGJlIGJsYW1lZCBmb3IgdGhlaXIgb3duIGV4YW0gcGVyZm9ybWFuY2UuIEEgdGltZSB3aGVuIHRoZSBkZWZhdWx0IHBvc2l0aW9uIHdhcyBvbmUgb2YgdHJ1c3QgaW4gdGVhY2hlcnMgYW5kIHdoYXQgdGhleSBkby4gTGV0J3Mgc3VwcG9ydCwgcmVzcGVjdCBhbmQgbnVydHVyZSBvdXIgeW91bmcgcGVvcGxlIGJ1dCBuZXZlciBjb21wcm9taXNlIG9uIG91ciBwdXJzdWl0IG9mIGVkdWNhdGlvbmFsIHB1cml0eS4gTGV0J3MgcHJlc3MgdGhlIHJlc2V0IGJ1dHRvbiBhbmQgY3JlYXRlIGEganVzdCBlcXVpbGlicml1bSBiZXR3ZWVuIHN0dWRlbnQgcmVzcG9uc2liaWxpdHkgYW5kIHRlYWNoZXIgYWNjb3VudGFiaWxpdHkuIFRoaXMgaXMgdml0YWwgZm9yIG91ciBzb2NpZXR5IGluIHRoZSBsb25nIHJ1biwgYmVjYXVzZSBpbiBwcm9tb3RpbmcgdGhlIG1hbnRyYSB0aGF0IGZhaWx1cmUgaXMgYWx3YXlzIHNvbWVvbmUgZWxzZSdzIGZhdWx0LCB3ZSBkZXByaXZlIG91ciB5b3VuZyBwZW9wbGUgb2Ygb25lIG9mIHRoZSBrZXkgZHJpdmVycyBvZiBjaGFuZ2UgYW5kIHByb2dyZXNzOiB0aGUgcmVhbGl6YXRpb24gb2YgZmFpbHVyZS48cD48Y2l0ZT5UaG9tYXMgUm9nZXJzLCAnTGV0J3MgZ2V0IGJhY2sgdG8gYSB0aW1lIHdoZW4gc3R1ZGVudHMsIG5vdCB0ZWFjaGVycywgY291bGQgYmUgYmxhbWVkIGZvciBleGFtIHBlcmZvcm1hbmNlJywgMDQgSmFuIDIwMTY8L2NpdGU+PHA+UGVvcGxlIG1ha2UgbWlzdGFrZXMuIFdoZW4gdGhleSBkbyBtYWtlIGEgbWlzdGFrZSwgYW5kIHlvdSBmZWVsIHRoZSBuZWVkIHRvIHBvaW50IGl0IG91dCwgYXQgbGVhc3QgZG8gdGhlbSB0aGUga2luZG5lc3Mgb2Ygc2hvd2luZyB0aGVtIGhvdyB0byBhdm9pZCBpdCBuZXh0IHRpbWUuIEJ1dCBpZiB5b3UgcG9pbnQgZmluZ2VycyBhbmQgcmVmdXNlIHRvIHRlYWNoLCB0aGUgYmxhbWUgaXMgb24geW91LiBUaGF0J3MgeW91ciBmYWlsdXJlLCBub3QgdGhlaXJzLCBiZWNhdXNlIHlvdSdyZSBjaG9vc2luZyB0byBuZWdsZWN0IGFuIG9wcG9ydHVuaXR5IHRvIGRvIGdvb2QuIE9mIGNvdXJzZSwgaWYgeW91IGNhbid0IGhlbHAgdGhlbSBsZWFybiwgbm8gb25lIGlzIHRvIGJsYW1lLiBUaGUgbWlzdGFrZSB0aGV5IG1hZGUgY291bGQgaGF2ZSBlYXNpbHkgYmVlbiBtYWRlIGJ5IHlvdS48L3A+PGNpdGU+UGF0cmljayBBbGxhbiwgPGEgaHJlZj1odHRwczovL2xpZmVoYWNrZXIuY29tL2RvbnQtYmxhbWUtb3RoZXJzLWlmLXlvdS1yZWZ1c2UtdG8taGVscC10aGVtLWxlYXJuLTE4MjAyNjEyMzYgdGFyZ2V0PV9ibGFuaz5saWZlaGFja2VyPC9hPiwgMDgtTk9WLTE3PC9jaXRlPiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDI5IiwNCiAgICAidG9waWMiOiAiWW91J3JlIEdvaW5nIFRvIEJlIE9LIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiRG9uJ3QgbGFtZW50IHRoaXMgYW5kIGRvbid0IGdldCBhZ2l0YXRlZC4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDcuNDMiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlcmUncyB0aGF0IGZlZWxpbmcgd2UgZ2V0IHdoZW4gc29tZXRoaW5nIGhhcHBlbnM6IDxlbT5JdCdzIGFsbCBvdmVyIG5vdy4gQWxsIGlzIGxvc3QuPC9lbT4gV2hhdCBmb2xsb3dzIGFyZSBjb21wbGFpbnRzIGFuZCBwaXR5IGFuZCBtaXNlcnkmbWRhc2g7dGhlIGltcG90ZW50IHN0cnVnZ2xlIGFnYWluc3Qgc29tZXRoaW5nIHRoYXQncyBhbHJlYWR5IG9jY3VycmVkLjwvcD48cD5XaHkgYm90aGVyPyBXZSBoYXZlIG5vIGlkZWEgd2hhdCB0aGUgZnV0dXJlIGhvbGRzLiBXZSBoYXZlIG5vIGlkZWEgd2hhdCdzIGNvbWluZyB1cCBhcm91bmQgdGhlIGJlbmQuIEl0IGNvdWxkIGJlIG1vcmUgcHJvYmxlbXMsIG9yIHRoaXMgY291bGQgYmUgdGhlIGRhcmtuZXNzIGJlZm9yZSB0aGUgZGF3bi48L3A+PHA+SWYgd2UncmUgU3RvaWMsIHRoZXJlIGlzIG9uZSB0aGluZyB3ZSBjYW4gYmUgc3VyZSBvZjogd2hhdGV2ZXIgaGFwcGVucywgd2UncmUgZ29pbmcgdG8gYmUgT0suPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIk5vdmVtYmVyIDMwIiwNCiAgICAidG9waWMiOiAiRm9sbG93IFRoZSA8ZW0+TG9nb3M8L2VtPiIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlRoZSBwZXJzb24gd2hvIGZvbGxvd3MgcmVhc29uIGluIGFsbCB0aGluZ3Mgd2lsbCBoYXZlIGJvdGggbGVpc3VyZSBhbmQgYSByZWFkaW5lc3MgdG8gYWN0Jm1kYXNoO3RoZXkgYXJlIGF0IG9uY2UgYm90aCBjaGVlcmZ1bCBhbmQgc2VsZi1jb21wb3NlZC4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDEwLjEyYiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGUgZ3VpZGluZyByZWFzb24gb2YgdGhlIHdvcmxkJm1kYXNoO3RoZSBTdG9pY3MgY2FsbGVkIHRoaXMgdGhlIDxlbT5sb2dvczwvZW0+Jm1kYXNoO2dpdmVzIHVzIHdoYXQgd2Ugd2FudCwgb3RoZXIgdGltZXMgaXQgZ2l2ZXMgdXMgcHJlY2lzZWx5IHdoYXQgd2UgZG8gbm90IHdhbnQuIEluIGVpdGhlciBjYXNlLCB0aGV5IGJlbGlldmVkIHRoYXQgdGhlIDxlbT5sb2dvczwvZW0+IHdhcyBhbiBhbGwtcG93ZXJmdWwgZm9yY2UgdGhhdCBnb3Zlcm5lZCB0aGUgdW5pdmVyc2UuPC9wPjxwPlRoZXJlIGlzIGEgaGVscGZ1bCBhbmFsb2d5IHRvIGV4cGxhaW4gdGhlIDxlbT5sb2dvczwvZW0+OiBXZSBhcmUgbGlrZSBhIGRvZyBsZWFzaGVkIHRvIGEgbW92aW5nIGNhcnQuIFRoZSBkaXJlY3Rpb24gb2YgdGhlIGNhcnQgd2lsbCBkZXRlcm1pbmUgd2hlcmUgd2UgZ28uIERlcGVuZGluZyBvbiB0aGUgbGVuZ3RoIG9mIHRoZSBsZWFzaCwgd2UgYWxzbyBoYXZlIGEgZmFpciBhbW91bnQgb2Ygcm9vbSB0byBleHBsb3JlIGFuZCBkZXRlcm1pbmUgdGhlIHBhY2UsIGJ1dCB1bHRpbWF0ZWx5IHdoYXQgZWFjaCBvZiB1cyBtdXN0IGNob29zZSBpcyB3aGV0aGVyIHdlIHdpbGwgZ28gd2lsbGluZ2x5IG9yIGJlIHBhaW5mdWxseSBkcmFnZ2VkLiBXaGljaCB3aWxsIGl0IGJlPzwvcD48cD5DaGVlcmZ1bCBhY2NlcHRhbmNlPyBPciBpZ25vcmFudCByZWZ1c2FsPyBJbiB0aGUgZW5kLCB0aGV5IGFtb3VudCB0byB0aGUgc2FtZS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMSIsDQogICAgInRvcGljIjogIlByZXRlbmRpbmcgVG9kYXkgSXMgVGhlIEVuZCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkxldCB1cyBwcmVwYXJlIG91ciBtaW5kcyBhcyBpZiB3ZSdkIGNvbWUgdG8gdGhlIHZlcnkgZW5kIG9mIGxpZmUuIExldCB1cyBwb3N0cG9uZSBub3RoaW5nLiBMZXQgdXMgYmFsYW5jZSBsaWZlJ3MgYm9va3MgZWFjaCBkYXkuLi4uVGhlIG9uZSB3aG8gcHV0cyB0aGUgZmluaXNoaW5nIHRvdWNoZXMgb24gdGhlaXIgbGlmZSBlYWNoIGRheSBpcyBuZXZlciBzaG9ydCBvZiB0aW1lLiIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJNb3JhbCBMZXR0ZXJzLCAxMDEuN2ItOGEiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+PHE+TGl2ZSBlYWNoIGRheSBhcyBpZiBpdCB3ZXJlIHlvdXIgbGFzdDwvcT4gaXMgYSBjbGljaCZlYWN1dGU7LiBQbGVudHkgc2F5IGl0LCBmZXcgYWN0dWFsbHkgZG8gaXQuIEhvdyByZWFzb25hYmxlIHdvdWxkIHRoYXQgYmUgYW55d2F5PyBTdXJlbHkgU2VuZWNhIGlzbid0IHNheWluZyB0byBmb3JzYWtlIGxhd3MgYW5kIGNvbnNpZGVyYXRpb25zJm1kYXNoO3RvIGZpbmQgc29tZSBvcmd5IHRvIGpvaW4gYmVjYXVzZSB0aGUgd29ybGQgaXMgZW5kaW5nLjwvcD48cD5BIGJldHRlciBhbmFsb2d5IHdvdWxkIGJlIGEgc29sZGllciBhYm91dCB0byBsZWF2ZSBvbiBkZXBsb3ltZW50LiBOb3Qga25vd2luZyB3aGV0aGVyIHRoZXknbGwgcmV0dXJuIG9yIG5vdCwgd2hhdCBkbyB0aGV5IGRvPzwvcD48cD5UaGV5IGdldCB0aGVpciBhZmZhaXJzIGluIG9yZGVyLiBUaGV5IGhhbmRsZSB0aGVpciBidXNpbmVzcy4gVGhleSB0ZWxsIHRoZWlyIGNoaWxkcmVuIG9yIHRoZWlyIGZhbWlseSB0aGF0IHRoZXkgbG92ZSB0aGVtLiBUaGV5IGRvbid0IGhhdmUgdGltZSBmb3IgcXVhcnJlbGluZyBvciBwZXR0eSBtYXR0ZXJzLiBBbmQgdGhlbiBpbiB0aGUgbW9ybmluZyB0aGV5IGFyZSByZWFkeSB0byBnbyZtZGFzaDtob3BpbmcgdG8gY29tZSBiYWNrIGluIG9uZSBwaWVjZSBidXQgcHJlcGFyZWQgZm9yIHRoZSBwb3NzaWJpbGl0eSB0aGF0IHRoZXkgbWlnaHQgbm90LjwvcD48cD5MZXQgdXMgbGl2ZSB0b2RheSB0aGF0IHNhbWUgd2F5LjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICI8cD48c3BlYWtlcj5DYXB0LiBSb25hbGQgU3BlaXJzOjwvc3BlYWtlcj4gWW91IGtub3cgd2h5IHlvdSBoaWQgaW4gdGhhdCBkaXRjaCwgQmxpdGhlPzxiciAvPjxzcGVha2VyPlB2dC4gQWxiZXJ0IEJsaXRoZTo8L3NwZWFrZXI+IEkgd2FzIHNjYXJlZC48YnIgLz48c3BlYWtlcj5DYXB0LiBSb25hbGQgU3BlaXJzOjwvc3BlYWtlcj4gV2UncmUgYWxsIHNjYXJlZC4gWW91IGhpZCBpbiB0aGF0IGRpdGNoIGJlY2F1c2UgeW91IHRoaW5rIHRoZXJlJ3Mgc3RpbGwgaG9wZS4gQnV0IEJsaXRoZSwgdGhlIG9ubHkgaG9wZSB5b3UgaGF2ZSBpcyB0byBhY2NlcHQgdGhlIGZhY3QgdGhhdCB5b3UncmUgYWxyZWFkeSBkZWFkLCBhbmQgdGhlIHNvb25lciB5b3UgYWNjZXB0IHRoYXQsIHRoZSBzb29uZXIgeW91J2xsIGJlIGFibGUgdG8gZnVuY3Rpb24gYXMgYSBzb2xkaWVyJ3Mgc3VwcG9zZWQgdG8gZnVuY3Rpb24uIFdpdGhvdXQgbWVyY3ksIHdpdGhvdXQgY29tcGFzc2lvbiwgd2l0aG91dCByZW1vcnNlLiBBbGwgd2FyIGRlcGVuZHMgb24gaXQuPC9wPjxwPjxzcGVha2VyPk5peG9uOjwvc3BlYWtlcj4gSGFycnkuLi4gd2hhdCBleGFjdGx5IGFyZSB5b3UgZG9pbmcgd2l0aCB5b3VyIHJlc2VydmUgY2h1dGU/IFlvdSd2ZSBiZWVuIGhhdWxpbmcgdGhhdCB0aGluZyBhcm91bmQgZXZlciBzaW5jZSB3ZSBqdW1wZWQuPGJyIC8+PHNwZWFrZXI+SGFycnkgV2Vsc2g6PC9zcGVha2VyPiBHb25uYSBzZW5kIGl0IGJhY2sgdG8gS2l0dHkgd2hlbiB3ZSBnZXQgYmFjayB0byBFbmdsYW5kLiBTaWxrLiBGaWd1cmUgaXQnbGwgbWFrZSBhIGdvb2Qgd2VkZGluZyBkcmVzcywgeW91IGtub3cuIFdoYXQgd2l0aCB0aGUgcmF0aW9uaW5nIGFuZCBhbGwuPGJyIC8+PHNwZWFrZXI+Tml4b246PC9zcGVha2VyPiBbQ2h1Y2tsaW5nXSBKZWV6LCBIYXJyeSwgSSBuZXZlciB3b3VsZCBoYXZlIGd1ZXNzZWQuPGJyIC8+PHNwZWFrZXI+SGFycnkgV2Vsc2g6PC9zcGVha2VyPiBXaGF0PyBUaGF0IEknbSBzbyBzZW50aW1lbnRhbD88YnIgLz48c3BlYWtlcj5OaXhvbjo8L3NwZWFrZXI+IE5vLCB0aGF0IHlvdSB0aGluayB3ZSdyZSBnb25uYSBtYWtlIGl0IGJhY2sgdG8gRW5nbGFuZC48L3A+Ig0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMiIsDQogICAgInRvcGljIjogIkRvbid0IE1pbmQgTWUsIEknbSBPbmx5IER5aW5nIFNsb3ciLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJMZXQgZWFjaCB0aGluZyB5b3Ugd291bGQgZG8sIHNheSBvciBpbnRlbmQgYmUgbGlrZSB0aGF0IG9mIGEgZHlpbmcgcGVyc29uLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgMi4xMS4xIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkhhdmUgeW91IGV2ZXIgaGVhcmQgc29tZW9uZSBhc2s6IDxxPldoYXQgd291bGQgeW91IGRvIGlmIHlvdSBmb3VuZCBvdXQgdG9tb3Jyb3cgdGhhdCB5b3UgaGFkIGNhbmNlcj88L3E+IFRoZSBxdWVzdGlvbiBpcyBkZXNpZ25lZCB0byBtYWtlIHlvdSBjb25zaWRlciBob3cgZGlmZmVyZW50IGxpZmUgbWlnaHQgYmUgaWYgeW91IHdlcmUgc3VkZGVubHkgZ2l2ZW4ganVzdCBhIGZldyBtb250aHMgb3Igd2Vla3MgdG8gbGl2ZS4gVGhlcmUncyBub3RoaW5nIGxpa2UgYSB0ZXJtaW5hbCBpbGxuZXNzIHRvIHdha2UgcGVvcGxlIHVwLjwvcD48cD5CdXQgaGVyZSdzIHRoZSB0aGluZzogeW91IGFscmVhZHkgaGF2ZSBhIHRlcm1pbmFsIGRpYWdub3Npcy4gV2UgYWxsIGRvISBBcyB0aGUgd3JpdGVyIEVkbXVuZCBXaWxzb24gcHV0IGl0LCA8cT5EZWF0aCBpcyBvbmUgcHJvcGhlY3kgdGhhdCBuZXZlciBmYWlscy48L3E+IEV2ZXJ5IHBlcnNvbiBpcyBib3JuIHdpdGggYSBkZWF0aCBzZW50ZW5jZS4gRWFjaCBzZWNvbmQgdGhhdCBwYXNzZXMgYnkgaXMgb25lIHlvdSdsbCBuZXZlciBnZXQgYmFjay48L3A+PHA+T25jZSB5b3UgcmVhbGl6ZSB0aGlzLCBpdCB3aWxsIGhhdmUgIHByb2ZvdW5kIGltcGFjdCBvbiB3aGF0IHlvdSBkbywgc2F5LCBhbmQgdGhpbmsuIERvbid0IGxldCBhbm90aGVyIGRheSB0aWNrIGF3YXkgaW4gaWdub3JhbmNlIG9mIHRoZSByZWFsaXR5IHRoYXQgeW91J3JlIGEgZHlpbmcgcGVyc29uLiBXZSBhbGwgYXJlLiBDYW4gdG9kYXkgYmUgdGhlIGRheSB3ZSBzdG9wIHByZXRlbmRpbmcgb3RoZXJ3aXNlPzwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciAzIiwNCiAgICAidG9waWMiOiAiVGhlIFBoaWxvc29waGVyIEFzIEFuIEFydGlzYW4gT2YgTGlmZSBBbmQgRGVhdGgiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJQaGlsb3NvcGh5IGRvZXMgbm90IGNsYWltIHRvIGdldCBhIHBlcnNvbiBhbiBleHRlcm5hbCBwb3NzZXNzaW9uLiBUbyBkbyBzbyB3b3VsZCBiZSBiZXlvbmQgaXRzIGZpZWxkLiBBcyB3b29kIGlzIHRvIHRoZSBjYXJwZW50ZXIsIGJyb256ZSB0byB0aGUgc2N1bHB0b3IsIHNvIG91ciBvd24gbGl2ZXMgYXJlIHRoZSBwcm9wZXIgbWF0ZXJpYWwgaW4gdGhlIGFydCBvZiBsaXZpbmcuIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDEuMTUuMiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5QaGlsb3NvcGh5IGlzIG5vdCBzb21lIGlkbGUgcHVyc3VpdCBhcHByb3ByaWF0ZSBvbmx5IGZvciBhY2FkZW1pY3Mgb3IgdGhlIHJpY2guIEluc3RlYWQsIGl0IGlzIG9uZSBvZiB0aGUgbW9zdCBlc3NlbnRpYWwgYWN0aXZpdGllcyB0aGF0IGEgaHVtYW4gYmVpbmcgY2FuIGVuZ2FnZSBpbi4gSXRzIHB1cnBvc2UsIGFzIEhlbnJ5IERhdmlkIFRob3JlYXUgc2FpZCBhIGZldyB0aG91c2FuZCB5ZWFycyBhZnRlciBFcGljdGV0dXMsIGlzIHRvIGhlbHAgdXMgPHE+c29sdmUgdGhlIHByb2JsZW1zIG9mIGxpZmUsIG5vdCBvbmx5IHRoZW9yZXRpY2FsbHkgYnV0IHByYWN0aWNhbGx5LjwvcT4gVGhpcyBhbGlnbnMgbmljZWx5IHdpdGggQ2ljZXJvJ3MgZmFtb3VzIGxpbmU6IDxxPjxlbT5UbyBwaGlsb3NvcGhpemUgaXMgdG8gbGVhcm4gaG93IHRvIGRpZS48L2VtPjwvcT48L3A+PHA+WW91J3JlIG5vdCByZWFkaW5nIHRoZXNlIHF1b3RlcyBhbmQgZG9pbmcgdGhlc2UgdGhvdWdodCBleGVyY2lzZXMgZm9yIGZ1bi4gVGhvdWdoIHRoZXkgbWF5IGJlIGVuam95YWJsZSBhbmQgaGVscCB5b3UgbGlnaHRlbiB1cCwgdGhlaXIgYWltIGlzIHRvIGhlbHAgeW91IHNjdWxwdCBhbmQgaW1wcm92ZSB5b3VyIGxpZmUuIEFuZCBiZWNhdXNlIGFsbCBvZiB1cyBoYXZlIGJ1dCBvbmUgbGlmZSBhbmQgb25lIGRlYXRoLCB3ZSBzaG91bGQgdHJlYXQgZWFjaCBleHBlcmllbmNlIGxpa2UgYSBzY3VscHRvciB3aXRoIGhpcyBjaGlzZWxzLCBjYXJ2aW5nIHVudGlsLCB0byBwYXJhcGhyYXNlIE1pY2hlbGFuZ2Vsbywgd2Ugc2V0IGZyZWUgdGhlIGFuZ2VsIGluIHRoZSBtYXJibGUuPC9wPjxwPldlIGFyZSB0cnlpbmcgdG8gZG8gdGhpcyBkaWZmaWN1bHQgdGhpbmcmbWRhc2g7bGl2aW5nIGFuZCBkeWluZyZtZGFzaDthcyB3ZWxsIGFzIHdlIGNhbi4gQW5kIHRvIGRvIHRoYXQsIHdlIG11c3QgcmVtZW1iZXIgd2hhdCB3ZSd2ZSBsZWFybmVkIGFuZCB0aGUgd2lzZSB3b3JkcyB3ZSd2ZSBiZWVuIGdpdmVuLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciA0IiwNCiAgICAidG9waWMiOiAiWW91IERvbid0IE93biBUaGF0IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiQW55dGhpbmcgdGhhdCBjYW4gYmUgcHJldmVudGVkLCB0YWtlbiBhd2F5LCBvciBjb2VyY2VkIGlzIG5vdCBhIHBlcnNvbidzIG93biZtZGFzaDtidXQgdGhvc2UgdGhpbmdzIHRoYXQgY2FuJ3QgYmUgYmxvY2tlZCBhcmUgdGhlaXIgb3duIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkRpc2NvdXJzZXMsIDMuMjQuMyINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGUgY29uc2VydmF0aW9uaXN0IERhbmllbCBPJ0JyaWVuIGhhcyBzYWlkIHRoYXQgaGUgZG9lc24ndCA8cT5vd248L3E+IGhpcyBzZXZlcmFsLXRob3VzYW5kLWFjcmUgYnVmZmFsbyByYW5jaCBpbiBTb3V0aCBEYWtvdGEsIGhlIGp1c3QgbGl2ZXMgdGhlcmUgd2hpbGUgdGhlIGJhbmsgbGV0cyBoaW0gbWFrZSBtb3J0Z2FnZSBwYXltZW50cyBvbiBpdC4gSXQncyBhIGpva2UgYWJvdXQgdGhlIGVjb25vbWljIHJlYWxpdGllcyBvZiByYW5jaGluZy4gQnV0IGl0IGFsc28gaGludHMgYXQgdGhlIGlkZWEgdGhhdCBsYW5kIGRvZXNuJ3QgYmVsb25nIHRvIG9uZSBpbmRpdmlkdWFsLCB0aGF0IGl0IHdpbGwgZmFyIG91dGxhc3QgdXMgYW5kIG91ciBkZXNjZW5kYW50cy4gTWFyY3VzIEF1cmVsaXVzIHVzZWQgdG8gc2F5IHRoYXQgd2UgZG9uJ3Qgb3duIGFueXRoaW5nIGFuZCB0aGF0IGV2ZW4gb3VyIGxpdmVzIGFyZSBoZWxkIGluIHRydXN0LjwvcD48cD5XZSBtYXkgY2xhdyBhbmQgZmlnaHQgYW5kIHdvcmsgdG8gb3duIHRoaW5ncywgYnV0IHRob3NlIHRoaW5ncyBjYW4gYmUgdGFrZW4gYXdheSBpbiBhIHNlY29uZC4gVGhlIHNhbWUgZ29lcyBmb3Igb3RoZXIgdGhpbmdzIHdlIGxpa2UgdG8gdGhpbmsgYXJlIDxxPm91cnM8L3E+IGJ1dCBhcmUgZXF1YWxseSBwcmVjYXJpb3VzOiBvdXIgc3RhdHVzLCBvdXIgcGh5c2ljYWwgaGVhbHRoIG9yIHN0cmVuZ3RoLCBvdXIgcmVsYXRpb25zaGlwcy4gSG93IGNhbiB0aGVzZSByZWFsbHkgYmUgb3VycyBpZiBzb21ldGhpbmcgb3RoZXIgdGhhbiB1cyZtZGFzaDtmYXRlLCBiYWQgbHVjaywgZGVhdGgsIGFuZCBzbyBvbiZtZGFzaDtjYW4gZGlzcG9zc2VzcyB1cyBvZiB0aGVtIHdpdGhvdXQgbm90aWNlPzwvcD48cD5TbyB3aGF0IGRvIHdlIG93bj8gSnVzdCBvdXIgbGl2ZXMmbWRhc2g7YW5kIG5vdCBmb3IgbG9uZzwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciA1IiwNCiAgICAidG9waWMiOiAiVGhlIEJlbmVmaXRzIE9mIFNvYmVyaW5nIFRob3VnaHRzIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiS2VlcCBkZWF0aCBhbmQgZXhpbGUgYmVmb3JlIHlvdXIgZXllcyBlYWNoIGRheSwgYWxvbmcgd2l0aCBldmVyeXRoaW5nIHRoYXQgc2VlbXMgdGVycmlibGUmbWRhc2g7YnkgZG9pbmcgc28sIHlvdSdsbCBuZXZlciBoYXZlIGEgYmFzZSB0aG91Z2h0IG5vciB3aWxsIHlvdSBoYXZlIGV4Y2Vzc2l2ZSBkZXNpcmUuIiwNCiAgICAgICAgImF1dGhvciI6ICJFcGljdGV0dXMiLA0KICAgICAgICAic291cmNlIjogIkVuY2hpcmlkaW9uLCAyMSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5Qb2xpdGljYWwgd2luZHMgY291bGQgY2hhbmdlIGluIGFuIGluc3RhbnQsIGRlcHJpdmluZyB5b3Ugb2YgdGhlIG1vc3QgYmFzaWMgZnJlZWRvbXMgeW91IHRha2UgZm9yIGdyYW50ZWQuIE9yLCBubyBtYXR0ZXIgd2hvIHlvdSBhcmUgb3IgaG93IHNhZmVseSB5b3UndmUgbGl2ZWQgeW91ciBsaWZlLCB0aGVyZSdzIHNvbWVvbmUgb3V0IHRoZXJlIHdobyB3b3VsZCByb2IgYW5kIGtpbGwgeW91IGZvciBhIGNvdXBsZSBvZiBkb2xsYXJzLjwvcD48cD5BcyBpdCdzIHdyaXR0ZW4gaW4gdGhlIHRpbWVsZXNzIDxjaXRlPkVwaWMgb2YgR2lsZ2FtZXNoPC9jaXRlPjxibG9ja3F1b3RlPjxxPk1hbiBpcyBzbmFwcGVkIG9mZiBsaWtlIGEgcmVlZCBpbiB0aGUgY2FuZWJyZWFrITxiciAvPlRoZSBjb21lbHkgeW91bmcgbWFuLCB0aGUgcHJldHR5IHlvdW5nIHdvbWFuJm1kYXNoOzxiciAvPkFsbCB0b28gc29vbiBpbiB0aGVpciBwcmltZSBEZWF0aCBhYmR1Y3RzIHRoZW0hPC9xPjwvYmxvY2txdW90ZT48L3A+PHA+RGVhdGggaXMgbm90IHRoZSBvbmx5IHVuZXhwZWN0ZWQgaW50ZXJydXB0aW9uIHdlIG1pZ2h0IGZhY2UmbWRhc2g7b3VyIHBsYW5zIGNhbiBiZSBkYXNoZWQgdG8gcGllY2VzIGJ5IGEgbWlsbGlvbiB0aGluZ3MuIFRvZGF5IG1pZ2h0IGJlIGEgYml0IG1vcmUgcGxlYXNhbnQgaWYgeW91IGlnbm9yZSB0aG9zZSBwb3NzaWJpbGl0aWVzLCBidXQgYXQgd2hhdCBjb3N0PzwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciA2IiwNCiAgICAidG9waWMiOiAiVGhlIFN3b3JkIERhbmdsZXMgT3ZlciBZb3UiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJEb24ndCBiZWhhdmUgYXMgaWYgeW91IGFyZSBkZXN0aW5lIHRvIGxpdmUgZm9yZXZlci4gV2hhdCdzIGZhdGVkIGhhbmdzIG92ZXIgeW91LiBBcyBsb25nIGFzIHlvdSBsaXZlIGFuZCB3aGlsZSB5b3UgY2FuLCBiZWNvbWUgZ29vZCBub3cuIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA0LjE3Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoZXJlIGlzIGFuIGFuY2llbnQgc3Rvcnkgb2YgYSBjb3VyaWVyIHdobyBoYWQgbWFkZSBsaWdodCBvZiB0aGUgcmVzcG9uc2liaWxpdGllcyBvZiBoaXMga2luZy4gVG8gcHJvdmUgaGUgd2FzIG1pc3Rha2VuLCB0aGUga2luZyBhcnJhbmdlZCB0byBzd2l0Y2ggcGxhY2VzIHdpdGggdGhlIGNvdXJ0aWVyIHNvIGhlIGNvdWxkIGV4cGVyaWVuY2Ugd2hhdCBpdCB3YXMgbGlrZSB0byBiZSBhIGtpbmcuIFRoZSBraW5nIG1hZGUgb25lIG90aGVyIGFkanVzdG1lbnRzOiBoZSBodW5nIGEgc3dvcmQgYnkgYSBoYWlyIG92ZXIgdGhlIHRocm9uZSB0byBpbGx1c3RyYXRlIHRoZSBwZXJpbCBhbmQgYnVyZGVuIG9mIGtpbmdzaGlwIGFzIHdlbGwgYXMgdGhlIGNvbnN0YW50IGZlYXIgb2YgYXNzYXNzaW5hdGlvbiBXZSBjYWxsIHRoYXQgZGFuZ2xpbmcgcmVtaW5kZXIgb2YgZGVhdGggYW5kIGRpZmZpY3VsdHkgdGhlIFN3b3JkIG9mIERhbW9jbGVzLjwvcD48cD5UaGUgcmVhbGl0eSBpcyB0aGF0IGEgc2ltaWxhciBzd29yZCBoYW5ncyBvdmVyIGFsbCBvZiB1cyZtZGFzaDtsaWZlIGNhbiBiZSB0YWtlbiBmcm9tIHVzIGF0IGFueSBtb21lbnQuIEFuZCB0aGF0IHRocmVhdCBjYW4gc2VuZCB1cyBpbiBvbmUgb2YgdHdvIGRpcmVjdGlvbnM6IHdlIGNhbiBmZWFyIGFuZCBkcmVhZCBpdCwgb3Igd2UgY2FuIHVzZSBpdCB0byBtb3RpdmF0ZSB1cy4gVG8gZG8gZ29vZCwgdG8gYmUgZ29vZC4gQmVjYXVzZSB0aGUgc3dvcmQgaXMgZGFuZ2xpbmcsIGFuZCB0aGVyZSdzIG5vdGhpbmcgZWxzZSB0byBiZSBjb25jZXJuZWQgd2l0aCwgd291bGQgeW91IHJhdGhlciBpdCBjYXRjaCB5b3UgaW4gdGhlIG1pZGRsZSBvZiBzb21lIHNoYW1lZnVsLCBzZWxmaXNoIGFjdD8gV291bGQgeW91IHJhdGhlciBpdCBjYXRjaCB5b3UgPGVtPndhaXRpbmc8L2VtPiB0byBiZSBnb29kIGluIHRoZSBmdXR1cmU/PC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkRlY2VtYmVyIDciLA0KICAgICJ0b3BpYyI6ICJUaGUgQ2FyZHMgV2UncmUgRGVhbHQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJUaGluayBvZiB0aGUgbGlmZSB5b3UgbGl2ZWQgdW50aWwgbm93IGFzIG92ZXIgYW5kLCBhcyBhIGRlYWQgbWFuLCBzZWUgd2hhdCdzIGxlZnQgYXMgYSBib251cyBhbmQgbGl2ZSBpdCBhY2NvcmRpbmcgdG8gTmF0dXJlLiBMb3ZlIHRoZSBoYW5kIHRoYXQgZmF0ZSBkZWFscyB5b3UgYW5kIHBsYXkgaXQgYXMgeW91ciBvd24sIGZvciB3aGF0IGNvdWxkIGJlIG1vcmUgZml0dGluZz8iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDcuNTYtNTciDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+V2UgaGF2ZSBhbiBpcnJhdGlvbmFsIGZlYXIgb2YgYWNrbm93bGVkZ2luZyBvdXIgb3duIG1vcnRhbGl0eS4gV2UgYXZvaWQgdGhpbmtpbmcgYWJvdXQgaXQgYmVjYXVzZSB3ZSB0aGluayBpdCB3aWxsIGJlIGRlcHJlc3NpbmcuIEluIGZhY3QsIHJlZmxlY3Rpbmcgb24gbW9ydGFsaXR5IG9mdGVuIGhhcyB0aGUgb3Bwb3NpdGUgZWZmZWN0Jm1kYXNoO2ludmlnb3JhdGluZyB1cyBtb3JlIHRoYW4gc2FkZGVuaW5nIHVzLiBXaHk/IEJlY2F1c2UgaXQgZ2l2ZSB1cyBjbGFyaXR5LjwvcD48cD5JZiB5b3Ugd2VyZSBzdWRkZW5seSB0b2xkIHlvdSBoYWQgYnV0IGEgd2VlayB0byBsaXZlLCB3aGF0IGNoYW5nZXMgd291bGQgeW91IG1ha2U/IElmIHlvdSBkaWVkIGJ1dCB3ZXJlIHJlc3VzY2l0YXRlZCwgaG93IGRpZmZlcmVudCB3b3VsZCB5b3VyIHBlcnNwZWN0aXZlIGJlPzwvcD48cD5XaGVuLCBhcyBTaGFrZXNwZWFyZSdzIFByb3NwZXJvIHB1dHMgaXQsIDxxPmV2ZXJ5IHRoaXJkIHRob3VnaHQgc2hhbGwgYmUgbXkgZ3JhdmUsPC9xPiB0aGVyZSdzIG5vIHJpc2sgb2YgZ2V0dGluZyBjYXVnaHQgdXAgaW4gcGV0dHkgbWF0dGVycyBvciBkaXN0cmFjdGlvbnMuIEluc3RlYWQgb2YgZGVueWluZyBvdXIgZmVhciBvZiBkZWF0aCwgbGV0J3MgbGV0IGl0IG1ha2UgdGhlIGJlc3QgcGVvcGxlIHdlIGNhbiBiZS48L3A+PHA+VG9kYXkuPC9wPiIsDQogICAgInRob3VnaHRzIjogIjxwPjxzcGVha2VyPktlYXRpbmc6PC9zcGVha2VyPiA8cT5TZWl6ZSB0aGUgZGF5LiBHYXRoZXIgeWUgcm9zZWJ1ZHMgd2hpbGUgeWUgbWF5LjwvcT4gV2h5IGRvZXMgdGhlIHdyaXRlciB1c2UgdGhlc2UgbGluZXM/PGJyIC8+PHNwZWFrZXI+Q2hhcmxpZTo8L3NwZWFrZXI+IEJlY2F1c2UgaGUncyBpbiBhIGh1cnJ5LjxiciAvPjxzcGVha2VyPktlYXRpbmc6PC9zcGVha2VyPiBOby4gRGluZyEgVGhhbmsgeW91IGZvciBwbGF5aW5nIGFueXdheS4gQmVjYXVzZSB3ZSBhcmUgZm9vZCBmb3Igd29ybXMsIGxhZHMuIEJlY2F1c2UsIGJlbGlldmUgaXQgb3Igbm90LCBlYWNoIGFuZCBldmVyeSBvbmUgb2YgdXMgaW4gdGhpcyByb29tIGlzIG9uZSBkYXkgZ29pbmcgdG8gc3RvcCBicmVhdGhpbmcsIHR1cm4gY29sZCBhbmQgZGllLjxwPiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkRlY2VtYmVyIDgiLA0KICAgICJ0b3BpYyI6ICJEb24ndCBIaWRlIEZyb20gWW91ciBGZWVsaW5ncyIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkl0J3MgYmV0dGVyIHRvIGNvbnF1ZXIgZ3JpZWYgdGhhbiB0byBkZWNlaXZlIGl0LiIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJPbiBDb25zb2xhdGlvbiBUbyBIZWx2aWEsIDE3LjFiIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPldlJ3ZlIGFsbCBsb3N0IHBlb3BsZSB3ZSB3ZXJlIGNsb3NlIHRvJm1kYXNoO2EgZnJpZW5kLCBhIGNvbGxlYWd1ZSwgYSBwYXJlbnQsIGEgZ3JhbmRwYXJlbnQuIFdoaWxlIHdlIHdlcmUgc3VmZmVyaW5nIGZyb20gb3VyIGdyaWVmLCBzb21lIHdlbGwtbWVhbmluZyBwZXJzb24gZGlkIHRoZWlyIGJlc3QgdG8gdGFrZSBvdXIgbWluZCBvZmYgaXQgb3IgbWFrZSB1cyB0aGluayBhYm91dCBzb21ldGhpbmcgZWxzZSBmb3IgYSBjb3VwbGUgaG91cnMuIEhvd2V2ZXIga2luZCwgdGhlc2UgZ2VzdHVyZXMgYXJlIG1pc2d1aWRlZC48L3A+PHA+VGhlIFN0b2ljcyBhcmUgc3RlcmVvdHlwZWQgYXMgc3VwcHJlc3NpbmcgdGhlaXIgZW1vdGlvbnMsIGJ1dCB0aGVpciBwaGlsb3NvcGh5IHdhcyBhY3R1YWxseSBpbnRlbmRlZCB0byB0ZWFjaCB1cyB0byBmYWNlLCBwcm9jZXNzLCBhbmQgZGVhbCB3aXRoIGVtb3Rpb25zIDxlbT5pbW1lZGlhdGVseTwvZW0+IGluc3RlYWQgb2YgcnVubmluZyBmcm9tIHRoZW0uIFRlbXB0aW5nIGFzIGl0IGlzIHRvIGRlY2VpdmUgeW91cnNlbGYgb3IgaGlkZSBmb3JtIGEgcG93ZXJmdWwgZW1vdGlvbiBsaWtlIGdyaWVmJm1kYXNoO2J5IHRlbGxpbmcgeW91cnNlbGYgYW5kIG90aGVyIHBlb3BsZSB0aGF0IHlvdSdyZSBmaW5lJm1kYXNoO2F3YXJlbmVzcyBhbmQgdW5kZXJzdGFuZGluZyBhcmUgYmV0dGVyLiBEaXN0cmFjdGlvbiBtaWdodCBiZSBwbGVhc2FudCBpbiB0aGUgc2hvcnQgdGVybSZtZGFzaDtieSBnb2luZyB0byBnbGFkaWF0b3JpYWwgZ2FtZXMsIGFzIGEgUm9tYW4gbWlnaHQgaGF2ZSBkb25lLCBmb3IgZXhhbXBsZS4gRm9jdXNpbmcgaXMgYmV0dGVyIGluIHRoZSBsb25nIHRlcm0uPC9wPjxwPlRoYXQgbWVhbnMgZmFjaW5nIGl0IG5vdy4gUHJvY2VzcyBhbmQgcGFyc2Ugd2hhdCB5b3UgYXJlIGZlZWxpbmcuIFJlbW92ZSB5b3VyIGV4cGVjdGF0aW9ucywgeW91ciBlbnRpdGxlbWVudHMsIHlvdXIgc2Vuc2Ugb2YgaGF2aW5nIGJlZW4gd3JvbmdlZC4gRmluZCB0aGUgcG9zaXRpdmUgaW4gdGhlIHNpdHVhdGlvbiwgYnV0IGFsc28gc2l0IHdpdGggeW91ciBwYWluIGFuZCBhY2NlcHQgaXQsIHJlbWVtYmVyaW5nIHRoYXQgaXQgaXMgYSBwYXJ0IG9mIGxpZmUuIFRoYXQncyBob3cgb25lIGNvbnF1ZXJzIGdyaWVmLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciA5IiwNCiAgICAidG9waWMiOiAiU3BlbmR0aHJpZnRzIG9mIFRpbWUiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJXZXJlIGFsbCB0aGUgZ2VuaXVzZXMgb2YgaGlzdG9yeSB0byBmb2N1cyBvbiB0aGlzIHNpbmdsZSB0aGVtZSwgdGhleSBjb3VsZCBuZXZlciBmdWxseSBleHByZXNzIHRoZWlyIGJhZmZsZW1lbnQgYXQgdGhlIGRhcmtuZXNzIG9mIHRoZSBodW1hbiBtaW5kLiBObyBwZXJzb24gd291bGQgZ2l2ZSB1cCBldmVuIGFuIGluY2ggb2YgdGhlaXIgZXN0YXRlLCBhbmQgdGhlIHNsaWdodGVzdCBkaXNwdXRlIHdpdGggYSBuZWlnaGJvciBjYW4gbWVhbiBoZWxsIHRvIHBheTsgeWV0IHdlIGVhc2lseSBsZXQgb3RoZXJzIGVuY3JvYWNoIG9uIG91ciBsaXZlcyZtZGFzaDt3b3JzZSwgd2Ugb2Z0ZW4gcGF2ZSB0aGUgd2F5IGZvciB0aG9zZSB3aG8gd2lsbCB0YWtlIGl0IG92ZXIuIE5vIHBlcnNvbiBoYW5kcyBvdXQgdGhlaXIgbW9uZXkgdG8gcGFzc2VyYnksIGJ1dCB0byBob3cgbWFueSBkbyBlYWNoIG9mIHVzIGhhbmQgb3V0IG91ciBsaXZlcyEgV2UncmUgdGlnaHQtZmlzdGVkIHdpdGggcHJvcGVydHkgYW5kIG1vbmV5LCB5ZXQgdGhpbmsgdG9vIGxpdHRsZSBvZiB3YXN0aW5nIHRpbWUsIHRoZSBvbmUgdGhpbmcgYWJvdXQgd2hpY2ggd2Ugc2hvdWxkIGFsbCBiZSB0aGUgdG91Z2hlc3QgbWlzZXJzLiIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJPbiB0aGUgQnJldml0eSBvZiBMaWZlLCAzLjEtMiINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5Ub2RheSB0aGVyZSB3aWxsIGJlIGVuZGxlc3MgaW50ZXJydXB0aW9uczogcGhvbmUgY2FsbHMsIGVtYWlscywgdmlzaXRvcnMsIHVuZXhwZWN0ZWQgZXZlbnRzLiBCb29rZXIgVC4gV2FzaGluZ3RvbiBvYnNlcnZlZCB0aGF0IDxxPnRoZSBudW1iZXIgb2YgcGVvcGxlIHdobyBzdGFuZCByZWFkeSB0byBjb25zdW1lIG9uZSdzIHRpbWUsIHRvIG5vIHB1cnBvc2UsIGlzIGFsbW9zdCBjb3VudGxlc3MuPC9xPjwvcD48cD5BIHBoaWxvc29waGVyLCBvbiB0aGUgb3RoZXIgaGFuZCwga25vd3MgdGhhdCB0aGVpciBkZWZhdWx0IHN0YXRlIHNob3VsZCBiZSBvbmUgb2YgcmVmbGVjdGlvbiBhbmQgaW5uZXIgYXdhcmVuZXNzLiBUaGlzIGlzIHdoeSB0aGV5IHNvIGRpbGlnZW50bHkgcHJvdGVjdCB0aGVpciBwZXJzb25hbCBzcGFjZSBhbmQgdGhvdWdodHMgZnJvbSB0aGUgaW50cnVzaW9ucyBvZiB0aGUgd29ybGQuIFRoZXkga25vdyB0aGF0IGEgZmV3IG1pbnV0ZXMgb2YgY29udGVtcGxhdGlvbiBhcmUgd29ydGggbW9yZSB0aGFuIGFueSBtZWV0aW5nIG9yIHJlcG9ydC4gVGhleSBhbHNvIGtub3cgaG93IGxpdHRsZSB0aW1lIHdlJ3JlIGFjdHVhbGx5IGdpdmVuIGluIGxpZmUmbWRhc2g7YW5kIGhvdyBxdWlja2x5IG91ciBzdG9yZXMgY2FuIGJlIGRlcGxldGVkLjwvcD48cD5TZW5lY2EgcmVtaW5kcyB1cyB0aGF0IHdoaWxlIHdlIG1pZ2h0IGJlIGdvb2QgYXQgcHJvdGVjdGluZyBvdXIgcGh5c2ljYWwgcHJvcGVydHksIHdlIGFyZSBmYXIgdG9vIGxheCBhdCBlbmZvcmNpbmcgb3VyIG1lbnRhbCBib3VuZGFyaWVzLiBQcm9wZXJ0eSBjYW4gYmUgcmVnYWluZWQ7IHRoZXJlIGlzIHF1aXRlIGEgYml0IG9mIGl0IG91dCB0aGVyZSZtZGFzaDtzb21lIG9mIGl0IHN0aWxsIHVudG91Y2hlZCBieSBtYW4uIEJ1dCB0aW1lPyBUaW1lIGlzIG91ciBtb3N0IGlycmVwbGFjZWFibGUgYXNzZXQmbWRhc2g7d2UgY2Fubm90IGJ1eSBtb3JlIG9mIGl0LiBXZSBjYW4gb25seSBzdHJpdmUgdG8gd2FzdGUgYXMgbGl0dGxlIGFzIHBvc3NpYmxlLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICI8YmxvY2txdW90ZT5HYXRoZXIgeWUgcm9zZWJ1ZHMgd2hpbGUgeWUgbWF5LDxiciAvPk9sZCBUaW1lIGlzIHN0aWxsIGEtZmx5aW5nOzxiciAvPkFuZCB0aGlzIHNhbWUgZmxvd2VyIHRoYXQgc21pbGVzIHRvZGF5PGJyIC8+VG8tbW9ycm93IHdpbGwgYmUgZHlpbmcuPGJyIC8+VGhlIGdsb3Jpb3VzIGxhbXAgb2YgaGVhdmVuLCB0aGUgc3VuLDxiciAvPlRoZSBoaWdoZXIgaGUncyBhLWdldHRpbmcsPGJyIC8+VGhlIHNvb25lciB3aWxsIGhpcyByYWNlIGJlIHJ1biw8YnIgLz5BbmQgbmVhcmVyIGhlJ3MgdG8gc2V0dGluZy48YnIgLz5UaGF0IGFnZSBpcyBiZXN0IHdoaWNoIGlzIHRoZSBmaXJzdCw8YnIgLz5XaGVuIHlvdXRoIGFuZCBibG9vZCBhcmUgd2FybWVyOzxiciAvPkJ1dCBiZWluZyBzcGVudCwgdGhlIHdvcnNlLCBhbmQgd29yc3Q8YnIgLz5UaW1lcyBzdGlsbCBzdWNjZWVkIHRoZSBmb3JtZXIuPGJyIC8+VGhlbiBiZSBub3QgY295LCBidXQgdXNlIHlvdXIgdGltZSw8YnIgLz5BbmQsIHdoaWxlIHllIG1heSwgZ28gbWFycnk6PGJyIC8+Rm9yIGhhdmluZyBsb3N0IGJ1dCBvbmNlIHlvdXIgcHJpbWUsPGJyIC8+WW91IG1heSBmb3JldmVyIHRhcnJ5LjxiciAvPjxiciAvPjxjaXRlPlRvIHRoZSBWaXJnaW5zLCB0byBNYWtlIE11Y2ggb2YgVGltZSwgUm9iZXJ0IEhlcnJpY2s8L2NpdGU+PC9ibG9ja3F1b3RlPiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkRlY2VtYmVyIDEwIiwNCiAgICAidG9waWMiOiAiRG9uJ3QgU2VsbCBZb3Vyc2VsZiBUb28gQ2hlYXBseSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkkgc2F5LCBsZXQgbm8gb25lIHJvYiBtZSBvZiBhIHNpbmdsZSBkYXkgd2hvIGlzbid0IGdvaW5nIHRvIG1ha2UgYSBmdWxsIHJldHVybiBvbiB0aGUgbG9zcy4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiT24gVHJhbnF1aWxpdHkgb2YgTWluZCwgMS4xMWIiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+UGVvcGxlIHNwZW5kIGEgbG90IG1vcmUgbW9uZXkgd2hlbiB0aGV5IHVzZSBjcmVkaXQgY2FyZHMgdGhhbiB3aGVuIHRoZXkgaGF2ZSB0byBwdWxsIG91dCBhY3R1YWwgY2FzaC4gSWYgeW91IGV2ZXIgd29uZGVyZWQgd2h5IGNyZWRpdCBjYXJkIGNvbXBhbmllcyBhbmQgYmFua3MgcHVzaCBjYXJkcyBzbyBhZ2dyZXNzaXZlbHksIHRoaXMgaXMgd2h5LiBUaGUgbW9yZSBjcmVkaXQgY2FyZHMgeW91IGhhdmUsIHRoZSBtb3JlIHlvdSdsbCBzcGVuZC48L3A+PHA+RG8gd2UgdHJlYXQgdGhlIGRheXMgb2Ygb3VyIGxpdmVzIGxpa2Ugd2UgdHJlYXQgb3VyIG1vbmV5PyBCZWNhdXNlIHdlIGRvbid0IGV4YWN0bHkga25vdyBob3cgbWFueSBkYXlzIHdlJ2xsIGJlIGFsaXZlLCBhbmQgYmVjYXVzZSB3ZSB0cnkgb3VyIGhhcmRlc3QgPGVtPm5vdDwvZW0+IHRvIHRoaW5rIGFib3V0IHRoZSBmYWN0IHRoYXQgc29tZWRheSB3ZSdsbCBkaWUsIHdlJ3JlIHByZXR0eSBsaWJlcmFsIHdpdGggaG93IGZyZWVseSB3ZSBzcGVuZCBvdXIgdGltZS4gV2UgbGV0IHBlb3BsZSBhbmQgb2JsaWdhdGlvbnMgaW1wb3NlIG9uIHRoYXQgdGltZSwgb25seSByYXJlbHkgYXNraW5nOiA8ZW0+V2hhdCBhbSBJIGdldHRpbmcgaW4gcmV0dXJuIGhlcmU/PC9lbT48L3A+PHA+U2VuZWNhJ3MgbWF4aW0gaXMgdGhlIGVxdWl2YWxlbnQgb2YgY3V0dGluZyB1cCB5b3VyIGNyZWRpdCBjYXJkcyBhbmQgc3dpdGNoaW5nIHRvIGNhc2guIEhlIHNheXMgdG8gcHV0IHJlYWwgdGhvdWdodCBpbnRvIGV2ZXJ5IHRyYW5zYWN0aW9uOiA8ZW0+QW0gSSBnZXR0aW5nIG15IG1vbmV5J3Mgd29ydGggaGVyZT8gSXMgdGhpcyBhIGZhaXIgdHJhZGU/PC9lbT48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMTEiLA0KICAgICJ0b3BpYyI6ICJEaWduaXR5IEFuZCBCcmF2ZXJ5IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiQXMgQ2ljZXJvIHNheXMsIHdlIGhhdGUgZ2xhZGlhdG9ycyBpZiB0aGV5IGFyZSBxdWljayB0byBzYXZlIHRoZWlyIGxpdmVzIGJ5IGFueSBtZWFuczsgd2UgZmF2b3IgdGhlbSBpZiB0aGV5IHNob3cgY29udGVtcHQgZm9yIHRoaXIgbGl2ZXMuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk9uIFRyYW5xdWlsaXR5IG9mIE1pbmQsIDExLjRiIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkx5bmRvbiBKb2huc29uJ3MgY29sbGVnZSBjbGFzc21hdGVzIHVzZWQgdG8gdGVsbCBhbiBlbWJhcnJhc3Npbmcgc3RvcnkgYWJvdXQgaGltLiBKb2huc29uIGFwcGFyZW50bHkgaGFkIGEgYmlnIG1vdXRoIGFuZCBmZWx0IGhlIGhhZCB0byBjb25zdGFudGx5IGRvbWluYXRlIGFuZCBpbnRpbWlkYXRlIG90aGVycy4gWWV0IGhpcyBiaW9ncmFwaGVyLCBSb2JlcnQgQ2FybyBtYWtlcyBpdCBjbGVhciB0aGF0IHdoZW4gc29tZW9uZSBzdG9vZCB1cCB0byB5b3VuZyBMeW5kb24sIGhlIHByb3ZlZCBoaW1zZWxmIHRvIGJlIGEgY29tcGxldGUgY293YXJkLiBJbiBvbmUgaW5zdGFuY2UsIGR1cmluZyBhbiBhcmd1bWVudCBvdmVyIGEgcG9rZXIgZ2FtZSwgaW5zdGVhZCBvZiBmaWdodGluZywgSm9obnNvbiB0aHJldyBoaW1zZWxmIG9uIGEgYmVkIGFuZCA8cT5iZWdhbiBraWNraW5nIGhpcyBmZWV0IGluIHRoZSBhaXIgd2l0aCBhIGZyYW50aWMsIHdpbmRtaWxsaW5nIG1vdGlvbi4gLiAubGlrZSBhIGdpcmwuPC9xPiBIZSBzaG91dGVkLCA8cT5JZiB5b3UgaGl0IG1lLCBJJ2xsIGtpY2sgeW91ISBJZiB5b3UgaGl0IG1lLCBJJ2xsIGtpY2sgeW91ITwvcT48L3A+PHA+TGF0ZXIgaW4gaGlzIGxpZmUsIEpvaG5zb24gYWxzbyB3b3JrZWQgZXh0cmVtZWx5IGhhcmQgdG8gYXZvaWQgc2VydmluZyBpbiBXb3JsZCBXYXIgSUkgYW5kIGxpdmVkIGl0IHVwIGluIENhbGlmb3JuaWEgd2hpbGUgb3RoZXIgc29sZGllcnMgZm91Z2h0IGFuZCBkaWVkIGFicm9hZC4gSGUgbGF0ZXIgY2xhaW1lZCB0byBiZSBhIHdhciBoZXJvLiBJdCB3YXMgb25lIG9mIGhpcyBtb3N0IHNoYW1lZnVsIGxpZXMuPC9wPjxwPldlIGRvIG5vdCBuZWVkIHRvIGRpc3JlZ2FyZCBvdXIgcGh5c2ljYWwgc2FmZXR5IG9yIGVuZ2FnZSBpbiB3YW50b24gYWN0cyBvZiB2aW9sZW5jZSB0byBiZSBicmF2ZS4gQnV0IG5vYm9keSByZXNwZWN0cyBhIGNvd2FyZC4gTm9ib2R5IGxpa2UgYSBzaGlya2VyIG9mIGR1dHkuIE5vYm9keSBhZG1pcmVzIGEgcGVyc29uIHdobyBwdXRzIHRvbyBoaWdoIGEgcHJpY2Ugb24gdGhlaXIgb3duIGNvbWZvcnQgYW5kIG5lZWRzLjwvcD48cD5UaGF0J3MgdGhlIGlyb255IG9mIGNvd2FyZGljZS4gSXQncyBhaW1lZCBhdCBzZWxmLXByb3RlY3Rpb24sIGJ1dCBpdCBjcmVhdGVzIHNoYW1lZnVsIHNlY3JldHMuIFNlbGYtcHJlc2VydmF0aW9uIGlzIGhhcmRseSB3b3J0aCBpdCBiZWNhdXNlIG9mIGV2ZXJ5dGhpbmcgaXQgY29zdHMgaW4gcmV0dXJuLjwvcD48cD5CZSBicmF2ZS4gQmUgZGlnbmlmaWVkLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciAxMiIsDQogICAgInRvcGljIjogIlRoZSBCZWF0IEdvZXMgT24iLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJXYWxrIHRoZSBsb25nIGdhbGxlcnkgb2YgdGhlIHBhc3QsIG9mIGVtcGlyZXMsIGFuZCBraW5nZG9tcyBzdWNjZWVkaW5nIGVhY2ggb3RoZXIgd2l0aG91dCBudW1iZXIuIEFuZCB5b3UgY2FuIGFsc28gc2VlIHRoZSBmdXR1cmUsIGZvciBzdXJlbHkgaXQgd2lsbCBiZSBleGFjdGx5IHRoZSBzYW1lLCB1bmFibGUgdG8gZGV2aWF0ZSBmcm9tIHRoZSBwcmVzZW50IHJoeXRobS4gSXQncyBhbGwgb25lIHdoZXRoZXIgd2UndmUgZXhwZXJpZW5jZWQgZm9ydHkgeWVhcnMgb3IgYW4gYWVvbi4gV2hhdCBtb3JlIGlzIHRoZXJlIHRvIHNlZT8iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDcuNDkiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+QWxsIHRoaW5ncyBkaWUuIE5vdCBqdXN0IHBlb3BsZSBidXQgY29tcGFuaWVzLCBraW5nZG9tcywgcmVsaWdpb25zLCBhbmQgaWRlYXMmbWRhc2g7ZXZlbnR1YWxseS4gVGhlIFJvbWFuIFJlcHVibGljIGxhc3RlZCA0NTAgeWVhcnMuIFRoZSBSb21hbiBFbXBpcmUsIG9mIHdoaWNoIE1hcmN1cyBBdXJlbGl1cyB3YXMgY29uc2lkZXJlZCB0byBiZSBvbmUgb2YgdGhlIDxxPmZpdmUgZ29vZCBlbXBlcm9ycyw8L3E+IGxhc3RlZCA1MDAgeWVhcnMuIFRoZSBsb25nZXN0IHJlY29yZGVkIGxpZmUgb2YgYSBodW1hbiBiZWluZyBpcyAxMjIgeWVhcnMuIFRoZSBhdmVyYWdlIGxpZmUgZXhwZWN0YW5jeSBpbiB0aGUgVW5pdGVkIFN0YXRlcyBpcyBhIGxpdHRsZSBvdmVyIHNldmVudHktZWlnaHQgeWVhcnMuIEluIG90aGVyIGNvdW50cmllcywgaW4gb3RoZXIgZXJhcywgaXQgaGFzIGJlZW4gbW9yZSBhbmQgaXQgaGFzIGJlZW4gbGVzcy4gQnV0IGluIHRoZSBlbmQgd2UgYWxsIHN1Y2N1bWIsIGFzIE1hcmN1cyBzYWlkLCB0byB0aGUgcmh5dGhtIG9mIGV2ZW50cyZtZGFzaDtvZiB3aGljaCB0aGVyZSBpcyBhbHdheXMgYSBmaW5hbCwgZGV0ZXJtaW5lZCBiZWF0LiBUaGVyZSBpcyBubyBuZWVkIHRvIGR3ZWxsIG9uIHRoaXMgZmFjdCwgYnV0IHRoZXJlIGlzIG5vIHBvaW50IGluIGlnbm9yaW5nIGl0IGVpdGhlci48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMTMiLA0KICAgICJ0b3BpYyI6ICJJdCdzIEp1c3QgQSBOdW1iZXIiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJZb3UgYXJlbid0JyBib3RoZXJlZCwgYXJlIHlvdSwgYmVjYXVzZSB5b3Ugd2VpZ2h0IGEgY2VydGFpbiBhbW91bnQgYW5kIG5vdCB0d2ljZSBhcyBtdWNoPyBTbyB3aHkgZ2V0IHdvcmtlZCB1cCB0aGF0IHlvdSd2ZSBiZWVuIGdpdmVuIGEgY2VydGFpbiBsaWZlc3BhbiBhbmQgbm90IG1vcmU/IEp1c3QgYXMgeW91IGFyZSBzYXRpc2ZpZWQgd2l0aCB5b3VyIG5vcm1hbCB3ZWlnaHQsIHNvIHlvdSBzaG91bGQgYmUgd2l0aCB0aGUgdGltZSB5b3UndmUgYmVlbiBnaXZlbi4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDYuNDkiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhleSBzYXkgYWdlIGlzIGp1c3QgYSBudW1iZXIsIGJ1dCB0byBzb21lIHBlb3BsZSBpdCdzIGEgdmVyeSBpbXBvcnRhbnQgb25lJm1kYXNob3RoZXJ3aXNlLCB3b21lbiB3b3VsZG4ndCBsaWUgYWJvdXQgYmVpbmcgeW91bmdlciwgYW5kIGFtYml0aW91cyB5b3VuZyBtZW4gd291bGQgbGlrZSBhYm91dCBiZWluZyBvbGRlci4gUmljaCBwZW9wbGUgYW5kIGhlYWx0aCBudXRzIHNwZW5kIGJpbGxpb25zIG9mIGRvbGxhcnMgaW4gYW4gZWZmb3J0IHRvIG1vdmUgdGhlaXIgZXhwaXJhdGlvbiBkYXRlIGZyb20gYXJvdW5kIHNldmVudHktZWlnaHQgeWVhcnMgdG8gaG9wZWZ1bGx5IDxlbT5mb3JldmVyPC9lbT4uPC9wPjxwPlRoZSBudW1iZXIgb2YgeWVhcnMgd2UgbWFuYWdlIHRvIGVrZSBvdXQgZG9lc24ndCBtYXR0ZXIsIG9ubHkgd2hhdCB0aG9zZSB5ZWFycyBhcmUgY29tcG9zZWQgb2YuIFNlbmVjYSBwdXQgaXQgYmVzdCB3aGVuIGhlIHNhaWQsIDxxPkxpZmUgaXMgbG9uZyBpZiB5b3Uga25vdyBob3cgdG8gdXNlIGl0LjwvcT4gU2FkbHksIG1vc3QgcGVvcGxlIGRvbid0Jm1kYXNodGhleSB3YXN0ZSB0aGUgbGlmZSB0aGV5J3ZlIGJlZW4gZ2l2ZW4uIE9ubHkgd2hlbiBpdCBpcyB0b28gbGF0ZSBkbyB0aGV5IHRyeSB0byBjb21wZW5zYXRlIGZvciB0aGF0IHdhc3RlIGJ5IHZhaW5seSBob3BpbmcgdG8gcHV0IG1vcmUgdGltZSBvbiB0aGUgY2xvY2suPC9wPjxwPlVzZSB0b2RheS4gVXNlIGV2ZXJ5IGRheS4gTWFrZSB5b3Vyc2VsZiBzYXRpc2ZpZWQgd2l0aCB3aGF0IHlvdSBoYXZlIGJlZW4gZ2l2ZW4uPC9wPiAiLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciAxNCIsDQogICAgInRvcGljIjogIldoYXQgV2UgU2hvdWxkIEtub3cgQnkgVGhlIEVuZCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlNvb24geW91IHdpbGwgZGllLCBhbmQgc3RpbGwgYXJlbid0IHNpbmNlcmUsIHVuZGlzdHVyYmVkLCBvciBmcmVlIGZyb20gc3VzcGljaW9uIHRoYXQgZXh0ZXJuYWwgdGhpbmdzIGNhbiBoYXJtIHlvdSwgbm9yIGFyZSB5b3UgZ3JhY2lvdXMgdG8gYWxsLCBrbm93aW5nIHRoYXQgd2lzZG9tIGFuZCBhY3RpbmcganVzdGx5IGFyZSBvbmUgYW5kIHRoZSBzYW1lLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgNC4zNyINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5Gcm9tIHdoYXQgd2UgdW5kZXJzdGFuZCwgTWFyY3VzIHdyb3RlIG1hbnkgb2YgaGlzIG1lZGl0YXRpb25zIGxhdGVyIGluIGxpZmUsIHdoZW4gd2Ugd2FzIHN1ZmZlcmluZyBmcm9tIHNlcmlvdXMgaWxsbmVzcy4gU28gd2hlbiBoZSBzYXlzLCA8cT5Tb29uIHlvdSB3aWxsIGRpZSw8L3E+IGhlIHdhcyBzcGVha2luZyBmcmFua2x5IHRvIGhpbXNlbGYgYWJvdXQgaGlzIG93biBtb3J0YWxpdHkuIEhvdyBzY2FyeSB0aGF0IG11c3QgaGF2ZSBiZWVuLiBIZSB3YXMgc3RhcmluZyBhdCB0aGUgcmVhbCBwb3NzaWJpbGl0eSBvZiBkZWF0aCBhbmQgbm90IGxpa2luZyB3aGF0IGhlIHNhdyBpbiB0aGVzZSBsYXN0IG1pbnV0ZXMuPC9wPjxwPlN1cmUsIGhlJ3MgYWNjb21wbGlzaGVkIG1hbnkgdGhpbmdzIGluIGhpcyBsaWZlLCBidXQgaGlzIGVtb3Rpb25zIHdlcmUgc3RpbGwgdGhlIGNhdXNlIG9mIGRpc2NvbWZvcnQsIHBhaW4sIGFuZCBmcnVzdHJhdGlvbi4gSGUga25ldyB0aGF0IHdpdGggaGlzIGxpbWl0ZWQgdGltZSBsZWZ0LCBiZXR0ZXIgY2hvaWNlcyB3b3VsZCBwcm92aWRlIHJlbGllZi48L3A+PHA+SG9wZWZ1bGx5LCB5b3UgaGF2ZSBhIGxvdCBtb3JlIHRpbWUgbGVmdCZtZGFzaDtidXQgdGhhdCBtYWtlcyBpdCBldmVuIG1vcmUgaW1wb3J0YW50IHRvIG1ha2UgaGVhZHdheSB3aGlsZSB5b3Ugc3RpbGwgY2FuLiBXZSBhcmUgdW5maW5pc2hlZCBwcm9kdWN0cyB1cCB1bnRpbCB0aGUgZW5kLCBhcyBNYXJjdXMga25ldyB2ZXJ5IHdlbGwuIEJ1dCB0aGUgZWFybGllciB3ZSBsZWFybiBpdCwgdGhlIG1vcmUgd2UgY2FuIGVuam95IHRoZSBmcnVpdHMgb2YgdGhlIGxhYm9yIG9uIG91ciBjaGFyYWN0ZXImbWRhc2g7YW5kIHRoZSBzb29uZXIgd2UgY2FuIGJlIGZyZWUgKG9yIDxlbT5mcmVlcjwvZW0+KSBvZiBpbnNpbmNlcml0eSwgYW54aWV0eSwgdW5ncmFjaW91c25lc3MsIGFuZCB1bi1TdG9pYy1uZXNzLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciAxNSIsDQogICAgInRvcGljIjogIkEgU2ltcGxlIFdheSBUbyBNZWFzdXJlIE91ciBEYXlzIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiVGhpcyBpcyB0aGUgbWFyayBvZiBwZXJmZWN0aW9uIG9mIGNoYXJhY3RlciZtZGFzaDt0byBzcGVuZCBlYWNoIGRheSBhcyBpZiBpdCB3ZXJlIHlvdXIgbGFzdCwgd2l0aG91dCBmcmVuenksIGxhemluZXNzLCBvciBhbnkgcHJldGVuZGluZy4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDcuNjkiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIFN0b2ljcyBkaWRuJ3QgdGhpbmsgdGhhdCBhbnlvbmUgY291bGQgYmUgcGVyZmVjdC4gVGhlIGlkZWEgb2YgYmVjb21pbmcgYSBzYWdlJm1kYXNoO3RoZSBoaWdoZXN0IGFzcGlyYXRpb24gb2YgYSBwaGlsb3NvcGhlciZtZGFzaDt3YXNuJ3QgcmVhbGlzdGljLiBUaGlzIHdhcyBqdXN0IHRoZWlyIFBsYXRvbmljIGlkZWFsLjwvcD48cD5TdGlsbCwgdGhleSBzdGFydGVkIGV2ZXJ5IGRheSBob3BpbmcgdG8gZ2V0IGEgbGl0dGxlIGNsb3NlciB0byB0aGF0IG1hcmsuIFRoZXJlIHdhcyBtdWNoIHRvIGdhaW4gaW4gdGhlIHRyeWluZy4gQ2FuIHlvdSBhY3R1YWxseSBsaXZlIHRvZGF5IGxpa2UgaXQgaXMgeW91ciBsYXN0IGRheT8gSXMgaXQgZXZlbiBwb3NzaWJsZSB0byBlbWJvZHkgY29tcGxldGVuZXNzIG9yIHBlcmZlY3Rpb24gaW4gb3VyIDxlbT5ldGhvczwvZW0+IChjaGFyYWN0ZXIpLCBlZmZvcnRsZXNzbHkgZG9pbmcgdGhlIHJpZ2h0IHRoaW5nIGZvciBhIGZ1bGwgdHdlbnR5LWZvdXIgaG91cnM/IElzIGl0IHBvc3NpYmxlIGZvciBtb3JlIHRoYW4gYSBtaW51dGU/PC9wPjxwPk1heWJlIG5vdC4gQnV0IGlmIHRyeWluZyB3YXMgZW5vdWdoIGZvciB0aGUgU3RvaWNzLCBpdCBzaG91bGQgYmUgZW5vdWdoIGZvciB1cyB0b28uPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkRlY2VtYmVyIDE2IiwNCiAgICAidG9waWMiOiAiRXZlcmxhc3RpbmcgR29vZCBIZWFsdGgiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJJIHRlbGwgeW91LCB5b3Ugb25seSBoYXZlIHRvIGxlYXJuIHRvIGxpdmUgbGlrZSB0aGUgaGVhbHRoeSBwZXJzb24gZG9lcyAuLi4gbGl2aW5nIHdpdGggY29tcGxldGUgY29uZmlkZW5jZS4gV2hhdCBjb25maWRlbmNlPyBUaGUgb25seSBvbmUgd29ydGggaG9sZGluZywgaW4gd2hhdCBpcyB0cnVzdHdvcnRoeSwgdW5oaW5kZXJlZCwgYW5kIGNhbid0IGJlIHRha2VuIGF3YXkmbWRhc2g7eW91ciBvd24gcmVhc29uZWQgY2hvaWNlLiIsDQogICAgICAgICJhdXRob3IiOiAiRXBpY3RldHVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJEaXNjb3Vyc2VzLCAzLjI2LjIzYi0yNCINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5BcyB0aGUgU3RvaWNzIHNheSByZXBlYXRlZGx5LCBpdCdzIGRhbmdlcm91cyB0byBoYXZlIGZhaXRoIGluIHdoYXQgeW91IGRvIG5vdCBjb250cm9sLiBCdXQgeW91ciBvd24gcmVhc29uZWQgY2hvaWNlPyBXZWxsLCBmb3Igbm93IHRoYXQgPGVtPmlzPC9lbT4gaW4geW91ciBjb250cm9sLiBUaGVyZWZvcmUgaXQgaXMgb25lIG9mIHRoZSBmZXcgdGhpbmdzIHlvdSBjYW4gaGF2ZSBjb25maWRlbmNlIGluLiBJdCdzIHRoZSBvbmx5IGFyZWEgb2YgaGVhbHRoIHRoYXQgY2FuJ3Qgc3VkZGVubHkgYmUgZ2l2ZW4gYSB0ZXJtaW5hbCBkaWFnbm9zaXMgKGV4Y2VwdCBmb3IgdGhlIG9uZSB3ZSBhbGwgZ2V0IHRoZSBkYXkgd2UncmUgYm9ybikuIEl0J3MgdGhlIG9ubHkgb25lIHRoYXQgcmVtYWlucyBwcmlzdGluZSBhbmQgbmV2ZXIgd2VhcnMgZG93biZtZGFzaDtpdCdzIG9ubHkgdGhlIHVzZXIgd2hvIHF1aXRzIGl0OyBuZXZlciB3aWxsIGl0IHF1aXQgdGhlIHVzZXIuPC9wPjxwPkluIHRoaXMgcGFzc2FnZSwgRXBpY3RldHVzIHBvaW50cyBvdXQgdGhhdCBzbGF2ZXMgYW5kIHdvcmtlcnMgYW5kIHBoaWxvc29waGVycyBhbGlrZSBjYW4gbGl2ZSB0aGlzIHdheS4gU29jcmF0ZXMsIERpb2dlbmVzLCBhbmQgQ2xlYW50aGVzIGxpdmVkIHRoaXMgd2F5Jm1kYXNoO2V2ZW4gd2hpbGUgdGhleSBoYWQgZmFtaWxpZXMgYW5kIHdoaWxlIHRoZXkgd2VyZSBzdHJ1Z2dsaW5nIHN0dWRlbnRzLjwvcD48cD5BbmQgc28gY2FuIHlvdS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMTciLA0KICAgICJ0b3BpYyI6ICJLbm93IFRoeXNlbGYmbWRhc2g7QmVmb3JlIEl0J3MgVG9vIExhdGUiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJEZWF0aCBsaWVzIGhlYXZ5IHVwb24gbWU8YnI+d2hvLCBrbm93biBleGNlZWRpbmdseSB3ZWxsIGJ5IGFsbCw8YnI+ZGllcyB1bmtub3duIHRvIGhpbXNlbGYuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIlRoeWVzdGVzLCA0MDAiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+U29tZSBvZiB0aGUgbW9zdCBwb3dlcmZ1bCBhbmQgaW1wb3J0YW50IHBlb3BsZSBpbiB0aGUgd29ybGQgc2VlbSB0byBoYXZlIGFsbW9zdCBubyBzZWxmLWF3YXJlbmVzcy4gQWx0aG91Z2ggdG90YWwgc3RyYW5nZXJzIGtub3cgZW5kbGVzcyBhbW91bnRzIG9mIHRyaXZpYSBhYm91dCB0aGVtLCBjZWxlYnJpdGllcyZtZGFzaDtiZWNhdXNlIHRoZXkgYXJlIHRvbyBidXN5IG9yIGJlY2F1c2UgaXQgaHVydHMgdG9vIG11Y2gmbWRhc2g7YXBwZWFyIHRvIGtub3cgdmVyeSBsaXR0bGUgYWJvdXQgdGhlbXNlbHZlcy48L3A+PHA+V2UgY2FuIGJlIGd1aWx0eSBvZiB0aGUgc2FtZSBzaW4uIFdlIGlnbm9yZSBTb2NyYXRlcydzIGRpY3R1bSB0byA8cT5rbm93IHRoeXNlbGY8L3E+Jm1kYXNoO29mdGVuIHJlYWxpemluZyB3ZSBoYXZlIGRvbmUgc28gYXQgb3VyIHBlcmlsLCB5ZWFycyBsYXRlciwgd2hlbiB3ZSB3YWtlIHVwIG9uZSBkYXkgYW5kIHJlYWxpemUgaG93IHJhcmVseSB3ZSBoYXZlIGFza2VkIG91cnNlbHZlcyBxdWVzdGlvbnMgbGlrZTogPGVtPldobyBhbSBJPyBXaGF0J3MgaW1wb3J0YW50IHRvIG1lPyBXaGF0IGRvIEkgbGlrZT8gV2hhdCBkbyBJIG5lZWQ/PC9lbT48L3A+PHA+Tm93Jm1kYXNoO3JpZ2h0IG5vdyZtZGFzaDt5b3UgaGF2ZSB0aGUgdGltZSB0byBleHBsb3JlIHlvdXJzZWxmLCB0byB1bmRlcnN0YW5kIHlvdXIgb3duIG1pbmQgYW5kIGJvZHkuIERvbid0IHdhaXQuIEtub3cgeW91cnNlbGYuIEJlZm9yZSBpdCdzIGltcG9zc2libHkgbGF0ZS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMTgiLA0KICAgICJ0b3BpYyI6ICJXaGF0IENvbWVzIFRvIFVzIEFsbCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkJvdGggQWxleGFuZGVyIHRoZSBHcmVhdCBhbmQgaGlzIG11bGUta2VlcGVyIHdlcmUgYm90aCBicm91Z2h0IHRvIHRoZSBzYW1lIHBsYWNlIGJ5IGRlYXRoJm1kYXNoO3RoZXkgd2VyZSBlaXRoZXIgcmVjZWl2ZWQgaW50byB0aGUgYWxsLWdlbmVyYXRpdmUgcmVhc29uLCBvciBzY2F0dGVyZWQgYW1vbmcgdGhlIGF0b21zLiIsDQogICAgICAgICJhdXRob3IiOiAiTWFyY3VzIEF1cmVsaXVzIiwNCiAgICAgICAgInNvdXJjZSI6ICJNZWRpdGF0aW9ucywgNi4yNCINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5JbiBhIHdvcmxkIHRoYXQgaXMgaW4gbWFueSB3YXlzIGJlY29taW5nIG1vcmUgYW5kIG1vcmUgdW5lcXVhbCwgdGhlcmUgYXJlbid0IG1hbnkgdHJ1bHkgZXF1YWxpdGFyaWFuIGV4cGVyaWVuY2VzIGxlZnQuIFdoZW4gQmVuamFtaW4gRnJhbmtsaW4gb2JzZXJ2ZWQgdGhhdCA8cT5pbiB0aGlzIHdvcmxkIG5vdGhpbmcgY2FuIGJlIHNhaWQgdG8gYmUgY2VydGFpbiwgZXhjZXB0IGRlYXRoIGFuZCB0YXhlcyw8L3E+IGhlIGNvdWxkbid0IGhhdmUga25vd24gaG93IGdvb2Qgc29tZSBwZW9wbGUgd291bGQgZ2V0IGF0IGF2b2lkaW5nIHRoZWlyIHRheGVzLiBCdXQgZGVhdGg/IFRoYXQncyBzdGlsbCB0aGUgb25lIHRoaW5nIHRoYXQgZXZlcnlvbmUgZXhwZXJpZW5jZXMuPC9wPjxwPldlIGFsbCBmYWNlIHRoZSBzYW1lIGVuZC4gV2hldGhlciB5b3UgY29ucXVlciB0aGUga25vd24gd29ybGQgb3Igc2hpbmUgdGhlIHNob2VzIG9mIHRoZSBwZW9wbGUgd2hvIGRvLCBhdCB0aGUgZW5kIGRlYXRoIHdpbGwgYmUgYSByYWRpY2FsIGVxdWFsaXplciZtZGFzaDthIGxlc3NvbiBpbiBhYmplY3QgaHVtaWxpdHkuIFNoYWtlc3BlYXJlIGhhZCBIYW1sZXQgdHJhY2Ugb3V0IHRoZSBsb2dpYyBpbiBzdGFyayB0ZXJtcyBmb3IgYm90aCBBbGV4YW5kZXIgYW5kIEp1bGl1cyBDZWFzYXI6PGJsb2NrcXVvdGU+SW1wZXJpb3VzIENlYXNhciwgZGVhZCBhbmQgdHVybidkIHRvIGNsYXksPGJyPk1pZ2h0IHN0b3AgYSBob2xlIHRvIGtlZXAgdGhlIHdpbmQgYXdheTo8YnI+TywgdGhhdCB0aGF0IGVhcnRoLCB3aGljaCBrZXB0IHRoZSB3b3JsZCBpbiBhd2UsPGJyPlNob3VsZCBwYXRjaCBhIHdhbGwgdG8gZXhwZWwgdGhlIHdpbnRlciBmbGF3ITwvYmxvY2txdW90ZT48L3A+PHA+VGhlIG5leHQgdGltZSB5b3UgZmVlbCB5b3Vyc2VsZiBnZXR0aW5nIGhpZ2ggYW5kIG1pZ2h0eSZtZGFzaDtvciBjb252ZXJzZWx5LCBmZWVsaW5nIGxvdyBhbmQgaW5mZXJpb3ImbWRhc2g7anVzdCByZW1lbWJlciwgd2UgYWxsIGVuZCB1cCB0aGUgc2FtZSB3YXkuIEluIGRlYXRoLCBubyBvbmUgaXMgYmV0dGVyLCBubyBvbmUgaXMgd29yc2UuIEFsbCBvdXIgc3RvcmllcyBoYXZlIHRoZSBzYW1lIGZpbmFsZS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMTkiLA0KICAgICJ0b3BpYyI6ICJIdW1hbiBTY2FsZSIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlRoaW5rIG9mIHRoZSB3aG9sZSB1bml2ZXJzZSBvZiBtYXR0ZXIgYW5kIGhvdyBzbWFsbCB5b3VyIHNoYXJlLiBUaGluayBhYm91dCB0aGUgZXhwYW5zZSBvZiB0aW1lIGFuZCBob3cgYnJpZWYmbWRhc2g7YWxtb3N0IG1vbWVudGFyeSZtZGFzaDt0aGUgcGFydCBtYXJrZWQgZm9yIHlvdS4gVGhpbmsgb2YgdGhlIHdvcmtpbmdzIG9mIGZhdGUgYW5kIGhvdyBpbmZpbml0ZXNpbWFsIHlvdXIgcm9sZS4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDUuMjQiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIGFtb3VudCBvZiBtYXR0ZXIgaW4gdGhlIHVuaXZlcnNlIGlzIGltbWVuc2UmbWRhc2g7b24gdGhlIG9yZGVyIG9mIHRyaWxsaW9ucyBvZiBhdG9tcy4gV2hhdCBwZXJjZW50YWdlIG9mIHRoYXQgbWF0dGVyIGRvZXMgb25lIGh1bWFuIGJvZHkgY29uc3RpdHV0ZT88L3A+PHA+VGhlIGVhcnRoLCBhcyBmYXIgYXMgc2NpZW5jZSB0ZWxscyB1cywgaXMgc29tZSA0LjUgYmlsbGlvbiB5ZWFycyBvbGQgYW5kIHNob3dzIG5vIHNpZ24gb2YgZW5kaW5nIHNvb24uIE91ciB0aW1lIG9uIHRoZSBlYXJ0aCwgb24gdGhlIG90aGVyIGhhbmQsIHdpbGwgYmUgd2hhdD8gU2V2ZXJhbCBkZWNhZGVzLCBtYXliZT88L3A+PHA+U29tZXRpbWUgd2UgbmVlZCB0byBoYXZlIHRoZSBmYWN0cyBhbmQgdGhlIGZpZ3VyZXMgc3BlbGxlZCBvdXQgaW4gZnJvbnQgb2YgdXMgdG8gZnVsbHkgcmVhbGl6ZSB0aGUgc2NhbGUgYXQgd2hpY2ggaHVtYW5zIGhhcHBlbiB0byBleGlzdCBpbiB0aGUgYmlnIHNjaGVtZSBvZiB0aGluZ3MuPC9wPjxwPkNvbnNpZGVyIHRoaXMgdGhlIG5leHQgdGltZSB5b3UgZmVlbCBzZWxmLWltcG9ydGFudCwgb3IgbGlrZSBldmVyeXRoaW5nIHJpc2VzIGFuZCBmYWxscyBvbiB3aGF0IHlvdSBkbyBuZXh0LiBJdCBkb2Vzbid0LiBZb3UncmUganVzdCBvbmUgcGVyc29uIGFtb25nIG1hbnksIGRvaW5nIHlvdXIgYmVzdCBhbW9uZyBtYW55LiBUaGF0J3MgYWxsIHlvdSBuZWVkIHRvIGRvLjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciAyMCIsDQogICAgInRvcGljIjogIkZlYXIgVGhlIEZlYXIgT2YgRGVhdGgiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJEbyB5b3UgcG9uZGVyIGhvdyB0aGUgc3VwcmVtZSBvZiBodW1hbiBldmlscywgdGhlIHN1cmVzdCBtYXJrIG9mIHRoZSBiYXNlIGFuZCBjb3dhcmRseSwgaXMgbm90IGRlYXRoLCBidXQgdGhlIGZlYXIgb2YgZGVhdGg/IEkgdXJnZSB5b3UgdG8gZGlzY2lwbGluZSB5b3Vyc2VsZiBhZ2FpbnN0IHN1Y2ggZmVhciwgZGlyZWN0IGFsbCB5b3VyIHRoaW5raW5nLCBleGVyY2lzZXMsIGFuZCByZWFkaW5nIHRoaXMgd2F5Jm1kYXNoO2FuZCB5b3Ugd2lsbCBrbm93IHRoZSBvbmx5IHBhdGggdG8gaHVtYW4gZnJlZWRvbS4iLA0KICAgICAgICAiYXV0aG9yIjogIkVwaWN0ZXR1cyIsDQogICAgICAgICJzb3VyY2UiOiAiRGlzY291cnNlcywgMy4yNi4zOC0zOSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UbyBzdGVlbCBoaW1zZWxmIGJlZm9yZSBoZSBjb21taXR0ZWQgc3VpY2lkZSByYXRoZXIgdGhhbiBzdWJtaXQgdG8gSnVsaXVzIENlYXNhcidzIGRlc3RydWN0aW9uIG9mIHRoZSBSb21hbiBSZXB1YmxpYywgdGhlIGdyZWF0IFN0b2ljIHBoaWxvc29waGVyIENhdG8gcmVhZCBhIGJpdCBvZiBQbGF0bydzIDxjaXRlPlBoYWVkbzwvY2l0ZT4uIEluIGl0LCBQbGF0byB3cml0ZXMsIDxxPkl0IGlzIHRoZSBjaGlsZCB3aXRoaW4gdXMgdGhhdCB0cmVtYmxlcyBiZWZvcmUgZGVhdGguPC9xPiBEZWF0aCBpcyBzY2FyeSBiZWNhdXNlIGl0IGlzIHN1Y2ggYW4gdW5rbm93bi4gTm8gb25lIGNhbiBjb21lIGJhY2sgYW5kIHRlbGwgdXMgd2hhdCBpdCBpcyBsaWtlLiBXZSBhcmUgaW4gdGhlIGRhcmsgYWJvdXQgaXQuPC9wPjxwPkFzIGNoaWxkbGlrZSBhbmQgdWx0aW1hdGVseSBpZ25vcmFudCBhcyB3ZSBhcmUgYWJvdXQgZGVhdGgsIHRoZXJlIGFyZSBwbGVudHkgb2Ygd2lzZSBtZW4gYW5kIHdvbWVuIHdobyBjYW4gYXQgbGVhc3QgcHJvdmlkZSBzb21lIGd1aWRhbmNlLiBUaGVyZSdzIGEgcmVhc29uIHRoYXQgdGhlIHdvcmxkJ3Mgb2xkZXN0IHBlb3BsZSBuZXZlciBzZWVtIHRvIGJlIGFmcmFpZCBvZiBkZWF0aDogdGhleSd2ZSBoYWQgbW9yZSB0aW1lIHRvIHRoaW5rIGFib3V0IGl0IHRoYW4gd2UgaGF2ZSAoYW5kIHRoZXkgcmVhbGl6ZWQgaG93IHBvaW50bGVzcyB3b3JyeWluZyB3YXMpLiBUaGVyZSBhcmUgb3RoZXIgd29uZGVyZnVsIHJlc291cmNlczogRmxvcmlkYSBTY290dC1NYXh3ZWxsJ3MgU3RvaWMgZGlhcnkgZHVyaW5nIGhlciB0ZXJtaW5hbCBpbGxuZXNzLCA8Y2l0ZT5UaGUgTWVhc3VyZSBvZiBNeSBEYXlzPC9jaXRlPiwgaXMgb25lLiBTZW5lY2EncyBmYW1vdXMgd29yZHMgdG8gaGlzIGZhbWlseSBhbmQgZnJpZW5kcywgd2hvIGhhZCBicm9rZW4gZG93biBhbmQgYmVnZ2VkIHdpdGggaGlzIGV4ZWN1dGlvbmVycywgaXMgYW5vdGhlci4gPHE+V2hlcmUsPC9xPiBTZW5lY2EgZ2VudGx5IGNoaWRlZCB0aGVtLCA8cT5hcmUgeW91ciBtYXhpbXMgb2YgcGhpbG9zb3BoeSwgb3IgdGhlIHByZXBhcmF0aW9uIG9mIHNvIG1hbnkgeWVhcnMnIHN0dWR5IGFnYWluc3QgZXZpbHMgdG8gY29tZT88L3E+IFRocm91Z2hvdXQgcGhpbG9zb3BoeSB0aGVyZSBhcmUgaW5zcGlyaW5nLCBicmF2ZSB3b3JkcyBmcm9tIGJyYXZlIG1lbiBhbmQgd29tZW4gd2hvIGNhbiBoZWxwIHVzIGZhY2UgdGhpcyBmZWFyLjwvcD48cD5UaGVyZSBpcyBhbm90aGVyIGhlbHBmdWwgY29uc2lkZXJhdGlvbiBhYm91dCBkZWF0aCBmcm9tIHRoZSBTdG9pY3MuIElmIGRlYXRoIGlzIHRydWx5IHRoZSBlbmQsIHRoZW4gd2hhdCBpcyB0aGVyZSBleGFjdGx5IHRvIGZlYXI/IEZvciBldmVyeXRoaW5nIGZyb20geW91ciBmZWFycyB0byB5b3VyIHBhaW4gcmVjZXB0b3JzIHRvIHlvdXIgd29ycmllcyBhbmQgeW91ciByZW1haW5pbmcgd2lzaGVzLCB0aGV5IHdpbGwgcGVyaXNoIHdpdGggeW91LiBBcyBmcmlnaHRlbmluZyBhcyBkZWF0aCBtaWdodCBzZWVtLCByZW1lbWJlcjogaXQgY29udGFpbnMgd2l0aGluIGl0IHRoZSBlbmQgb2YgZmVhci48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMjEiLA0KICAgICJ0b3BpYyI6ICJXaGF0IERvIFlvdSBIYXZlIFRvIFNob3cgRm9yIFlvdXIgWWVhcnM/IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiTWFueSB0aW1lcyBhbiBvbGQgbWFuIGhhcyBubyBvdGhlciBldmlkZW5jZSBiZXNpZGVzIGhpcyBhZ2UgdG8gcHJvdmUgaGUgaGFzIGxpdmVkIGEgbG9uZyB0aW1lLiIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJPbiBUcmFucXVpbGl0eSBPZiBNaW5kLCAzLjhiIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkhvdyBsb25nIGhhdmUgeW91IGJlZW4gYWxpdmU/IFRha2UgdGhlIHllYXJzLCBtdWx0aXBseSB0aGVtIGJ5IDM2NSwgYW5kIHRoZW4gYnkgMjQuIEhvdyBtYW55IGhvdXJzIGhhdmUgeW91IGxpdmVkPyBXaGF0IGRvIHlvdSBoYXZlIHRvIHNob3cgZm9yIGFsbCBvZiB0aGVtPzwvcD48cD5UaGUgYW5zd2VyIGZvciBtYW55IHBlb3BsZSBpczogbm90IGVub3VnaC4gV2UgaGFkIHNvIG1hbnkgaG91cnMgdGhhdCB3ZSB0b29rIHRoZW0gZm9yIGdyYW50ZWQuIEFsbCB3ZSBoYXZlIHRvIHNob3cgZm9yIG91ciB0aW1lIG9uIHRoaXMgcGxhbmV0IGFyZSByb3VuZHMgb2YgZ29sZiwgeWVhcnMgc3BlbnQgYXQgdGhlIG9mZmljZSwgdGltZSBzcGVudCB3YXRjaGluZyBtZWRpb2NyZSBtb3ZpZXMsIGEgc3RhY2sgb2YgbWluZGxlc3MgYm9va3Mgd2UgaGFyZGx5IHJlbWVtYmVyIHJlYWRpbmcsIGFuZCBtYXliZSBhIGdhcmFnZSBmdWxsIG9mIHRveXMuIFdlJ3JlIGxpa2UgdGhlIGNoYXJhY3RlciBpbiBSYXltb25kIENoYW5kbGVyJ3MgPGNpdGU+VGhlIExvbmcgR29vZGJ5ZTo8L2NpdGU+IDxxPk1vc3RseSwgSSBqdXN0IGtpbGwgdGltZSw8L3E+IGhlIHNheXMsIDxxPmFuZCBpdCBkaWVzIGhhcmQuPC9xPjwvcD48cD5PbmUgZGF5LCBvdXIgaG91cnMgd2lsbCBiZWdpbiB0byBydW4gb3V0LiBJdCB3b3VsZCBiZSBuaWNlIHRvIGJlIGFibGUgdG8gc2F5OiA8cT5IZXksIEkgcmVhbGx5IG1hZGUgdGhlIG1vc3Qgb2YgaXQuPC9xPiBOb3QgaW4gdGhlIGZvcm0gb2YgYWNoaWV2ZW1lbnRzLCBub3QgbW9uZXksIG5vdCBzdGF0dXMmbWRhc2g7eW91IGtub3cgd2hhdCB0aGUgU3RvaWNzIHRoaW5rIG9mIGFsbCB0aGF0Jm1kYXNoO2J1dCBpbiB3aXNkb20sIGluc2lnaHQsIGFuZCByZWFsIHByb2dyZXNzIGluIHRoZSB0aGluZ3MgdGhhdCBhbGwgaHVtYW5zIHN0cnVnZ2xlIGFnYWluc3QuPC9wPjxwPldoYXQgaWYgeW91IGNvdWxkIHNheSB0aGF0IHlvdSByZWFsbHkgbWFkZSBzb21ldGhpbmcgb2YgdGhpcyB0aW1lIHRoYXQgeW91IGhhZD8gV2hhdCBpZiB5b3UgY291bGQgcHJvdmUgdGhhdCB5b3UgcmVhbGx5IGRpZCBsaXZlIFtpbnNlcnQgbnVtYmVyXSB5ZWFycz8gQW5kIG5vdCBqdXN0IGxpdmVkIHRoZW0sIGJ1dCBsaXZlZCB0aGVtIDxlbT5mdWxseTwvZW0+LjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciAyMiIsDQogICAgInRvcGljIjogIlN0YWtlIFlvdXIgT3duIENsYWltIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiRm9yIGl0J3MgZGlzZ3JhY2VmdWwgZm9yIGFuIG9sZCBwZXJzb24sIG9yIG9uZSBpbiBzaWdodCBvZiBvbGQgYWdlLCB0byBoYXZlIG9ubHkgdGhlIGtub3dsZWRnZSBjYXJyaWVkIGluIHRoZWlyIG5vdGVib29rcy4gWmVubyBzYWlkIHRoaXMgLiAuIC4gd2hhdCBkbyB5b3Ugc2F5PyBDbGVhbnRoZXMgc2FpZCB0aGF0IC4gLiAuIHdoYXQgZG8geW91IHNheT8gSG93IGxvbmcgd2lsbCB5b3UgYmUgY29tcGVsbGVkIGJ5IHRoZSBjbGFpbXMgb2YgYW5vdGhlcj8gVGFrZSBjaGFyZ2UgYW5kIHN0YWtlIHlvdXIgb3duIGNsYWltJm1kYXNoO3NvbWV0aGluZyBwb3N0ZXJpdHkgd2lsbCBjYXJyeSBpbiBpdHMgbm90ZWJvb2suIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk1vcmFsIExldHRlcnMsIDMzLjciDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+TXVzaW5nIGluIGhpcyBub3RlYm9vayBhYm91dCB0aGUgdG9waWMgb2YgaW1tb3J0YWxpdHksIFJhbHBoIFdhbGRvIEVtZXJzb24gY29tcGxhaW5lZCBob3cgd3JpdGVycyBkYW5jZSBhcm91bmQgYSBkaWZmaWN1bHQgdG9waWMgYnkgcmVseWluZyBvbiBxdW90ZXMuIDxxPkkgaGF0ZSBxdW90YXRpb248L3E+LCBoZSB3cm90ZS4gPHE+VGVsbCBtZSB3aGF0IHlvdSBrbm93LjwvcT48L3A+PHA+U2VuZWNhIHdhcyB0aHJvd2luZyBkb3duIHRoZSBzYW1lIGdhdW50bGV0IHNvbWUgdHdlbnR5IGNlbnR1cmllcyBiZWZvcmUuIEl0J3MgZWFzaWVyIHRvIHF1b3RlLCB0byByZWx5IG9uIHRoZSB3aXNlIHdvcmRzIG9mIG90aGVycy4gRXNwZWNpYWxseSB3aGVuIHRoZSBwZW9wbGUgeW91J3JlIGRlZmVycmluZyB0byBhcmUgc3VjaCB0b3dlcmluZyBmaWd1cmVzLjwvcD48cD5JdCdzIGhhcmRlciAoYW5kIG1vcmUgaW50aW1pZGF0aW5nKSB0byB2ZW50dXJlIG91dCBvbiB5b3VyIG93biBhbmQgZXhwcmVzcyB5b3VyIG93biB0aG91Z2h0cy4gQnV0IGhvdyBkbyB5b3UgdGhpbmsgdGhvc2Ugd2lzZSBhbmQgdHJ1ZSBxdW90ZXMgZnJvbSB0aG9zZSB0b3dlcmluZyBmaWd1cmVzIHdlcmUgY3JlYXRlZCBpbiB0aGUgZmlyc3QgcGxhY2U/PC9wPjxwPllvdXIgb3duIGV4cGVyaWVuY2VzIGhhdmUgdmFsdWUuIFlvdSBoYXZlIGFjY3VtdWxhdGVkIHlvdXIgb3duIHdpc2RvbSB0b28uIFN0YWtlIHlvdXIgY2xhaW0uIFB1dCBzb21ldGhpbmcgZG93biBmb3IgdGhlIGFnZXMmbWRhc2g7aW4gd29yZHMgYW5kIGFsc28gaW4gZXhhbXBsZS48L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMjMiLA0KICAgICJ0b3BpYyI6ICJXaGF0IEFyZSBZb3UgU28gQWZyYWlkIE9mIExvc2luZz8iLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJZb3UgYXJlIGFmcmFpZCBvZiBkeWluZy4gQnV0LCBjb21lIG5vdywgaG93IGlzIHRoaXMgbGlmZSBvciB5b3VycyBhbnl0aGluZyBidXQgZGVhdGguIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk1vcmFsIExldHRlcnMsIDc3LjE4Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlNlbmVjYSB0ZWxscyBhbiBhbWF6aW5nIHN0b3J5IGFib3V0IGFuIG9ic2NlbmVseSB3ZWFsdGh5IFJvbWFuIHdobyB3YXMgY2FycmllZCBhcm91bmQgYnkgc2xhdmVzIG9uIGEgbGl0dGVyLiBPbiBvbmUgb2NjYXNpb24sIGFmdGVyIGJlaW5nIGxpZnRlZCBvdXQgb2YgYSBiYXRoLCB0aGUgcm9tYW4gYXNrZWQsIDxxPkFtIEkgc2l0dGluZyBkb3duIHlldD88L3E+IFNlbmVjYSdzIHBvaW50IHdhcyBlc3NlbnRpYWxseTogV2hhdCBraW5kIG9mIHNhZCBwYXRoZXRpYyBsaWZlIGlzIGl0IGlmIHlvdSdyZSBzbyBkaXNjb25uZWN0ZWQgZnJvbSB0aGUgd29ybGQgdGhhdCB5b3UgZG9uJ3QgZXZlbiBrbm93IHdoZXRoZXIgeW91J3JlIG9uIHRoZSBncm91bmQ/IEhvdyBkaWQgdGhlIG1hbiBrbm93IHdoZXRoZXIgaGUgd2FzIGV2ZW4gPGVtPmFsaXZlPC9lbT4gYXQgYWxsPzwvcD48cD5Nb3N0IG9mIHVzIGFyZSBhZnJhaWQgb2YgZHlpbmcuIEJ1dCBzb21ldGltZXMgdGhpcyBmZWFyIGJlZ3MgdGhlIHF1ZXN0aW9uOiBUbyBwcm90ZWN0IHdoYXQgZXhhY3RseT8gRm9yIGEgbG90IG9mIHBlb3BsZSB0aGUgYW5zd2VyIGlzOiBob3VycyBvZiB0ZWxldmlzaW9uLCBnb3NzaXBpbmcsIGdvcmdpbmcsIHdhc3RpbmcgcG90ZW50aWFsLCByZXBvcnRpbmcgdG8gYSBib3Jpbmcgam9iLCBhbmQgb24gYW5kIG9uIGFuZCBvbi4gRXhjZXB0LCBpbiB0aGUgc3RyaWN0ZXN0IHNlbnNlLCBpcyB0aGlzIGFjdHVhbGx5IGEgbGlmZT8gSXMgdGhpcyB3b3J0aCBncmlwcGluZyBzbyB0aWdodGx5IGFuZCBiZWluZyBhZnJhaWQgb2YgbG9zaW5nPzwvcD48cD5JdCBkb2Vzbid0IHNvdW5kIGxpa2UgaXQuPC9wPiIsDQogICAgInRob3VnaHRzIjogIlRoZSBzYW1lIGNhbiBiZSBzYWlkIGZvciBpbGwgdGhvdWdodHMgYW5kIGZlZWxpbmcgdG93YXJkcyBjaXJjdW1zdGFuY2VzIGFuZCBwZW9wbGUgVGhleSBhcmUgbm90IHdvcnRoeSBvZiBteSB0aW1lLiBUaGV5IGFyZSBub3Qgd29ydGh5IHRvIG9jY3VweSBteSBtaW5kIGFuZCBoZWFydC4iDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciAyNCIsDQogICAgInRvcGljIjogIk1lYW5pbmdsZXNzIC4uLiBMaWtlIEEgRmluZSBXaW5lIiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiWW91IGtub3cgd2hhdCB3aW5lIGFuZCBsaXF1ZXVyIHRhc3RlcyBsaWtlLiBJdCBtYWtlcyBubyBkaWZmZXJlbmNlIHdoZXRoZXIgYSBodW5kcmVkIG9yIGEgdGhvdXNhbmQgYm90dGxlcyBwYXNzIHRocm91Z2ggeW91ciBibGFkZGVyJm1kYXNoO3lvdSBhcmUgbm90aGluZyBtb3JlIHRoYW4gYSBmaWx0ZXIuIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIk1vcmFsIExldHRlcnMsIDc3LjE2Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkhlcmUgd2UgaGF2ZSBhbm90aGVyIGNvbnRlbXB0dW91cyBleHByZXNzaW9uLCB0aGlzIHRpbWUgZnJvbSBTZW5lY2EsIHdobywgZ2l2ZW4gaGlzIHJlcHV0YXRpb24gZm9yIG9wdWxlbmNlLCBwcm9iYWJseSBlbmpveWVkIGEgbmljZSBkcmluayBmcm9tIHRpbWUgdG8gdGltZS4gSGlzIHBvaW50IHdpbGwgcHJvYmFibHkgcmF0dGxlIGFueW9uZSBmb3Igd2hvbSBzdWNjZXNzIGFuZCBhZHVsdGhvb2QgaGFzIHR1cm5lZCB0aGVtIGludG8gYSB3aW5lIHNub2IgKHRob3VnaCB0aGUgbG9naWMgY2FuIGJlIGFwcGxpZWQganVzdCBhcyBlYXNpbHkgdG8gZm9vZGllcywgdGVjaGllcywgYXVkaW9waGlsZXMsIGFuZCB0aGUgbGlrZSkuPC9wPjxwPkFzIGZ1biBhbmQgZXhjaXRpbmcgYW5kIHBsZWFzdXJhYmxlIGFzIHRoZXNlIHBsZWFzdXJlcyBhcmUsIGl0J3Mgd29ydGggcHV0dGluZyB0aGVtIGluIHRoZWlyIHBsYWNlLiBZb3UgZG9uJ3QgZ2V0IGEgcHJpemUgYXQgdGhlIGVuZCBvZiB5b3VyIGxpZmUgZm9yIGhhdmluZyBjb25zdW1lZCBtb3JlLCB3b3JrZWQgbW9yZSwgc3BlbnQgbW9yZSwgY29sbGVjdGVkIG1vcmUsIG9yIGxlYXJuZWQgbW9yZSBhYm91dCB0aGUgdmFyaW91cyB2aW50YWdlcyB0aGFuIGV2ZXJ5b25lIGVsc2UuIFlvdSBhcmUganVzdCBhIGNvbmR1aXQsIGEgdmVzc2VsIHRoYXQgdGVtcG9yYXJpbHkgaGVsZCBvciBpbnRlcmFjdGVkIHdpdGggdGhlc2UgZmFuY3kgaXRlbXMuPC9wPjxwPklmIHlvdSBmaW5kIHlvdXJzZWxmIGx1c3Rpbmcgb3ZlciB0aGVtLCB0aGlzIG1lZGl0YXRpb24gbWlnaHQgaGVscCByZWR1Y2UgdGhlaXIgbHVzdGVyIGp1c3QgYSBzbWlkZ2UuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkRlY2VtYmVyIDI1IiwNCiAgICAidG9waWMiOiAiRG9uJ3QgQnVybiBUaGUgQ2FuZGxlIEF0IEJvdGggRW5kcyIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIlRoZSBtaW5kIG11c3QgYmUgZ2l2ZW4gcmVsYXhhdGlvbiZtZGFzaDtpdCB3aWxsIHJpc2UgaW1wcm92ZWQgYW5kIHNoYXJwZXIgYWZ0ZXIgYSBnb29kIGJyZWFrLiBKdXN0IGFzIHJpY2ggZmllbGRzIG11c3Qgbm90IGJlIGZvcmNlZCZtZGFzaDtmb3IgdGhleSB3aWxsIHF1aWNrbHkgbG9zZSB0aGVpciBmZXJ0aWxpdHkgaWYgbmV2ZXIgZ2l2ZW4gYSBicmVhayZtZGFzaDtzbyBjb25zdGFudCB3b3JrIG9uIHRoZSBhbnZpbCB3aWxsIGZyYWN0dXJlIHRoZSBmb3JjZSBvZiB0aGUgbWluZC4gQnV0IGl0IHJlZ2FpbnMgaXRzIHBvd2VycyBpZiBpdCBpcyBzZXQgZnJlZSBhbmQgcmVsYXhlZCBmb3IgYSB3aGlsZS4gQ29uc3RhbnQgd29yayBnaXZlcyByaXNlIHRvIGEgY2VydGFpbiBraW5kIG9mIGR1bGxuZXNzIGFuZCBmZWVibGVuZXNzIGluIHRoZSByYXRpb25hbCBzb3VsLiIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJPbiBUcmFucXVpbGl0eSBPZiBNaW5kLCAxNy41Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPk9uZSBjYW4ndCByZWFkIE1hcmN1cyBBdXJlbGl1cyBhbmQgU2VuZWNhIGFuZCBub3QgYmUgc3RydWNrIGJ5IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlc2UgdHdvIHJhZGljYWxseSBkaWZmZXJlbnQgcGVyc29uYWxpdGllcy4gRWFjaCBoYWQgaGlzIG93biBzdHJlbmd0aHMgYW5kIHdlYWtuZXNzZXMuIFdoaWNoIHdvdWxkIHlvdSByYXRoZXIgaGF2ZSBlbnRydXN0ZWQgd2l0aCB0aGUgaW1tZW5zZSByZXNwb25zaWJpbGl0eSBvZiBhbiBlbXBpcmU/IFByb2JhYmx5IE1hcmN1cy4gQnV0IHdobyB3b3VsZCB5b3UgcmF0aGVyIGJlIGFzIGEgcGVyc29uPyBQcm9iYWJseSBTZW5lY2EuPC9wPjxwPk9uZSBvZiB0aGUgcmVhc29ucyBpcyB0aGF0IFNlbmVjYSBzZWVtcyB0byBoYXZlIGhhZCB3aGF0IHdlIHdvdWxkIG5vdyByZWZlciB0byBhcyB3b3JrL2xpZmUgYmFsYW5jZS4gV2hlcmVhcyBNYXJjdXMgY2FuIHJlYWQgYXMgdGhvdWdoIGhlJ3Mgd29ybiBkb3duIGFuZCB0aXJlZCwgU2VuZWNhIGFsd2F5cyBmZWVscyBlbmVyZ2V0aWMsIGZyZXNoLCByb2J1c3QuIEhpcyBwaGlsb3NvcGh5IG9mIHJlc3QgYW5kIHJlYWxpemF0aW9uJm1kYXNoO2ludGVybWl4ZWQgd2l0aCBoaXMgcmlnb3JvdXMgc3R1ZHkgYW5kIG90aGVyIFN0b2ljIHJpdHVhbHMmbWRhc2g7cHJvYmFibHkgaGFkIGEgbG90IHRvIGRvIHdpdGggaXQuPC9wPjxwPlRoZSBtaW5kIGlzIGEgbXVzY2xlLCBhbmQgbGlrZSB0aGUgcmVzdCwgaXQgY2FuIGJlIHN0cmFpbmVkLCBvdmVyd29ya2VkLCBldmVuIGluanVyZWQuIE91ciBwaHlzaWNhbCBoZWFsdGggaXMgYWxzbyB3b3JuIGRvd24gYnkgb3Zlci1jb21taXRtZW50LCBhIGxhY2sgb2YgcmVzdCwgYW5kIGJhZCBoYWJpdHMuIFJlbWVtYmVyIHRoZSB0YWxsIHRhbGUgYWJvdXQgSm9obiBIZW5yeSZtZGFzaDt0aGUgbWFuIHdobyBjaGFsbGVuZ2VkIHRoZSBtYWNoaW5lPyBIZSBkaWVkIG9mIGV4aGF1c3Rpb24gYXQgdGhlIGVuZC4gRG9uJ3QgZm9yZ2V0IHRoYXQuPC9wPjxwPlRvZGF5LCB5b3UgbWF5IGZhY2UgdGhpbmdzIHRoYXQgdHJ5IHlvdXIgcGF0aWVuY2UsIHJlcXVpcmUgY29uc2lkZXJhYmxlIGZvY3VzIG9yIGNsYXJpdHksIG9yIGRlbWFuZCBjcmVhdGl2ZSBicmVha3Rocm91Z2hzLiBMaWZlIGlzIGEgbG9uZyBoYXVsJm1kYXNoO2l0IHdpbGwgbWVhbiBtYW55IHN1Y2ggbW9tZW50cy4gQXJlIHlvdSBnb2luZyB0byBiZSBhYmxlIHRvIGhhbmRsZSB0aGVtIGlmIHlvdSd2ZSBidXJuZWQgdGhlIGNhbmRsZSBhdCBib3RoIGVuZHM/IElmIHlvdSd2ZSBiZWVuIGFidXNpbmcgYW5kIG92ZXJ3b3JraW5nIHlvdXIgYm9keT88L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMjYiLA0KICAgICJ0b3BpYyI6ICJMaWZlIElzIExvbmcmbWRhc2g7SWYgWW91IEtub3cgSG93IFRvIFVzZSBJdCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkl0J3Mgbm90IGF0IGFsbCB0aGF0IHdlIGhhdmUgdG9vIHNob3J0IGEgdGltZSB0byBsaXZlLCBidXQgdGhhdCB3ZSBzcXVhbmRlciBhIGdyZWF0IGRlYWwgb2YgaXQuIExpZmUgaXMgbG9uZyBlbm91Z2gsIGFuZCBpdCdzIGdpdmVuIGluIHN1ZmZpY2llbnQgbWVhc3VyZSB0byBkbyBtYW55IGdyZWF0IHRoaW5ncyBpZiB3ZSBzcGVuZCBpdCB3ZWxsLiBCdXQgd2hlbiBpdCdzIHBvdXJlZCBkb3duIHRoZSBkcmFpbiBvZiBsdXh1cnkgYW5kIG5lZ2xlY3QsIHdoZW4gaXQncyBlbXBsb3llZCB0byBubyBnb29kIGVuZCwgd2UncmUgZmluYWxseSBkcml2ZW4gdG8gc2VlIHRoYXQgaXQgaGFzIHBhc3NlZCBieSBiZWZvcmUgd2UgZXZlbiByZWNvZ25pemVkIGl0IHBhc3NpbmcuIEFuZCBzbyBpdCBpcyZtZGFzaDt3ZSBkb24ndCByZWNlaXZlIGEgc2hvcnQgbGlmZSwgd2UgbWFrZSBpdCBzby4iLA0KICAgICAgICAiYXV0aG9yIjogIlNlbmVjYSIsDQogICAgICAgICJzb3VyY2UiOiAiT24gVGhlIEJyZXZpdHkgT2YgTGlmZSwgMS4zLTRhIg0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPk5vIG9uZSBrbm93cyBob3cgbG9uZyB0aGV5IGhhdmUgdG8gbGl2ZSwgYnV0IHNhZGx5LCB3ZSBjYW4gYmUgc3VyZSBvZiBvbmUgdGhpbmc6IHdlJ2xsIHdhc3RlIGZhciB0b28gbXVjaCBvZiBsaWZlLiBXYXN0aW5nIGl0IHNpdHRpbmcgYXJvdW5kLCB3YXN0ZSBpdCBjaGFzaW5nIHRoZSB3cm9uZyB0aGluZ3MsIHdhc3RlIGl0IGJ5IHJlZnVzaW5nIHRvIHRha2UgdGhlIHRpbWUgdG8gYXNrIG91cnNlbHZlcyB3aGF0J3MgYWN0dWFsbHkgaW1wb3J0YW50IHRvIHVzLiBGYXIgdG9vIG9mdGVuLCB3ZSdyZSBsaWtlIHRoZSBvdmVyY29uZmlkZW50IGFjYWRlbWljcyB0aGF0IFBldHJhcmNoIGNyaXRpY2l6ZWQgaW4gaGlzIGNsYXNzaWMgZXNzYXkgb24gaWdub3JhbmNlJm1kYXNoO3RoZSB0eXBlcyB3aG8gPHE+ZnJpdHRlciBhd2F5IHRoZWlyIHBvd2VycyBpbmNlc3NhbnRseSBpbiBjYXJpbmcgZm9yIHRoaW5ncyBvdXRzaWRlIG9mIHRoZW0gYW5kIHNlZWsgdGhlbXNlbHZlcyB0aGVyZS48L3E+IHlldCB0aGV5IGhhdmUgbm8gaWRlYSB0aGlzIGlzIHdoYXQgdGhleSdyZSBkb2luZy48L3A+PHA+U28gdG9kYXksIGlmIHlvdSBmaW5kIHlvdXJzZWxmIHJ1c2hlZCBvciB1dHRlcmluZyB0aGUgd29yZHMsIDxxPkkganVzdCBkb24ndCBoYXZlIGVub3VnaCB0aW1lLDwvcT4gc3RvcCBhbmQgdGFrZSBhIHNlY29uZC4gSXMgdGhpcyBhY3R1YWxseSB0cnVlPyBPciBoYXZlIHlvdSBqdXN0IGNvbW1pdHRlZCB0byBhIGxvdCBvZiB1bm5lY2Vzc2FyeSB0aGluZ3M/IEFyZSB5b3UgYWN0dWFsbHkgYmVpbmcgZWZmaWNpZW50LCBvciBoYXZlIHlvdSBhc3N1bWVkIGEgZ3JlYXQgZGVhbCBvZiB3YXN0ZSBpbnRvIHlvdXIgbGlmZT8gVGhlIGF2ZXJhZ2UgQW1lcmljYW4gc3BlbmRzIHNvbWV0aGluZyBsaWtlIGZvcnR5IGhvdXJzIGEgeWVhciBpbiB0cmFmZmljLiBUaGF0J3MgPGVtPm1vbnRoczwvZW0+IG92ZXIgdGhlIGNvdXJzZSBvZiBhIGxpZmUuIEFuZCBmb3IgPHE+dHJhZmZpYyw8L3E+IHlvdSBjYW4gc3Vic3RpdHV0ZSBzbyBtYW55IGFjdGl2aXRpZXMmbWRhc2g7ZnJvbSBmaWdodGluZyB3aXRoIG90aGVycyB0byB3YXRjaGluZyB0ZWxldmlzaW9uIHRvIGRheWRyZWFtaW5nLjwvcD48cD5Zb3VyIGxpZmUgaXMgcGxlbnR5IGxvbmcmbWRhc2g7anVzdCB1c2UgaXQgcHJvcGVybHkuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkRlY2VtYmVyIDI3IiwNCiAgICAidG9waWMiOiAiRG9uJ3QgTGV0IFlvdXIgU291bCBHbyBGaXJzdCIsDQogICAgInF1b3RlcyI6IFsNCiAgICAgIHsNCiAgICAgICAgInF1b3RlIjogIkl0J3MgYSBkaXNncmFjZSBpbiB0aGlzIGxpZmUgd2hlbiB0aGUgc291bCBzdXJyZW5kZXJzIGZpcnN0IHdoaWxlIHRoZSBib2R5IHJlZnVzZXMgdG8uIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCA2LjI5Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPkRlc3BpdGUgaGlzIHByaXZpbGVnZXMsIE1hcmN1cyBBdXJlbGl1cyBoYWQgYSBkaWZmaWN1bHQgbGlmZS4gVGhlIFJvbWFuIGhpc3RvcmlhbiBDYXNzaXVzIERpbyBtdXNlZCB0aGF0IE1hcmN1cyA8cT5kaWQgbm90IG1lZXQgd2l0aCB0aGUgZ29vZCBmb3J0dW5lIHRoYXQgaGUgZGVzZXJ2ZWQsIGZvciBoZSB3YXMgbm90IHN0cm9uZyBpbiBib2R5IGFuZCB3YXMgaW52b2x2ZWQgaW4gYSBtdWx0aXR1ZGUgb2YgdHJvdWJsZXMgdGhyb3VnaG91dCBwcmFjdGljYWxseSBoaXMgZW50aXJlIHJlaWduLjwvcT4gQXQgb25lIHBvaW50LCBoZSB3YXMgc28gc2ljayB0aGF0IGEgcnVtb3Igc3ByZWFkIHRoYXQgaGUgaGFkIGRpZWQmbWRhc2g7YW5kIG1hdHRlcnMgd2VyZSBtYWRlIHdvcnNlIHdoZW4gaGlzIG1vc3QgdHJ1c3RlZCBnZW5lcmFsIHVzZWQgaXQgYXMgYW4gb3Bwb3J0dW5pdHkgdG8gZGVjbGFyZSBoaW1zZWxmIHRoZSBuZXcgZW1wZXJvci48L3A+PHA+QnV0IHRocm91Z2hvdXQgdGhlc2Ugc3RydWdnbGVzJm1kYXNoO3RoZSB5ZWFycyBhdCB3YXIsIHRoZSBjcmlwcGxpbmcgaWxsbmVzc2VzLCBoaXMgdHJvdWJsZWQgc29uJm1kYXNoO2hlIG5ldmVyIGdhdmUgdXAuIEl0J3MgYW4gaW5zcGlyaW5nIGV4YW1wbGUgZm9yIHVzIHRvIHRoaW5rIGFib3V0IHRvZGF5IGlmIHdlIGdldCB0aXJlZCwgZnJ1c3RyYXRlZCwgb3IgaGF2ZSB0byBkZWFsIHdpdGggc29tZSBjcmlzaXMuIEhlcmUgd2FzIGEgZ3V5IHdobyBoYWQgZXZlcnkgcmVhc29uIHRvIGJlIGFuZ3J5IGFuZCBiaXR0ZXIsIHdobyBjb3VsZCBoYXZlIGFiYW5kb25lZCBoaXMgcHJpbmNpcGxlcyBhbmQgbGl2ZWQgaW4gbHV4dXJ5IG9yIGVhc2UsIHdobyBjb3VsZCBoYXZlIHB1dCBoaXMgcmVzcG9uc2liaWxpdGllcyBhc2lkZSBhbmQgZm9jdXNlZCBvbiBoaXMgb3duIGhlYWx0aC48L3A+PHA+QnV0IGhlIG5ldmVyIGRpZC4gSGlzIHNvdWwgc3RheWVkIHN0cm9uZyBldmVuIGFmdGVyIGhpcyBib2R5IGJlY2FtZSB3ZWFrLiBIZSBkaWRuJ3QgZ2l2ZSB1cCwgcmlnaHQgdXAgdG8gdGhlIHNlY29uZCB1bnRpbCBoaXMgYm9keSBmaW5hbGx5IGRpZCZtZGFzaDt3aGVuIGhlIGRpZWQgbmVhciBWaWVubmEgaW4gMTgwIEFELjwvcD4iLA0KICAgICJ0aG91Z2h0cyI6ICIiDQogIH0sDQogIHsNCiAgICAiZGF0ZSI6ICJEZWNlbWJlciAyOCIsDQogICAgInRvcGljIjogIk9uIEJlaW5nIFJlbWVtYmVyZWQiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJFdmVyeXRoaW5nIGxhc3RzIGZvciBhIGRheSwgdGhlIG9uZSB3aG8gcmVtZW1iZXJzIGFuZCB0aGUgcmVtZW1iZXJlZC4iLA0KICAgICAgICAiYXV0aG9yIjogIk1hcmN1cyBBdXJlbGl1cyIsDQogICAgICAgICJzb3VyY2UiOiAiTWVkaXRhdGlvbnMsIDQuMzUiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGFrZSBhIHdhbGsgZG93biBGb3J0eS1maXJzdCBTdHJlZXQgdG93YXJkIHRoZSBiZWF1dGlmdWwgTmV3IFlvcmsgQ2l0eSBQdWJsaWMgTGlicmFyeSwgd2l0aCBpdHMgbWFqZXN0aWMgc3RvbmUgbGlvbnMuIE9uIHlvdXIgd2F5IHVwIDxxPkxpYnJhcnkgV2F5LDwvcT4geW91J2xsIHBhc3MgYSBwbGFjYXJkIGxhaWQgaW50byB0aGUgY2VtZW50LCBwYXJ0IG9mIGEgc2VyaWVzIG9mIHF1b3RhdGlvbnMgZnJvbSBncmVhdCB3cml0ZXJzIHRocm91Z2hvdXQgaGlzdG9yeS4gVGhpcyBvbmUgaXMgZnJvbSBNYXJjdXMgQXVyZWxpdXM6IDxxPkV2ZXJ5dGhpbmcgaXMgb25seSBmb3IgYSBkYXksIGJvdGggdGhhdCB3aGljaCByZW1lbWJlcnMgYW5kIHRoYXQgd2hpY2ggaXMgcmVtZW1iZXJlZC48L3E+PC9wPjxwPlRoZSBsaWJyYXJ5IGl0c2VsZiB3YXMgZGVzaWduZWQgYnkgdGhlIGZpcm0gb2YgSm9obiBNZXJ2ZW4gQ2FyciZlZ3JhdmU7cmUsIG9uZSBvZiB0aGUgdHdlbnRpZXRoIGNlbnR1cnkncyBtb3N0IGFjY29tcGxpc2hlZCBhcmNoaXRlY3RzLiBJdCBjb21iaW5lcyB0aGUgY29sbGVjdGlvbnMgb2Ygc3VjaCBsdW1pbmFyaWVzIGFuZCBwaGlsYW50aHJvcGlzdHMgYXMgU2FtdWVsIFRpbGRlbiwgSm9obiBKYWNvYiBBc3RvciwgYW5kIExhbWVzIExlbm94LCBhbmQgdGhlaXIgbmFtZXMgYXJlIGNhcnZlZCBpbnRvIHRoZSBzdG9uZS4gVG9kYXksIHRoZSBuYW1pbmcgcmlnaHRzIGdvIHRvIGhlZGdlIGZ1bmQgbWFuYWdlciBTdGVwaGVuIEEuIFNjaHdhcnptYW4uIFRoZSBvcGVuaW5nIG9mIHRoZSBsaWJyYXJ5IGluIDE5MTEgd2FzIGF0dGVuZGVkIGJ5IFByZXNpZGVudCBXaWxsaWFtIEhvd2FyZCBUYWZ0LCBHb3Zlcm5vciBKb2huIEFsZGVuIERpeCwgYW5kIE5ldyBZb3JrIENpdHkgbWF5b3IgV2lsbGlhbSBKYXkgR2F5bm9yLiBUaGUgcGxhcXVlcyB5b3UgcGFzcyBvbiB5b3VyIHdheSB3ZXJlIGRlc2lnbmVkIGJ5IHRoZSBleGNlbGxlbnQgR3JlZ2cgTGVGZXZyZS48L3A+PHA+TWFyY3VzJ3MgcXVvdGUgbWFrZXMgdXMgcG9uZGVyOiBIb3cgbWFueSBvZiB0aGVzZSBwZW9wbGUgaGF2ZSB3ZSBldmVuIGhlYXJkIG9mPyBUaGUgcGVvcGxlIGludm9sdmVkIGluIHRoZSBzdG9yeSBvZiB0aGUgbGlicmFyeSB3ZXJlIHNvbWUgb2YgdGhlIG1vc3QgZmFtb3VzIG1lbiBpbiB0aGUgd29ybGQuIE1hc3RlcnMgb2YgdGhlaXIgcmVzcGVjdGl2ZSBjcmFmdHMsIHJpY2ggYmV5b25kIGltYWdpbmF0aW9uIGluIHNvbWUgY2FzZXMuIEV2ZW4gYWxvbmcgPHE+TGlicmFyeSBXYXksPC9xPiBtYW55IG9mIHRoZSBmYW1vdXMgYXV0aG9ycyBhcmUgdW5mYW1pbGlhciB0byB0aGUgbW9kZXJuIHJlYWRlci4gVGhleSBhcmUgbG9uZyBnb25lLCBhcyBhcmUgdGhlIHBlb3BsZSB3aG8gcmVtZW1iZXJlZCB0aGVtLjwvcD48cD5BbGwgb2YgdXMsIGluY2x1ZGluZyBNYXJjdXMmbWRhc2g7d2hvIGlzIHBhc3NlZCBvdmVyIGJ5IGp1c3QgYXMgbWFueSB1bmF3YXJlIHBlZGVzdHJpYW5zJm1kYXNoO2xhc3QgZm9yIGp1c3QgYSBkYXksIGF0IG1vc3QuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkRlY2VtYmVyIDI5IiwNCiAgICAidG9waWMiOiAiR2l2ZSBUaGFua3MiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJJbiBhbGwgdGhpbmdzIHdlIHNob3VsZCB0cnkgdG8gbWFrZSBvdXJzZWx2ZXMgYmUgYXMgZ3JhdGVmdWwgYXMgcG9zc2libGUuIEZvciBncmF0aXR1ZGUgaXMgYSBnb29kIHRoaW5rIGZvciBvdXJzZWx2ZXMsIGluIGEgbWFubmVyIGluIHdoaWNoIGp1c3RpY2UsIGNvbW1vbmx5IGhlbGQgdG8gYmVsb25nIHRvIG90aGVycywgaXMgbm90LiBHcmF0aXR1ZGUgcGF5cyBpdHNlbGYgYmFjayBpbiBsYXJnZSBtZWFzdXJlLiIsDQogICAgICAgICJhdXRob3IiOiAiU2VuZWNhIiwNCiAgICAgICAgInNvdXJjZSI6ICJNb3JhbCBMZXR0ZXJzLCA4MS4xOSINCiAgICAgIH0NCiAgICBdLA0KICAgICJub3RlcyI6ICI8cD5UaGluayBvZiBhbGwgdGhlIHRoaW5ncyB5b3UgY2FuIGJlIGdyYXRlZnVsIGZvciB0b2RheS4gVGhhdCB5b3UgYXJlIGFsaXZlLCB0aGF0IHlvdSBsaXZlIGluIGEgdGltZSBwcmltYXJpbHkgb2YgcGVhY2UsIHRoYXQgeW91IGhhdmUgZW5vdWdoIGhlYWx0aCBhbmQgbGVpc3VyZSB0byByZWFkIHRoaXMgYm9vay4gV2hhdCBvZiB0aGUgbGl0dGxlIHRoaW5ncz8gVGhlIHBlcnNvbiB3aG8gc21pbGVkIGF0IHlvdSwgdGhlIHdvbWFuIHdobyBoZWxkIHRoZSBkb29yIG9wZW4sIHRoYXQgc29uZyB5b3UgbGlrZSBvbiB0aGUgcmFkaW8sIHRoZSBwbGVhc2FudCB3ZWF0aGVyLjwvcD48cD5HcmF0aXR1ZGUgaXMgaW5mZWN0aW91cy4gSXRzIHBvc2l0aXZpdHkgaXMgcmFkaWFudC48L3A+PHA+RXZlbiBpZiB0b2RheSB3YXMgeW91ciBsYXN0IGRheSBvbiB0aGUgZWFydGgmbWRhc2g7aWYgeW91IGtuZXcgaW4gYWR2YW5jZSB0aGF0IGl0IHdhcyBnb2luZyB0byBlbmQgaW4gYSBmZXcgc2hvcnQgaG91cnMmbWRhc2g7d291bGQgdGhlcmUgc3RpbGwgYmUgcGxlbnR5IHRvIGJlIGdyYXRlZnVsIGZvcj8gSG93IG11Y2ggYmV0dGVyIHdvdWxkIHlvdXIgbGlmZSBiZSBpZiB5b3Uga2lja2VkIG9mZiBldmVyeSBkYXkgbGlrZSB0aGF0PyBJZiB5b3UgbGV0IGl0IGNhcnJ5IHRocm91Z2ggZnJvbSBtb3JuaW5nIHRvIG5pZ2h0IGFuZCB0b3VjaCBldmVyeSBwYXJ0IG9mIHlvdXIgbGlmZT88L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9LA0KICB7DQogICAgImRhdGUiOiAiRGVjZW1iZXIgMzAiLA0KICAgICJ0b3BpYyI6ICJUYWtpbmcgVGhlIEJpdGUgT3V0IE9mIEl0IiwNCiAgICAicXVvdGVzIjogWw0KICAgICAgew0KICAgICAgICAicXVvdGUiOiAiVG8gYmVhciB0cmlhbHMgd2l0aCBhIGNhbG0gbWluZDxicj5yb2JzIG1pc2ZvcnR1bmUgb2YgaXRzIHN0cmVuZ3RoIGFuZCBidXJkZW4uIiwNCiAgICAgICAgImF1dGhvciI6ICJTZW5lY2EiLA0KICAgICAgICAic291cmNlIjogIkhlcmN1bGVzIE9ldGFldXMsIDIzMS0yMzIiDQogICAgICB9DQogICAgXSwNCiAgICAibm90ZXMiOiAiPHA+VGhlIHBlb3BsZSB5b3UgYWRtaXJlLCB0aGUgb25lcyB3aG8gc2VlbSB0byBiZSBhYmxlIHRvIHN1Y2Nlc3NmdWxseSBoYW5kbGUgYW5kIGRlYWwgd2l0aCBhZHZlcnNpdHkgYW5kIGRpZmZpY3VsdHksIHdoYXQgZG8gdGhleSBoYXZlIGluIGNvbW1vbj8gVGhlaXIgc2Vuc2Ugb2YgZXF1aWxpYnJpdW0sIHRoZWlyIG9yZGVybHkgZGlzY2lwbGluZS4gT24gdGhlIG9uZS15YXJkIGxpbmUsIGluIHRoZSBtaWRzdCBvZiBjcml0aWNpc20sIGFmdGVyIGEgaGVhcnRicmVha2luZyB0cmFnZWR5LCBkdXJpbmcgYSBzdHJlc3NmdWwgcGVyaW9kLCB0aGV5IGtlZXAgZ29pbmcuPC9wPjxwPk5vdCBiZWNhdXNlIHRoZXkgYXJlIGJldHRlciB0aGFuIHlvdS4gTm90IGJlY2F1c2UgdGhleSdyZSBzbWFydGVyLiBCdXQgYmVjYXVzZSB0aGV5IGhhdmUgbGVhcm5lZCBhIGxpdHRsZSBzZWNyZXQuIFlvdSBjYW4gdGFrZSB0aGUgYml0ZSBvdXQgb2YgYW55IHRvdWdoIHNpdHVhdGlvbiBieSBicmluZ2luZyBpbiBhIGNhbG0gbWluZCB0byBpdC4gQnkgY29uc2lkZXJpbmcgaXQgYW5kIG1lZGl0YXRpbmcgb24gaXQgaW4gYWR2YW5jZS48L3A+PHA+QW5kIHRoaXMgaXMgdHJ1ZSBub3QganVzdCBmb3Igb3VyIGRheS10by1kYXkgYWR2ZXJzaXRpZXMgYnV0IGZvciB0aGUgZ3JlYXRlc3QgYW5kIG1vc3QgdW5hdm9pZGFibGUgdHJpYWwgb2YgYWxsOiBvdXIgb3duIGV2ZW50dWFsIGRlYXRoLiBJdCBjb3VsZCBjb21lIHRvbW9ycm93LCBpdCBjb3VsZCBjb21lIGluIGZvcnR5IHllYXJzLiBJdCBjb3VsZCBiZSBxdWljayBhbmQgcGFpbmxlc3MsIG9yIGl0IGNvdWxkIGJlIGV4Y3J1Y2lhdGluZy4gT3VyIGdyZWF0ZXN0IGFzc2V0IGluIHRoYXQgb3JkZWFsIHdpbGwgbm90IGJlIHJlbGlnaW9uLCBpdCB3aWxsIG5vdCBldmVuIGJlIHRoZSB3aXNlIHdvcmRzIG9mIHRoZSBwaGlsb3NvcGhlcnMuIEl0IHdpbGwgYmUsIHNpbXBseSwgb3VyIGNhbG0gYW5kIHJlYXNvbmVkIG1pbmQuPC9wPiIsDQogICAgInRob3VnaHRzIjogIiINCiAgfSwNCiAgew0KICAgICJkYXRlIjogIkRlY2VtYmVyIDMxIiwNCiAgICAidG9waWMiOiAiR2V0IEFjdGl2ZSBJbiBZb3VyIE93biBSZXNjdWUiLA0KICAgICJxdW90ZXMiOiBbDQogICAgICB7DQogICAgICAgICJxdW90ZSI6ICJTdG9wIHdhbmRlcmluZyBhYm91dCEgWW91IGFyZW4ndCBsaWtlbHkgdG8gcmVhZCB5b3VyIG93biBub3RlYm9va3MsIG9yIGFuY2llbnQgaGlzdG9yaWVzLCBvciB0aGUgYW50aG9sb2dpZXMgeW91J3ZlIGNvbGxlY3RlZCB0byBlbmpveSBpbiB5b3VyIG9sZCBhZ2UuIEdldCBidXN5IHdpdGggbGlmZSdzIHB1cnBvc2UsIHRvc3MgYXNpZGUgZW1wdHkgaG9wZXMsIGdldCBhY3RpdmUgaW4geW91ciBvd24gcmVzY3VlJm1kYXNoO2lmIHlvdSBjYXJlIGZvciB5b3Vyc2VsZiBhdCBhbGwmbWRhc2g7YW5kIGRvIGl0IHdoaWxlIHlvdSBjYW4uIiwNCiAgICAgICAgImF1dGhvciI6ICJNYXJjdXMgQXVyZWxpdXMiLA0KICAgICAgICAic291cmNlIjogIk1lZGl0YXRpb25zLCAzLjE0Ig0KICAgICAgfQ0KICAgIF0sDQogICAgIm5vdGVzIjogIjxwPlRoZSBwdXJwb3NlIG9mIGFsbCBvdXIgcmVhZGluZyBhbmQgc3R1ZHlpbmcgaXMgdG8gYWlkIHVzIGluIHRoZSBwdXJzdWl0IG9mIHRoZSBnb29kIGxpZmUgKGFuZCBkZWF0aCkuIEF0IHNvbWUgcG9pbnQsIHdlIG11c3QgcHV0IG91ciBib29rcyBhc2lkZSBhbmQgdGFrZSBhY3Rpb24uIFNvIHRoYXQsIGFzIFNlbmVjYSBwdXQgaXQsIHRoZSA8cT53b3JkcyBiZWNvbWUgd29ya3MuPC9xPiBUaGVyZSBpcyBhbiBvbGQgc2F5aW5nIHRoYXQgYSA8cT5zY2hvbGFyIG1hZGUgaXMgYSBzb2xkaWVyIHNwb2lsZWQuPC9xPiBXZSB3YW50IHRvIGJlIGJvdGggc2Nob2xhcnMgYW5kIHNvbGRpZXJzJm1kYXNoO3NvbGRpZXJzIGluIHRoZSBnb29kIGZpZ2h0LjwvcD48cD5UaGF0J3Mgd2hhdCdzIG5leHQgZm9yIHlvdS4gTW92ZSBmb3J3YXJkLCBtb3ZlIG9ud2FyZC4gQW5vdGhlciBib29rIGlzbid0IHRoZSBhbnN3ZXIuIFRoZSByaWdodCBjaG9pY2VzIGFuZCBkZWNpc2lvbnMgYXJlLiBXaG8ga25vd3MgaG93IG11Y2ggdGltZSB5b3UgaGF2ZSBsZWZ0LCBvciB3aGF0IGF3YWl0cyB1cyB0b21vcnJvdz88L3A+IiwNCiAgICAidGhvdWdodHMiOiAiIg0KICB9DQpdDQo="
}