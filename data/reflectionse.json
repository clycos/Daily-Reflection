{
  "encoded": "[
  {
    "date": "January 1",
    "topic": "Control And Choice",
    "quotes": [
      {
        "quote": "The chief task in life is simply this: to identify and separate matters so that I can say clearly to myself which are externals not under my control, and which have to do with the choices I actually control. Where then do I look for good and evil? Not to uncontrollable externals, but within myself to the choices that are my own...",
        "author": "Epictetus",
        "source": "Discourses, 2.5.4-5"
      }
    ],
    "notes": "<p>The single most important practice in Stoic philosophy is differentiating between what we can change and what we can't. What we have influence over and what we do not. A flight is delayed because of weather&mdash;no amount of yelling at an airline representative will end a storm. No amount of wishing will make you taller or shorter or born in a different country. No matter how hard you try, you can't <em>make</em> someone like you. And on top of that, time spent hurling yourself at these immovable objects is time not spent on the things we <em>can</em> change.</p><p>The recovery community practices something called the Serenity Prayer: <q>God, grant me the serenity to accept the things I  cannot change, the courage to change the things I can, and the wisdom to know the difference.</q> Addicts cannot change the abuse suffered in childhood. They cannot undo the choices they have made or the hurt they have caused. But they <em>can</em> change the future&mdash;through the power they have in the present moment. As Epictetus said, they can control the choices they make right now.</p><p>The same is true for us today. If we can focus on making clear what parts of our day are within our control and what parts are not, we will not only be happier, we will have a distinct advantage over other people who fail to realize they are fighting an unwinnable battle.</p>",
    "thoughts": ""
  },
  {
    "date": "January 2",
    "topic": "Education Is Freedom",
    "quotes": [
      {
        "quote": "What is the fruit of these teachings? Only the most beautiful and proper harvest of the truly educated&mdash;tranquility, fearlessness, and freedom. We should not trust the masses who say only the free can be educated, but rather the lovers of wisdom who say that only the educated are free",
        "author": "Epictetus",
        "source": "Discourses, 2.1.21-23a"
      }
    ],
    "notes": "<p>Why did you pick up this book? Why pick up any book? Not to seem smarter, not to pass time on the plane, not to hear what you want to hear&mdash;there are plenty of easier choices than reading.</p><p>No, you picked up this book because you are learning how to live. Because you want to be freer, fear less, and achieve a state of peace. Education&mdash;reading and meditating on the wisdom of great minds&mdash;is not to be done for its own sake. It has a purpose.</p><p>Remember that imperative on the days you start to feel distracted, when watching television or having a snack seems like a better use of your time than reading or studying philosophy. Knowledge&mdash;self-knowledge in particular&mdash;is freedom.</p>",
    "thoughts": ""
  },
  {
    "date": "January 3",
    "topic": "Be Ruthless To The Things That Don't Matter",
    "quotes": [
      {
        "quote": "How many have laid waste to your life when you weren't aware of what you were losing, how many was wasted in pointless grief, foolish joy, greedy desire, and social amusements&mdash;how little of your own was left to you. You will realize you are dying before your time!",
        "author": "Seneca",
        "source": "On the Brevity of Life, 3.3b"
      }
    ],
    "notes": "<p>One of the hardest things to do in life is to say <q>No.</q> To invitations, to requests, to obligations, to the stuff that everyone else is doing. Even harder is saying no to certain time-consuming emotions: anger, excitement, distraction, obsession, lust. None of these impulses feels like a big deal by itself, but run amok, they become a commitment like anything else.</p><p>If you're not careful, these are precisely the impositions that will overwhelm and consume your life. Do you ever wonder how you can get some of your time back, how you can feel less busy? Start by learning the power of <q>No!</q>&mdash;as in <q>No, thank you,</q> and <q>No, I'm not going to get caught up in that,</q> and <q>No, I just can't right now.</q> It may hurt some feelings. It may turn people off. If may take some hard work. But the more you say no to the things that don't matter, the more you can say yes to the things that do. This will let you live and enjoy your life&mdash;the life that <em>you</em> want.</p>",
    "thoughts": ""
  },
  {
    "date": "January 4",
    "topic": "The Big Three",
    "quotes": [
      {
        "quote": "All you need are these: certainty of judgment in the present moment;<br>action for the common good in the present moment;<br>and an attitude of gratitude in the present moment for anything that comes your way.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 9.6"
      }
    ],
    "notes": "<p>Perception, Action, Will. Those are the three overlapping but critical disciplines of Stoicism. There's more to the philosophy certainly&mdash;and we could spend all day talking about the unique beliefs of the various Stoics: <q>This is what Heraclitus thought …</q> <q>Zeno is from Citium, a city in Cyprus, and he believed …</q> But would such facts really help you day to day? What clarity does trivia provide?</p><p>Instead, the following little reminder sums up the three most essential parts of Stoic philosophy worth carrying with you every day, into every decision: <ul><li>Control your perceptions.</li><li>Direct your actions properly.</li><li>Willingly accept what's outside your control.</li></ul></p><p>That's all we need to do.</p>",
    "thoughts": ""
  },
  {
    "date": "January 5",
    "topic": "Clarify Your Intentions",
    "quotes": [
      {
        "quote": "Let all your efforts be directed to something, let it keep the end in view. It's not activity that disturbs people, but false conceptions of things that drive them mad.",
        "author": "Seneca",
        "source": "On Tranquility of Mind, 12.5"
      }
    ],
    "notes": "<p>Law 29 of <cite>The 48 Laws of Power</cite> is: Plan All The Way To The End. Robert Greene writes, <q>By planning to the end you will not be overwhelmed by circumstances and you will know when to stop. Gently guide fortune and help determine the future of thinking far ahead.</q> The second habit in <cite>The 7 Habits Of Highly Successful People</cite> is: begin with an end in mind.</p><p>Having an end in mind is no guarantee that you'll reach it&mdash;no Stoic would tolerate that assumption&mdash;but not having an end in mind is a guarantee you won't. To the Stoics, <i lang=”el”>oi&ecirc;sis</i> (false conceptions) are responsible not just for disturbances in the soul but for chaotic and dysfunctional lives and operations. When your efforts are not directed at a cause or a purpose, how will you know what to do day in and day out? How will you know what to say no to and what to say yes to? How will you know when you've had enough, when you've reached your goal, when you've gotten off track, if you've never defined what those things are?</p><p>The answer is that you cannot. And so you are driven into failure&mdash;or worse, into madness by the oblivion of directionlessness.</p>",
    "thoughts": ""
  },
  {
    "date": "January 6",
    "topic": "Where, Who, What, And Why",
    "quotes": [
      {
        "quote": "A person who doesn't know what the universe is, doesn't know where they are. A person who doesn't know their purpose in life doesn't know who they are or what the universe is. A person who doesn't know any one of these things doesn't know why they are here. So what to make of people who seek or avoid the praise of those who have no knowledge of where or who they are?",
        "author": "Marcus Aurelius",
        "source": "Meditations, 8.52"
      }
    ],
    "notes": "<p>The late comedian Mitch Hedberg had a funny story he told in his act. Sitting down for an on-air interview, a radio DJ asked him, <q>So who are you?</q> In that moment, he had to think, <em>Is this guy really deep or did I drive to the wrong station?</em></p><p>How often are we asked a simple question like <q>Who are you?</q> or <q>What do you do?</q> or <q>Where are you from?</q> Considering it a superficial question&mdash;if we even consider it at all&mdash;we don't bother with more than a superficial answer.</p><p>But, gun to their head, most people couldn't give much in the way of a substantive answer. Could you? Have you taken the time to get clarity about who you are and what you stand for? Or are you too busy chasing unimportant things, mimicking the wrong influences, and following disappointing or unfulfilling or nonexistent paths?</p>",
    "thoughts": ""
  },
  {
    "date": "January 7",
    "topic": "Seven Clear Functions Of The Mind",
    "quotes": [
      {
        "quote": "The proper work of the mind is the exercise of choice, refusal, yearning, repulsion, preparation, purpose, and assent. What then can pollute and clog the mind's proper functioning? Nothing but its own corrupt decisions.",
        "author": "Epictetus",
        "source": "Discourses, 4.11.6-7"
      }
    ],
    "notes": "<p>Let's break down each one of those tasks: <ul style=list-style-type:none><li>Choice&mdash;to do and think right</li><li>Refusal&mdash;of temptation</li><li>Yearning&mdash;to be better</li><li>Repulsion&mdash;of negativity, of bad influences, of what isn't true</li><li>Preparation&mdash;for what lies ahead or whatever may happen</li><li>Purpose&mdash;our guiding princile and highest priority</li><li>Assent&mdash;to be free of deception about what's inside and outside our control (and be ready to accept the latter)</li></ul></p><p>This is what the mind is here to do. We must make sure that it does&mdash;and see everything else as pollution or a corruption.</p>",
    "thoughts": ""
  },
  {
    "date": "January 8",
    "topic": "Seeing Our Addictions",
    "quotes": [
      {
        "quote": "We must give up many things to which we are addicted, considering them to be good. Otherwise, courage will vanish, which should continually test itself. Greatness of soul will be lost, which can't stand out unless it disdains as petty what the mob regards as most desirable.",
        "author": "Seneca",
        "source": "Moral Letters, 74.12b-13"
      }
    ],
    "notes": "<p>What we consider to be harmless indulgences can easily become full-blown addictions. We start with coffee in the morning, and soon enough we can't start the day without it. We check our email because it's part of our job, and soon enough we feel the phantom buzz of the phone in our pocket every few seconds. Soon enough, these harmless habits are running our lives.</p><p>The little compulsions and drives we have not only chip away at our freedom and sovereignty, they cloud our clarity. We think we're in control&mdash;but are we really? As one addict put it, addiction is when we've <q>lost the freedom to abstain.</q> Let us reclaim that freedom.</p><p>What that addiction is for you can vary: Soda? Drugs? Complaining? Gossip? The Internet? Biting your nails? But you must reclaim the ability to abstain because within it is your clarity and self-control.</p>",
    "thoughts": ""
  },
  {
    "date": "January 9",
    "topic": "What We Control And What We Don't",
    "quotes": [
      {
        "quote": "Some things are in our control, while others are not. We control our opinion, choice, desire, aversion, and in a word, everything of our own doing. We don't control our body, property, reputation, position, and in a word, everything not of our own doing. Even more, the things in our control are by nature free, unhindered, and unobstructed, while those not in our control are weak, slavish, can be hindered, and are not our own.",
        "author": "Epictetus",
        "source": "Enchiridion, 1.1-2"
      }
    ],
    "notes": "<p>Today, you won't control the external events that happen. Is that scary? A little, but it's balanced when we see that we can control our opinion <em>about</em> those events. You decide whether they're good or bad, whether they're fair or unfair. You don't control the situation, but you control what you <em>think</em> about it.</p><p>See how that works? Every single thing that is outside your control&mdash;the outside world, other people, luck, karma, whatever&mdash;still presents a corresponding area that <em>is</em> in your control. This alone gives us plenty to manage, plenty of power.</p><p>Best of all, an honest understanding of what is within our control provides real clarity about the world: all we have is our own mind. Remember that today when you try to extend your reach outward&mdash;that it's much better and more appropriately directed <em>inward.</em>.</p>",
    "thoughts": ""
  },
  {
    "date": "January 10",
    "topic": "If You Want To Be Steady",
    "quotes": [
      {
        "quote": "e essence of good is a certain kind of reasoned choice; just as the essence of evil is another kind. What about externals, then? They are only the raw material for our reasoned choice, which finds its own good or evil in working with them. How will it find the good? Not by marveling at the material! For if judgments about the material are straight that makes our choices good, but if those judgements are twisted, our choices turn bad.",
        "author": "Epictetus",
        "source": "Discourses, 1.29.1-3"
      }
    ],
    "notes": "<p>The Stoic seek steadiness, stability, and tranquility&mdash;traits most of us aspire to but seem to experience only fleetingly. How do they accomplish this elusive goal? How does one embody <i lang=el>eustatheia</i> (the word Arrian used to describe this teaching of Epictetus)?</p><p>Well, it's not luck. It's not by eliminating outside influences or turning away to quiet and solitude. Instead, it's about filtering the outside world through the straightener of our judgment. That's what our reason can do&mdash;it can take the crooked, confusing, and overwhelming nature of external events and make them orderly.</p><p>However, if our judgements are crooked because we don't use reason, then everything that follows will be crooked, and we will lose our ability to steady ourselves in the chaos and rush of life. If you want to be steady, if you want clarity, proper judgment is the best way.</p>",
    "thoughts": ""
  },
  {
    "date": "January 11",
    "topic": "If You Want To Be Unsteady",
    "quotes": [
      {
        "quote": "For if a person shifts their caution to their own reasoned choices and the acts of those choices, they will at the same time gain the will to avoid, but if they shift their caution away from their own reasoned choices to things not under their control, seeking to avoid what is controlled by others, they will then be agitated, fearful, and unstable.",
        "author": "Epictetus",
        "source": "Discourses, 2.1.12"
      }
    ],
    "notes": "<p>The image of the Zen philosopher is the monk up in the green quiet hills, or in a beautiful temple on some rocky cliff. The Stoics are the antithesis of this idea. Instead, they are the man in the marketplace, the senator in the Forum, the brave wife waiting for her soldier to return from battle, the sculptor busy in her studio. Still, the Stoic is equally at peace.</p><p>Epictetus is reminding you that serenity and stability are results of your choices and judgement, not your environment. If you seek to avoid all disruptions to tranquility&mdash;other people, external events, stress&mdash;you will never be successful. Your problems will follow you wherever you run and hide. But if you seek to avoid the harmful and disruptive <em>judgements</em> that cause those problems, then you will be stable and steady wherever you happen to be.</p>",
    "thoughts": ""
  },
  {
    "date": "January 12",
    "topic": "The One Path To Serenity",
    "quotes": [
      {
        "quote": "Keep this thought at the ready at daybreak, and through the day and night&mdash;there is only one path to happiness, and that is in giving up all outside of your sphere of choice, regarding nothing else as your possession, surrendering all else to God and Fortune.",
        "author": "Epictetus",
        "source": "Discourses, 4.4.39"
      }
    ],
    "notes": "<p>This morning, remind yourself of what is in your control and what's not in your control. Remind yourself to focus on the former and not the latter.</p><p>Before lunch, remind yourself that the only thing you truly possess is your ability to make choices (and to use reason and judgment when doing so). This is the only thing that can never be taken from you completely.</p><p>In the afternoon, remind yourself that aside from the choices you make, your fate is not entirely up to you. The world is spinning and we spin along with it&mdash;whichever direction, good or bad.</p><p>In the evening, remind yourself how much is outside of your control and where your choices begin and end.</p><p>As you lie in bed, remember that sleep is a form of surrender and trust and how easily it comes. And prepare to start the whole cycle over again tomorrow.</p>",
    "thoughts": ""
  },
  {
    "date": "January 13",
    "topic": "Circle Of Control",
    "quotes": [
      {
        "quote": "We control our reasoned choice and all acts that depend on that moral will. What's not under our control are the body and any of its parts, our possessions, parents, siblings, children, or country&mdash;anything with with we might associate.",
        "author": "Epictetus",
        "source": "Discourses, 1.22.10"
      }
    ],
    "notes": "<p>This is important enough that it bears repeating: a wise person knows what's inside their circle of control and what is outside of it.</p><p>The good news is that it's pretty easy to remember what is inside our control. According to the Stoics, the circle of control contains just one thing: YOUR MIND. That's right, even your physical body isn't completely within the circle. After all, you could be struck with a physical illness or impairment at any moment. You could be traveling in a foreign country and be thrown in jail.</p><p>But this is all good news because it drastically reduces the amount of things that you need to think about. There is clarity in simplicity. While everyone else is running around with a list of responsibilities a mile long&mdash;things they're not actually responsible for&mdash;you've got just that one-item list. You've got just one thing to manage: your choices, your will, your mind.</p><p>So mind it.</p>",
    "thoughts": ""
  },
  {
    "date": "January 14",
    "topic": "Cut The Strings That Pull Your Mind",
    "quotes": [
      {
        "quote": "Understand at last that you have something in you more powerful and divine than what causes the bodily passions and pulls you like a mere puppet. What thoughts now occupy my mind? Is it not fear, suspicion, desire, or something like that?",
        "author": "Marcus Aurelius",
        "source": "Meditations, 12.19"
      }
    ],
    "notes": "<p>Think of all the interests vying for a share of your wallet or for a second of your attention. Food scientists are engineering products to exploit your taste buds. Silicon Valley engineers are designing applications as addictive as gambling. The media is manufacturing stories to provoke outrage and anger.</p><p>These are just a small slice of the temptations and forces acting on us&mdash;distracting us and pulling us  away from the things that truly matter. Marcus, thankfully, was not exposed to these extreme parts of our modern culture. But he knew plenty of distracting sinkholes too: gossip, the endless call of work, as well as fear, suspicion, lust. Every human being is pulled by these internal and external forces that are increasingly more powerful and harder to resist.</p><p>Philosophy is simply asking us to pay careful attention and to strive to be more than a pawn. As Vicotr Frankl puts it in <cite>The Will to Meaning</cite>, <q>Man is pushed by drives but pulled by values.</q> These values and inner awareness prevent us from being puppets. Sure, paying attention requires work and awareness, but isn't that better than being jerked about on a string.</p>",
    "thoughts": ""
  },
  {
    "date": "January 15",
    "topic": "Peace Is In Staying The Course",
    "quotes": [
      {
        "quote": "Tranquility can't be grasped except by those who have reached an unwavering ad firm power of judgement&mdash;the rest constantly fall and rise in their decisions, wavering in a state of alternately rejecting and accepting things. What is the cause of this back and forth? It's because nothing is clear and they rely on the most uncertain guide&mdash;common opinion.",
        "author": "Seneca",
        "source": "Moral Letters, 95.57b-58a"
      }
    ],
    "notes": "<p>In Seneca's essay on tranquility, he used the Greek word <i lang=”el”>eithymia</i>, which he defines as <q>believing in yourself and trusting that you are on the right path, and not being in doubt by following the myriad footpaths of those wandering in every direction.</q> It is this state of mind, he says, that produces tranquility.</p><p>Clarity of vision allows us to have this belief. That's not to say we're always going to be 100 percent certain of everything, or that we even should be. Rather, it's that we can rest assured we're heading generally in the right direction&mdash;that we don't need to constantly compare ourselves with other people or change our mind every three seconds based on new information.</p><p>Instead, tranquility and peace are found in identifying <em>our</em> path and in sticking to it: staying the course&mdash;making adjustments here and there, naturally&mdash;but ignoring the distracting sirens who beckon us to turn toward the rocks.</p>",
    "thoughts": ""
  },
  {
    "date": "January 16",
    "topic": "Never Do Anything Out Of Habit",
    "quotes": [
      {
        "quote": "So in the majority of other things, we address circumstances not in accordance with the right assumptions, but mostly by following wretched habit. Since all that I've said is the case, the person in training must seek to rise above, so as to stop seeking out pleasure and steering away from pain; to stop clinging to living and abhorring death; and in the case of property and money, to stop valuing receiving over giving.",
        "author": "Musonius Rufus",
        "source": "Lectures, 6.25.5-11"
      }
    ],
    "notes": "<p>A worker is asked: <q>Why did you do it this way?</q> The answer, <q>Because that's the way we've always done things.</q> The answer frustrates every good boss and sets the mouth of every entrepreneur watering. The worker has stopped thinking and is mindlessly operating out of habit. The business is ripe for disruption by a competitor, and the worker will probably get fired by any thinking boss.</p><p>We should apply the same ruthlessness to our own habits. In fact, we are studying philosophy precisely to break ourselves of rote behavior. Find what you do out of rote memory or routine. Ask yourself: <i>Is this really the best way to do it?</i> Know why you do what you do &ndash do it for the right reasons.</p>",
    "thoughts": ""
  },
  {
    "date": "January 17",
    "topic": "Reboot The Real Work",
    "quotes": [
      {
        "quote": "I am your teacher and you are learning in my school.  My aim is to bring you to completion, unhindered, free from compulsive behavior, unrestrained, without shame, free, flourishing, and happy, looking to God in things great and small&mdash;your aim is to learn and diligently practice all these things.  Why then don't you complete the work, if you have the right aim and I have both the right aim and right preparation?  What is missing? … The work is quite feasible, and is the only thing in our power … Let go of the past.  We must only begin.  Believe me and you will see.",
        "author": "Epictetus",
        "source": "Discourses, 2.19.29-34"
      }
    ],
    "notes": "<p>Do you remember, in school, or early in your life, being afraid to try something because you feared you might fail at it?  Most teenagers choose to fool around rather than exert themselves.  Halfhearted, lazy effort gives them a ready-made excuse: <q>It doesn't matter. I wasn't even trying.</q></p><p>As we get older, failure is not so inconsequential anymore.  What's at stake is not some arbitrary grade or intramural sports trophy, but the quality of your life and your ability to deal with the world around you.</p><p>Don't let that intimidate you, though.  You have the best teachers in the world: the wisest philosophers who ever lived.  And not only are you capable, the professor is asking for something very simple: just begin the work.  The rest follows.</p>",
    "thoughts": ""
  },
  {
    "date": "January 18",
    "topic": "See The World Like A Poet And An Artist",
    "quotes": [
      {
        "quote": "Pass through this brief patch of time in harmony with nature, and come to your final resting place gracefully, just as a ripened olive might drop, praising the earth that nourished it and grateful to the tree that gave it growth.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 4.48.2"
      }
    ],
    "notes": "<p>There are some stunningly beautiful turns of phrase in Marcus's <em>Meditations</em>&mdash;a surprising treat considering the intended audience (just himself).  In one passage, he praises the <q>charm and allure</q> of natures' process, the <q>stalks of ripe grain bending low, the frowning brow of the lion, the foam dripping from the boar's mouth.</q>  We should thank private rhetoric teacher Marcus Cornelius Fronto for the imagery in these vivid passages.  Fronto, widely considered to the Rome's best orator besides Cicero, was chosen by Marcus's adopted father to teach Marcus to think and write and speak.</p><p>More than just pretty phrases, they gave him&mdash;and now us&mdash;a powerful perspective on ordinary or seemingly <i>un</i>beautiful events.  It takes an artist's eye to see that the end of life is not unlike a ripe fruit falling from its tree.  It takes a poet to notice the way <q>baking bread splits in places and those cracks, while not intended in the baker's art, catch our eye and serve to stir our appetite</q> and find a metaphor in them.</p><p>There is clarity (and joy) in seeing what others can't see, in finding grace and harmony in places others overlook.  Isn't that far better than seeing the world as some dark place?</p>",
    "thoughts": ""
  },
  {
    "date": "January 19",
    "topic": "Wherever You Go, There Your Choice Is",
    "quotes": [
      {
        "quote": "Remember to conduct yourself in life as if at a banquet.  As something being passed around comes to you, reach out your hand and take a moderate helping.  Does it pass you by?  Don't stop it.  It hasn't yet come?  Don't burn in desire for it, but wait until it arrives in front of you.  Act this way with children, a spouse, toward position, with wealth&mdash;one day it will make you worthy of a banquet with the gods.",
        "author": "Epictetus",
        "source": "Discourses, 2.6.25"
      }
    ],
    "notes": "<p>The next time you see something you want, remember Epictetus's metaphor of life's banquet.  As you find yourself getting excited, ready to do anything and everything to get it&mdash;the equivalent of reaching across the table and grabbing a dish out of someone's hands&mdash;just remind yourself: that's bad manners and unnecessary.  Then wait patiently for your turn.</p><p>This metaphor has other interpretations too.  For instance, we might reflect that we're lucky to have been invited to such a wonderful feast (gratitude).  Or that we should take our time and savor the taste of what's on offer (enjoying the present moment) but that to stuff ourselves sick with food and drink serves no one, least of all our health (gluttony is a deadly sin, after all).  That at the end of the meal, it's rude not to help the host clean up and do the dishes (selflessness).  And finally, that next time, it's our turn to host and treat others just as we had been treated (charity).</p><p>Enjoy the meal!</p>",
    "thoughts": ""
  },
  {
    "date": "January 20",
    "topic": "Reignite Your Thoughts",
    "quotes": [
      {
        "quote": "Your principles can't be extinguished unless you snuff out the thoughts that feed them, for it's continually in your power to reignite new ones . . . It's possible to start living again! See things anew as you once did&mdash;that is how to restart life!",
        "author": "Marcus Aurelius",
        "source": "Meditations, 7.2"
      }
    ],
    "notes": "<p>Have you had a bad couple of weeks? Have you been drifting away from the principles and beliefs that you hold dear?  It's perfectly fine.  It happens to all of us.</p><p>In fact, it probably happened to Marcus&mdash;that may be why he scribbled this note to himself. Perhaps he'd been dealing with difficult senators or having difficulties with his troubled son. Perhaps in these scenarios he'd lost his temper, became depressed, or stopped checking in with himself. Who wouldn't?</p><p>But the reminder here is that no matter what happens, no matter how disappointing our behavior has been in the past, the principles themselves remain unchanged.  We can return and embrace them at any moment.  What happened yesterday&mdash;what happened five minutes ago&mdash;is the past.  We can reignite and restart whenever we like.</p><p>Why not do it right now?</p>",
    "thoughts": ""
  },
  {
    "date": "January 21",
    "topic": "A Morning Ritual",
    "quotes": [
      {
        "quote": "Ask yourself the following first thing in the morning:<ul><li>What am I lacking in attaining freedom from passion?</li><li>What for tranquility?</li><li>What am I? A mere body, estate-holder, or reputation? None of these things.</li><li>What, then? A rational being.</li> <li>What then is demanded of me? Meditate on your actions.</li><li>How did I steer away from serenity?</li><li>What did I do that was unfriendly, unsocial, or uncaring?</li><li>What did I fail to do in all these things?</li></ul>",
        "author": "Epictetus",
        "source": "Discourses, 4.6.34-35"
      }
    ],
    "notes": "<p>Many successful people have a morning ritual.  For some, it's meditation.  For others, it's exercise. For many, it's journaling&mdash;just a few pages where they write down their thoughts, fears, hopes.  In these cases, the point is not so much the activity itself as it is the ritualized reflection.  The idea is to take some time to look inward and examine.</p><p>Taking that time is what Stoics advocated more than almost anything else. We don't know whether Marcus Aurelius wrote his <em>Meditations</em> in the morning or at night, but we know he carved out moments of quiet alone time&mdash;and that he wrote for himself, not for anyone else.  If you're looking for a place to start your own ritual, you could do worse than Marcus's example and Epictetus's checklist.</p><p>Every day, starting today, ask yourself these same tough questions.  Let philosophy and hard work guide you to better answers, one morning at a time, over the course of a life.</p>",
    "thoughts": ""
  },
  {
    "date": "January 22",
    "topic": "The Day In Review",
    "quotes": [
      {
        "quote": "I will keep constant watch over myself and&mdash;most usefully&mdash;will put each day up for review.  For this is what makes us evil&mdash;that none of us looks back upon our own lives.  We reflect upon only that which we are about to do.  And yet our plans for the future descend from the past.",
        "author": "Seneca",
        "source": "Moral Letters, 83.2"
      }
    ],
    "notes": "<p>In a letter to his older brother Novatus, Seneca describes a beneficial exercise he borrowed from another prominent philosopher.  At the end of each day he would ask himself variations of the following questions: <em>What bad habit did I curb today?  How am I better?  Were my actions just?  How can I improve?</em></p><p>At the beginning or end of each day, the Stoic sits down with his journal and reviews: what he did, what he thought, what could be improved.  It's for this reason that Marcus Aurelius's <em>Meditations</em> is a somewhat inscrutable book&mdash;it was for personal clarity and not public benefit.  Writing down Stoic exercises was and is also a form of practicing them, just as repeating a prayer or hymn might be.</p><p>Keep your own journal, whether it's saved on a computer or in a little notebook.  Take time to consciously recall the events of the previous day.  Be unflinching in your assessments.  Notice what contributed to your happiness and what detracted from it.  Write down what you'd like to work on or quotes that you like.  By making the effort to record such thoughts, you're less likely to forget them.  An added bonus: you'll have a running tally to track your progress too.</p>",
    "thoughts": ""
  },
  {
    "date": "January 23",
    "topic": "The Truth About Money",
    "quotes": [
      {
        "quote": "Let's pass over to the really rich&mdash;how often the occasions they look just like the poor!  When they travel abroad they must restrict their baggage, and when haste is necessary, they dismiss their entourage.  And those who are in the army, how few of their possions they get to keep …",
        "author": "Seneca",
        "source": "On Consolation To Helvia, 12.1.b-2"
      }
    ],
    "notes": "<p>The author F. Scott Fitzgerald, who often glamorized the lifestyles of the rich and famous in books like <i>The Great Gatsby</i>, opens one of his short stories with the now classic lines: <q>Let me tell you about the very rich.  They are different from you and me.</q>  A few years after this story was published, his friend Ernest Hemingway teased Fitzgerald by writing, <q>Yes, they have more money.</q></p><p>That's what Seneca is reminding us.  As someone who was one of the richest men in Rome, he knew firsthand that money only marginally changes life.  It doesn't solve the problems that people without it seem to think it will.  In fact, no material possession will.  External things can't fix internal issues.</p><p>We constantly forget this&mdash;and it causes us so much confusion and pain.  As Hemingway would later write of Fitzgerald, <q>He thought [the rich] were a special glamorous race and when he found they weren't, it wrecked him as much as any other thing that wrecked him.</q>  Without a change the same will be true for us.</p>",
    "thoughts": ""
  },
  {
    "date": "January 24",
    "topic": "Push For Deep Understanding",
    "quotes": [
      {
        "quote": "From Rusticus . . . I learned to read carefully and not be satisfied with a rough understanding of the whole, and not to agree too quickly with those who have a lot to say about something.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 1.7.3"
      }
    ],
    "notes": "<p>The first book of Marcus Aurelius's <em>Meditations</em> begins with a catalog of gratitude.  He thanks, one by one, the leading influences in his life.  One of the people he thanks if Quintus Junius Rusticus, a teacher who developed in his student a love of deep clarity and understanding&mdash;a desire to not just stop at the surface when it comes to learning.</p><p>It was also from Rusticus that Marcus was introduced to Epictetus.  In fact, Rusticus loaned Marcus his personal copy of Epictetus's lectures. Marcus clearly wasn't satisfied with just getting the gist of these lectures and didn't simply accept them on his teacher's recommendation.  Paul Johnson once joked that Edmund Wilson read books <q>as though the author was on trial for his life.</q>  That's how Marcus read Epictetus&mdash;and when the lessons passed muster, he <em>absorbed</em> them.  They became part of his DNA as a human being.  He quoted them at length over the course of his life, finding real clarity and strength in words, even amid the immense luxury and power he would come to possess.</p><p>That's the kind of deep reading and study we need to cultivate as well, which is why we're reading just one page a day instead of a chapter at a time.  So we can take the time to read attentively and deeply.</p>",
    "thoughts": ""
  },
  {
    "date": "January 25",
    "topic": "The Only Prize",
    "quotes": [{ "quote": "", "author": "Marcus Aurelius", "source": "Meditations, 6.16.2b-4a" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "January 26",
    "topic": "The Power Of A Mantra",
    "quotes": [{ "quote": "", "author": "Marcus Aurelius", "source": "Meditations, 8.29" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "January 27",
    "topic": "The Three Areas Of Training",
    "quotes": [{ "quote": "", "author": "Epictetus", "source": "Discourses, 3.2.1-3a" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "January 28",
    "topic": "Watching The Wise",
    "quotes": [{ "quote": "", "author": "Marcus Aurelius", "source": "Meditations, 4.38" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "January 29",
    "topic": "Keep It Simple",
    "quotes": [{ "quote": "", "author": "Marcus Aurelius", "source": "Meditations, 2.5" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "January 30",
    "topic": "You Don't Have To Stay On Top Of Everything",
    "quotes": [{ "quote": "", "author": "Epictetus", "source": "Enchiridion, 13a" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "January 31",
    "topic": "Philosophy As Medicine Of The Soul",
    "quotes": [{ "quote": "", "author": "Marcus Aurelius", "source": "Meditations, 5.9" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 1",
    "topic": "For the Hot-Headed Man",
    "quotes": [
      {
        "quote": "Keep this thought handy when you feel a rage coming on&mdash;it isn't manly to be enraged. Rather, gentleness and civility are more human, and therefore manlier. A real man doesn't give way to anger and discontent, and such a person has strength, courage, and endurance&mdash;unlike the angry and complaining. The nearer a man comes to a calm mind, the closer he is to strength.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 11.18.5b"
      }
    ],
    "notes": "<p>Why do athletes talk trash to each other? Why do they deliberately say offensive and nasty things to their competitors when the refs aren't looking? To provoke a reaction. Distracting and angering opponents is an easy way to knock them off their game.</p><p>Try to remember that when you find yourself getting mad. Anger is not impressive or tough&it's a mistake. It's <em>weakness</em>. Depending on what you're doing, it might even be a trap that someone laid for you.</p><p>Fans and opponents called Joe Louis the <q>Ring Robot</q> because he was utterly unemotional&mdash;his cold, calm demeanor was far more terrifying than any crazed look or emotional outburst would have been.</p><p>Strength is the ability to maintain a hold of oneself. It's being the person who never gets mad, who cannot be rattled, because they are in control of their passions&mdash;rather than controlled <em>by</em> their passions.</p>",
    "thoughts": ""
  },
  {
    "date": "February 2",
    "topic": "A Proper Frame Of Mind",
    "quotes": [
      {
        "quote": "Frame your thoughts like this&mdash;you are an old person, you won't let yourself be enslaved by this any longer, no longer pulled like a puppet by every impulse, and you'll stop complaining about your present fortune or dreading the future.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 2.2"
      }
    ],
    "notes": "<p>We resent the person who comes in and tries to boss us around. <em>Don't tell me how to dress, how to think, how to do my job, how to live</em>. This is because we are independent, self-sufficient people.</p><p>Or at least that's what we tell ourselves.</p><p>Yet if someone says something we disagree with, something inside us tell us we <em>have</em> to argue with them. If there's a plate of cookies in front of us, we <em>have</em> to eat them. If someone does something we dislike, we <em>have</em> to get mad about it. When something bad happens, we <em>have</em> to be sad, depressed, or worried. But is something good happens a few minutes later, all of a sudden we're happy, excited, and want more.</p><p>We would never let another person jerk us around the way we let our impulses do. It's time we start seeing it that way&mdash;that we're not puppets that can be made to dance this way or that way just because we feel like it. We should be the ones in control, not our emotions, because we are independent, self-sufficient people.</p>",
    "thoughts": ""
  },
  {
    "date": "February 3",
    "topic": "The Source Of Your Anxiety",
    "quotes": [
      {
        "quote": "When I see an anxious person, I ask myself, what do they want? For if a person wasn't wanting something outside of their own control why would they be stricken by anxiety?",
        "author": "Epictetus",
        "source": "Discourses, 2.13.1"
      }
    ],
    "notes": "<p>The anxious father, worried about his children. What does he want? A world that is always safe. A frenzied traveler&mdash;what does she want? For the weather to hold and for traffic to part so she can make her flight. A nervous investor? That the market will turn around and an investment will pay off.</p><p>All of these scenarios holds the same thing in common. As Epictetus says, it's wanting something outside our control. Getting worked up, getting excited, nervously pacing&mdash;these intense, pained, ad anxious moments show us at our most futile and servile. Staring at the clock, at the ticker, at the next checkout lane over, at the sky&mdash;it's as if we all belong to a religious cult that believes the gods of fate will only give us what we want if we sacrifice our peace of mind.</p><p>Today, when you find yourself getting anxious, ask yourself: <em>Why are my insides twisted into knots? Am I in control here or is my anxiety?</em> And most important: <em>Is my anxiety doing me any good?</em></p>",
    "thoughts": ""
  },
  {
    "date": "February 4",
    "topic": "On Being Invincible",
    "quotes": [
      {
        "quote": "Who then is invincible? The one who cannot be upset by anything outside their reasoned choice.",
        "author": "Epictetus",
        "source": "Discourses, 1.18.21"
      }
    ],
    "notes": "<p>Have you ever watched a seasoned pro handle the media? No question is too tough, no tone too pointed or insulting. They parry every blow with humor, poise, and patience. Even when stung or provoked, they <em>choose</em> not to flinch or react. They're able to do this not only because of training and experience, but because they understand that reacting emotionally will only make the situation worse. The media is waiting for them to slip up or get upset, so to successfully navigate press events they have internalized the importance of keeping themselves under calm control.</p><p>It's unlikely you'll face a horde of probing reporters bombarding you with insensitive questions today. But it might be helpful&mdash;whatever stresses or frustrations or overload that do come your way&mdash;to picture that image and use it as your model for dealing with them. Our reasoned choice&mdash; our <em>prohaireses</em>, as the Stoics called it&mdash;is a kind of invincibility that we can cultivate. We can shrug off hostile attacks and breeze thorough pressure or problems. And, like our model, when we finish, we can point back into the crowd and say, <q>Next!</q></p>",
    "thoughts": ""
  },
  {
    "date": "February 5",
    "topic": "Steady Your Impulses",
    "quotes": [
      {
        "quote": "Don't be bounced around, but submit every impulse to the claims of justice, and protect your clear conviction in every appearance.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 4.22"
      }
    ],
    "notes": "<p>Think of the manic people in your life.  Not the ones suffering from an unfortunate disorder, but the ones whose lives and choices are <em>in</em> disorder.  Everything is soaring highs or crushing lows; the day is either amazing or awful.  Aren't those people exhausting? Don't you wish they just had a filter through which they could test the good impulses versus the bad ones?</p><p>There is such a filter.  Justice.  Reason.  Philosophy.  If there's a central message of Stoic thought, it's this: impulses of all kinds are going to come, and your work is to control them, like bringing a dog to heel. Put more simply: think before you act.  Ask: <em>Who is in control here? What principles are guiding me?</em></p>",
    "thoughts": ""
  },
  {
    "date": "February 6",
    "topic": "Don't Seek Out Strife",
    "quotes": [
      {
        "quote": "I don't agree with those who plunge headlong into the middle of the flood and who, accepting a turbulent life, struggle daily in great spirit with difficult circumstances. The wise person will endure that, but won't choose it&mdash;choosing to be at peace, rather than at war.",
        "author": "Seneca",
        "source": "Oedipus, 992"
      }
    ],
    "notes": "<p><q>Only the paranoid survive,</q> Andy Grove, a former CEO of Intel, famously said. It might be true. But we also know that the paranoid often destroy themselves quicker and more spectacularly than any enemy. Seneca, with his access and insight into the most powerful elite in Rome, would have seen this dynamic play out quite vividly. Nero, the student whose excesses Seneca tried to curb, killed not only his own mother and wife but eventually turned on Seneca, his mentor, too.</p><p>The combination of power, fear, mania can be deadly. The leader convinced that he might be betrayed, acts first and betrays others first. Afraid that he's not well liked, he works so hard to get others to like him that it has the opposite effect. Convinced of mismanagement, he micromanages and becomes the source of the mismanagement. And on and on&mdash;the things we fear or dread, we blindly inflict on ourselves.</p><p>The next time you are afraid of some supposedly disastrous outcome, remember that if you don't control your impulses, if you lose your self-control, you may be the very source of the disaster you so fear. It has happened to smarter and more powerful and more successful people. It can happen to us too.</p>",
    "thoughts": ""
  },
  {
    "date": "February 7",
    "topic": "Fear Is A Self-Fulfilling Prophecy",
    "quotes": [
      {
        "quote": "Many are harmed by fear itself, and many may have come to their fate while dreading fate.",
        "author": "Seneca",
        "source": "Oedipus, 992"
      }
    ],
    "notes": "<p><q>Only the paranoid survive,</q> Andy Grove, a former CEO of Intel, famously said. It might be true. But we also know that the paranoid often destroy themselves quicker and more spectacularly than any enemy. Seneca, with his access and insight into the most powerful elite in Rome, would have seen this dynamic play out quite vividly. Nero, the student whose excesses Seneca tried to curb, killed not only his own mother and wife but eventually turned on Seneca, his mentor, too.</p><p>The combination of power, fear, and mania can be deadly. The leader, convinced that he might be betrayed, acts first and betrays others first. Afraid that he's not well liked, he works so hard to get others to like him that it has the opposite effect. Convinced of mismanagement, he micromanages and becomes the source of the mismanagement. And on and on&mdash;the things we fear or dread, we blindly inflict on ourselves.</p><p>The next time you are afraid of some supposedly disastrous outcome, remember that if you don't control your impulses, if you lose your self-control, you may be the very source of the disaster you so fear. It has happened to smarter and more powerful and more successful people. It can happen to us too.</p>",
    "thoughts": ""
  },
  {
    "date": "February 8",
    "topic": "Did That Make You Feel Better",
    "quotes": [
      {
        "quote": "You cry, &lsquo;I'm suffering severe pain!&rsquo; Are you then relieved from feeling it if you bear it in an unmanly way?",
        "author": "Seneca",
        "source": "Moral Letters, 78.17"
      }
    ],
    "notes": "<p>The next time someone gets upset near you&mdash;crying, yelling, breaking something, being pointed or cruel&mdash;watch how quickly this statement will stop them cold: <q>I hope this is making you feel better.</q> Because, of course, it isn't. Only in the bubble of extreme emotion can we justify any of that kind of behavior&mdash;and when called to account for it, we usually feel sheepish or embarrassed.</p><p>It's worth applying that standard to yourself. The next time you find yourself in the middle of a freakout, or moaning and groaning with yourself in the flulike symptoms, or crying tears of regret, just ask: <em>Is this actually making me feel better? Is this actually relieving any of the symptoms I wish were gone?</em></p>",
    "thoughts": "<blockquote>Others may hurt you, but your mind can remain calm. When the mind is disciplined, suffering cannot disturb you.<br><cite>&mdash;Dhammapada, 6</cite></blockquote><blockquote>If there is a remedy, then what is the use of frustration? If there is no remedy, then what is the use of frustration?<br><cite>&mdash;Shantideva</cite></blockquote>"
  },
  {
    "date": "February 9",
    "topic": "You Don't Have to Have an Opinion",
    "quotes": [
      {
        "quote": "We have the power to hold no opinion about a thing and to not let it upset our state of mind&mdash;for things have no natural power to shape our judgments.",
        "author": "Marcus Aurelius",
        "source": "Meditations 6.52"
      }
    ],
    "notes": "<p>Here's a funny exercise: think about all the upsetting things you <em>don't</em> know about&mdash;stuff people might have said about you behind your back, mistakes you might have made that never came to your attention, things you dropped or lost without even realizing it.  What's your reaction? You don't have one because you don't know about it.</p><p>In other words, it <em>is</em> possible to hold no opinion about a negative thing.  You just need to cultivate that power instead of wielding it accidentally.  Especially when having an opinion is likely to make us aggravated.  Practice the ability of having absolutely no thoughts about something&mdash;act as if you had no idea it ever occurred. Or that you've never heard of it before.  Let it become irrelevant or nonexistent to you.  It'll be a lot less powerful this way.</p>",
    "thoughts": "<blockquote>Opinions are like nails; the more you hammer them, the deeper they go.  <br><cite>&mdash;Unknown</cite></blockquote><blockquote>Don't waste your time with explanations: people only hear what they want to hear.  <br><cite>&mdash;Paulo Coelho</cite></blockquote><blockquote>Those who know do not speak; those who speak do not know.  <br><cite>&mdash;Lao Tzu, <em>Tao Te Ching</em>, 56</cite></blockquote><blockquote>The wise man speaks because he has something to say; the fool speaks because he has to say something.  <br><cite>&mdash;Plato (attributed)</cite></blockquote><blockquote>If you wish to be wise, learn to question reasonably, listen carefully, respond cautiously, and keep silent when you have nothing to say.  <br><cite>&mdash;Johann Kaspar Lavater</cite></blockquote><blockquote>Better to remain silent and be thought a fool than to speak and remove all doubt.  <br><cite>&mdash;Mark Twain (attributed)</cite></blockquote><blockquote>Even fools are thought wise if they keep silent, and discerning if they hold their tongues.  <br><cite>&mdash;Proverbs 17:28</cite></blockquote>"
  },
  {
    "date": "February 10",
    "topic": "Anger is Bad Fuel",
    "quotes": [
      {
        "quote": "There is no more stupefying thing than anger, nothing more bent on its own strength. If successful, none more arrogant, if foiled, none more insane&mdash;since it's not driven back by weariness even in defeat, when fortune removes its adversary it turns its teeth on itself.",
        "author": "Seneca",
        "source": "On Anger, 3.1.5"
      }
    ],
    "notes": "<p>As the Stoics have said many times, getting angry almost never solves anything.  Usually, it makes things worse. We get upset, then the other person gets upset&mdash;now everyone is upset, and the problem is no closer to getting solved. </p><p>Many successful people will try to tell you that anger is a powerful fuel in their lives.  The desire to <q>prove them all wrong</q> or <q>shove it in their faces</q> has made many a millionaire.  The anger at being called fat or stupid had created fine physical specimens and brilliant minds. The anger at being rejected has motivated many to carve their own path.</p><p>But that's shortsighted.  Such stories ignore the pollution produced as a side effect and the wear and tear it put on the engine.  It ignores what happens when that initial anger runs out&mdash;and how now more and more must be generated to keep the machine going (until, eventually, the only source left is anger at oneself). <q>Hate is too great a burden to bear,</q> Martin Luther King Jr. warned his fellow civil rights leaders in 1967, even though they had every reason to respond to hate with hate.</p><p>The same is true for anger&mdash;in fact, it's true for most extreme emotions. They are toxic fuel. There's plenty of it out in the world, no question, but never worth the costs that come along with it.</p>",
    "thoughts": "What the Buddha said about anger<ul><li>Anger is a form of suffering.</li><li>Anger is one of the three <q>unwholesome roots</q> of the mind.</li><li>Anger is self-sabotaging.</li><li>Holding onto anger is like holding a hot coal in your hand.</li><li>You will be punished by your anger, not for it.</li><li>Anger can never remove anger.</li></ul></ul><br><blockquote>Holding onto anger is like drinking poison and expecting the other person to die.  <br><cite>&mdash;Buddha (attributed)</cite></blockquote><blockquote>One should give up anger, renounce pride, and overcome all fetters. No suffering befalls one who clings to nothing.  <br><cite>&mdash;Dhammapada, 221-222</cite></blockquote><blockquote>A wise man watches his anger as a traveler watches passing clouds&mdash;acknowledging, but not grasping.  <br><cite>&mdash;Unknown</cite></blockquote><blockquote>Whatever is begun in anger ends in shame.  <br><cite>&mdash;Banjamin Franklin</cite></blockquote>"
  },
  {
    "date": "February 11",
    "topic": "Hero or Nero?",
    "quotes": [
      {
        "quote": "Our soul is sometimes a king, and sometimes a tyrant.  A king, by attending to what is honorable, protects the good health of the body in its care, and gives it no base or sordid command.  But an uncontrolled, desire-fueled, over-indulged soul is turned from a king into that most feared and detested thing&mdash;a tyrant.",
        "author": "Seneca",
        "source": "Moral Letters, 114.24"
      }
    ],
    "notes": "<p>There is that saying that absolute power corrupts absolutely. At first glance, that's true.  Seneca's pupil, Nero, and his litany of crimes and murders is a perfect example. Another emperor, Domitian, arbitrarily banished all philosophers from Rome (Epictetus was forced to flee as a result). Many of Rome's emperors were tyrants. Yet, not many years later, Epictetus would become a close friend of another emperor, Hadrian, who would help Marcus Aurelius to the throne, one of the truest examples of a wise philosopher king.</p><p>So, it's not so clear that power <em>always</em> corrupts. In fact, it looks like it comes down, in many ways to the inner strength and self-awareness of individuals&mdash;what they value, what desires they keep in check, whether their understanding of fairness and justice can counteract the temptations of unlimited wealth and deference.</p><p>The same is true for you. Both personally and professionally. Tyrant or king? Hero or Nero? Which will you be?</p>",
    "thoughts": ""
  },
  {
    "date": "February 12",
    "topic": "Protect Your Peace of Mind",
    "quotes": [
      {
        "quote": "Keep constant guard over your perceptions, for it is no small thing you are protecting, but your respect, trustworthiness and steadiness, peace of mind, freedom from pain and fear, in a word your freedom. For what would you sell these things?",
        "author": "Epictetus",
        "source": "Discourses, 4.3.6b-8"
      }
    ],
    "notes": "<p>The dysfunctional job that stresses you out, a contentious relationship, life in the spotlight. Stoicism, because is helps us manage and think through our emotional reactions, can make these kinds of situations easier to bear.  It can help you manage and mitigate the triggers that seem to be so constantly tripped. </p><p>But here's a question: Why are you subjecting yourself to this?  Is this really the environment you were made for?  To be provoked by nasty emails and an endless parade of workplace problems?  Our adrenal glands can handle only so much before they become exhausted.  Shouldn't you preserve them for life-and-death situations? </p><p>So yes, use Stoicism to manage these difficulties.  But don't forge to ask: <em>Is this really the life I want?</em> Every time you get upset, a little bit of life leaves the body. Are these really the things on which you want to spend that priceless resource? Don't be afraid to make a change&mdash;a big one.</p>",
    "thoughts": ""
  },
  {
    "date": "February 13",
    "topic": "Pleasure Can Become Punishment",
    "quotes": [
      {
        "quote": "Whenever you get an impression of some pleasure, as with any impression, guard yourself from being carried away by it, let it await your action, give yourself a pause.  After that, bring to mind both times, first when you have enjoyed the pleasure and later when you will regret it and hate yourself.  Then compare to those the joy and satisfaction you'd feel for abstaining altogether.  However, if a seemingly appropriate time arises to act on it, don't be overcome by its comfort, pleasantness, and allure&mdash;but against all of this, how much better the consciousness of conquering it.",
        "author": "Epictetus",
        "source": "Enchiridion, 34"
      }
    ],
    "notes": "<p>Self-Control is a difficult thing, no question.  Which is why a popular trick from dieting might be helpful.  Some diets allow a <q>cheat day</q>&mdash;one day per week in which dieters can eat anything and everything they want.  Indeed, they're encouraged to write a list during the week of all the foods they craved so they can enjoy them all at once as a treat (the thinking being that if you're eating healthy six out of seven days, you're still ahead).</p><p>At first, this sounds like a dream, but anyone who has actually done this knows the truth: each cheat day you eat yourself sick and hate yourself afterward.  Soon enough, you're willingly abstaining from cheating at all.  Because you don't need it, and you definitely don't want it.  It's not unlike a parent catching her child with cigarettes and forcing him to smoke the whole pack.</p><p>It's important to connect the so-called temptation with its actual effects.  Once you understand that indulging might actually be worse that resisting, the urge begins to lose its appeal.  In this way, self-control becomes the real pleasure, and the temptation becomes the regret.</p>",
    "thoughts": ""
  },
  {
    "date": "February 14",
    "topic": "Think Before You Act",
    "quotes": [
      {
        "quote": "For to be wise is only one thing&mdash;to fix our attention on our intelligence, which guides all things everywhere.",
        "author": "Heraclitus",
        "source": "Lives of the Eminent Philosophers, 9.1"
      }
    ],
    "notes": "<p><em>Why did I do that?</em> you've probably asked yourself.  We all have.  <em>How could I have been so stupid?  What was I thinking?</em></p><p>You weren't&mdash;that's the problem.  Within that head of yours is all the reason and intelligence you need.  It's making sure that it's deferred to and utilized that's the tough part.  It's making sure your mind is in charge, not your emotions, not your immediate physical sensations, not your surging hormones.</p><p>Fix your attention on your intelligence.  Let it do its thing.</p",
    "thoughts": ""
  },
  {
    "date": "February 15",
    "topic": "Only Bad Dreams",
    "quotes": [
      {
        "quote": "Clear your mind and get a hold on yourself and, as when awakened from sleep and realizing it was only a bad dream upsetting you, wake up and see that what's there is just like those dreams.",
        "author": "Marcus Aurelius",
        "source": "Meditations 6.31"
      }
    ],
    "notes": "<p>The author Raymond Chandler was describing most of use when he wrote in a letter to his publisher, <q>I never looked back, although I had many uneasy periods looking forward.</q>  Thomas Jefferson once joked in a letter to John Adams, <q>How much pain have cost us the evils which have never happened!</q>  And Seneca would put it best: <q>There is nothing so certain in our fear that's not yet more certain in the fact that most of what we dread comes to nothing.</q></p><p>Many of the things that upset us, the Stoics believed, are a product of the imagination, not reality.  Like dreams, they are vivid and realistic at the time but preposterous once we come out of it.  In a dream, we never stop to think and say: <q>Does this make any sense?</q>  No, we go along with it.  The same goes with our flights of anger or fear or other extreme emotions.</p><p>Getting upset is like continuing the dream while you're awake.  The thing that provoked you wasn't real&mdash;but your reaction was.  And so from the fake comes real consequences.  Which is why you need to wake up right now instead of creating a nightmare.</p>",
    "thoughts": ""
  },
  {
    "date": "February 16",
    "topic": "Don't Make Things Harder Than They Need To Be",
    "quotes": [
      {
        "quote": "If someone asks you how to write your name, would you bark out each letter?  And if they get angry, would you then return the anger?   Wouldn't you rather gently spell out each letter for them?  So then, remember in life that your duties are the sum of individual acts.  Pay attention to each of these as you do your duty … just methodically complete your task.",
        "author": "Marcus Aurelius",
        "source": "Meditations 6.26"
      }
    ],
    "notes": "<p>Here's a common scenario.  You're working with a frustrating coworker or a difficult boss.  They ask you to do something and, because you dislike the messenger, you immediately object.  There's this problem or that one, or their request is obnoxious and rude.  So you tell them, <q>No, I'm not going to do it.</q>  Then they retaliate by not doing something that you had previously asked of them.  And so the conflict escalates.</p><p>Meanwhile, if you could step back and see it objectively, you'd probably see that not <em>everything</em> they're asking for is unreasonable.  In fact, some of it is pretty easy to do or is, at least, agreeable.  And if you did it, it might make the rest of the tasks a bit more tolerable too.  Pretty soon, you've done the entire thing.</p><p>Life (and our job) is difficult enough.  Let's not make it harder by getting emotional about insignificant matters or digging in for battles we don't actually care about.  Let's not let emotion get in the way of <i lang=\"el\">καθῆκον</i>, the simple, appropriate actions on the path to virtue.</p>",
    "thoughts": ""
  },
  {
    "date": "February 17",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 18",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 19",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 20",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 21",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 22",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 23",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 24",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 25",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 26",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 27",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 28",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "February 29",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 1",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 2",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 3",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 4",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 5",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 6",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 7",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 8",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 9",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 10",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 11",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 12",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 13",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 14",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 15",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 16",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 17",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 18",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 19",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 20",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 21",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 22",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 23",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 24",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 25",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 26",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 27",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 28",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 29",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 30",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "March 31",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 1",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 2",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 3",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 4",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 5",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 6",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 7",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 8",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 9",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 10",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 11",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 12",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 13",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 14",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 15",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 16",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 17",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 18",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 19",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 20",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 21",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 22",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 23",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 24",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 25",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 26",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 27",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 28",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 29",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "April 30",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 1",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 2",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 3",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 4",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 5",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 6",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 7",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 8",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 9",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 10",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 11",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 12",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 13",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 14",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 15",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 16",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 17",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 18",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 19",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 20",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 21",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 22",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 23",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 24",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 25",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 26",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 27",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 28",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 29",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 30",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "May 31",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 1",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 2",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 3",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 4",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 5",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 6",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 7",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 8",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 9",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 10",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 11",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 12",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 13",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 14",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 15",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 16",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 17",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 18",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 19",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 20",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 21",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 22",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 23",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 24",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 25",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 26",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 27",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 28",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 29",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "June 30",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 1",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 2",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 3",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 4",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 5",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 6",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 7",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 8",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 9",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 10",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 11",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 12",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 13",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 14",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 15",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 16",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 17",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 18",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 19",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 20",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 21",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 22",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 23",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 24",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 25",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 26",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 27",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 28",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 29",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 30",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "July 31",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 1",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 2",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 3",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 4",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 5",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 6",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 7",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 8",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 9",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 10",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 11",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 12",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 13",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 14",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 15",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 16",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 17",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 18",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 19",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 20",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 21",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 22",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 23",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 24",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 25",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 26",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 27",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 28",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 29",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 30",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "August 31",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 1",
    "topic": "A Strong Soul is Better than Good Luck",
    "quotes": [
      {
        "quote": "The rational soul is stronger than any kind of fortune&mdash;from its own share it guides its affairs here or there, and is itself the cause of a happy or miserable life.",
        "author": "Seneca",
        "source": "Moral Letters, 98.2b"
      }
    ],
    "notes": "<p>Cato the Younger had enough money to dress in fine clothing. Yet he often walked around Rome barefoot, indifferent to assumptions people made about him as he passed. He could have indulged in the finest food. He chose instead to eat simple fare. Whether it was raining or intensely hot, he went bareheaded by choice.</p><p>Why not indulge in some easy relief? Because Cato was training his soul to be strong and resilient. Specifically, he was learning indifference: an attitude of <q>let come what may</q> that would serve him well in the trenches with the army, in the Forum and the Senate, and in his life as a father and statesman.</p><p>His training prepared him for any conditions, any kind of luck. If we undergo our own training and preparations, we might find ourselves similarly strengthened.</p>",
    "thoughts": ""
  },
  {
    "date": "September 2",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 3",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 4",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 5",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 6",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 7",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 8",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 9",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 10",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 11",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 12",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 13",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 14",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 15",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 16",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 17",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 18",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 19",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 20",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 21",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 22",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 23",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 24",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 25",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 26",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 27",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 28",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 29",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 30",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "September 31",
    "topic": "",
    "quotes": [{ "quote": "", "author": "", "source": "" }],
    "notes": "<p></p>",
    "thoughts": ""
  },
  {
    "date": "October 1",
    "topic": "Let Virture Shine Bright",
    "quotes": [
      {
        "quote": "Does the light of a lamp shine and keep its glow until its fuel is spent? Why shouldn't your truth, justice, and self-control shine until you are extinguished?",
        "author": "Marcus Aurelius",
        "source": "Meditations, 12.15"
      }
    ],
    "notes": "<p>Seneca, repeating Heraclitus, writes that <q>we mortals are lighted and extinguished.</q> The light of reason suffuses the universe.  Whether the wick of your lamp is being lit for the first time, after a long period of darkness, or even right before the proverbial big sleep, it makes no difference.</p><p>Here is where you are now, and it's a good a place as any to let virtue shine and continue to shine for as long as you exist.</p>",
    "thoughts": ""
  },
  {
    "date": "October 2",
    "topic": "The Most Valuable Asset",
    "quotes": [
      {
        "quote": "But the wise person can lose nothing. Such a person has everything stored up for themselves, leaving nothing to Fortune, their own goods are held firm, bound in virtue, which requires nothing from chance, and therefore can't be either increased or diminished.",
        "author": "Seneca",
        "source": "On the Firmness of the Wise, 5.4"
      }
    ],
    "notes": "<p>Some people put their money in assets&mdash;stocks, bonds, property. Others invest in relationships or accomplishments, knowing that they can draw on these things just as easily as others can draw funds from a bank account. But a third type, Seneca says, invests in themselves&mdash;in being a good and wise person.</p><p>Which of these assets is most immune to market fluctuations and disasters? Which is most resilient in the face of trials and tribulations? Which will never abandon you? Seneca's own life is an interesting example. He became quite wealthy as a friend of the emperor, but as Nero became more and more deranged, Seneca realized he needed to get out. He offered Nero a deal; he would give Nero all his money and return all of Nero's gifts in exchange for complete and total freedom.</p><p>Ultimately, Nero rejected this offer, but Seneca left anyway, retiring in relative peace.  But one day, the executioners came with their mortal decree. In that moment, what did Seneca rely on? It wasn't his money. It wasn't his friends, who, although they meant well, were a considerable source of grief and mourning. It was his virtue and inner strength.</p><p>It was Seneca's most trying moment&mdash;his last and his finest.</p>",
    "thoughts": "Don't forget your woobies"
  },
  {
    "date": "October 3",
    "topic": "A Mantra of Mutual Interdependence",
    "quotes": [
      {
        "quote": "Meditate often on the interconnectedness and mutual interdependence of all things in the universe. For in a sense, all things are mutually interwoven together and therefore have an affinity for each other&mdash;for one thing follows after another according to their tension of movement, their sympathetic stirrings, and the unity of all substance.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 6.38"
      }
    ],
    "notes": "<p>Ann Lamott once observed that all writers <em>are little rivers running into one lake,</em> all contributing to the same big project. The same is true in many industries&mdash;though sadly, even inside the same company, people selfishly forget they're working together. As human beings we all breathe the atoms that make up our ancestors and flow into the same earth when we die.</p><p>Over and over again, the Stoics reminded themselves of the interconnectedness of life. Perhaps that was because life in Greece and Rome was particularly harsh. Animals and people were slaughtered senselessly to amuse the masses in the Colosseum (events lamented in the Stoic writings). Countries were conquered and its citizens sold into slavery to expand the empire (the futility of which the Stoics also lamented). This kind of cruelty is possible only when we forget how we're related to our fellow human beings and the environment.</p><p>Today, take a moment to remember that we are woven together that each of us plays a role (good, bad, or ugly) in this world.</p>",
    "thoughts": ""
  },
  {
    "date": "October 4",
    "topic": "All For One, One For All",
    "quotes": [
      {
        "quote": "That which isn't good for the hive, isn't good for the bee.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 6.54"
      }
    ],
    "notes": "<p>Inherent in the Stoic concept of <em>sympatheia</em> is the notion of an interconnected cosmos in which everything in the universe is part of a larger whole. Marcus Aurelius was one of the firt writers to articulate the notion of cosmopolitanism &mdash;saying that he was a citizen of the world, not just Rome.</p><p>The idea that you're a bee in the hive is a reminder of this perspective. Marcus even states the reverse of that idea later in his <em>Meditations</em>, just so he doesn't forget: <q>That which doesn't harm the community can't harm the individual.</q></p><p>Just because something is bad for you doesn't mean it's bad for everyone. Just because something is good for you definitely doesn't mean its good for everyone. Think of the hedge fund managers who bet massively against the economy&mdash;they profited by rooting for essentially everyone and everything else to fail. Is that who you want to be? A good Stoic understands that proper impulses, and the right actions that arise from them, naturally carry the good of the whole, which is the wise person's only good. Conversely, good and wise actions by the whole are what's good for the individual.</p>",
    "thoughts": ""
  },
  {
    "date": "October 5",
    "topic": "Words Can't Be Unsaid",
    "quotes": [
      {
        "quote": "Better to trip with the feet than with the tongue.",
        "author": "Zeno, QUOTED IN DIOGENES LAERTIUS",
        "source": "Lives of the Eminent Philosophers, 7.1.26"
      }
    ],
    "notes": "<p>You can always get up after you fall but remember, what has been said can never be unsaid.  Especially cruel and  hurtful things.</p>",
    "thoughts": ""
  },
  {
    "date": "October 6",
    "topic": "Look Out for Each Other",
    "quotes": [
      {
        "quote": "It's in keeping with Nature to show our friends affection and to celebrate their advancement, as if it were our very own. For if we don't do this, virtue, which is strengthened only by exercising our perceptions, will no longer endure in us.",
        "author": "Seneca",
        "source": "Moral Letters, 109.15"
      }
    ],
    "notes": "<p>Watching other people succeed is one of the toughest things to do&mdash;especially if we are not doing well ourselves. In our hunter-gatherer minds, we suspect that life is a zero-sum game&mdash;that for someone to have more means that we might end up with less.</p><p>But like all parts of philosophy, empathy and selflessness are a matter of practice. As Seneca observed, it's possible to learn to <q>rejoice in all their successes and be moved by their every failure.</q> This is what a virtuous person does.</p><p>They teach themselves to actively cheer for other people&mdash;even in cases where that might come at their own expense&mdash;and to put aside jealousy and possessiveness. You can do that too.</p>",
    "thoughts": ""
  },
  {
    "date": "October 7",
    "topic": "A Selfish Reason to be Good",
    "quotes": [
      {
        "quote": "The person who does wrong, does wrong to themselves. The unjust person is unjust to themselves&mdash;making themselves evil.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 9.4"
      }
    ],
    "notes": "<p>The next time you do something wrong, try to remember how it made you feel.  Rarely does one say, <q>I feel great!</q></p><p>There is a reason there's often vomit at crime scenes. Instead of the catharsis the person thought they'd feel when they let themselves get out of control or when they got their revenge, they ended up making themselves sick. We feel a version of this when we lie, when we cheat, when we screw someone over.</p><p>So in that split second before your ill-gotten gains kick in, ask: <em>How do I feel about myself?</em> Is that moment when fear rises in your throat because you suspect you may get caught really worth it?</p><p>Self-awareness and wrongdoing rarely go together. If you need a selfish reason to not do wrong&mdash;put yourself in touch with these feelings. They're a powerful disincentive.</p>",
    "thoughts": ""
  },
  {
    "date": "October 8",
    "topic": "A Higher Pleasure",
    "quotes": [
      {
        "quote": "Yes, getting your wish would have been so nice. But isn't that exactly why pleasure trips us up? Instead, see if these things might be ever nicer&mdash;a great soul, freedom, honesty, kindness, saintliness. For there is nothing so pleasing as wisdom itself, when you consider how sure-footed and effortless the works of understanding and knowledge are.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 5.9"
      }
    ],
    "notes": "<p>Nobody can argue that pleasure doesn't <em>feel</em> good. That's pretty much what it does by definition.</p><p>But today Marcus Aurelius is reminding you&mdash;just as he reminded himself&mdash;that those pleasures hardly stand up to virtue. The dopamine rush that comes from sex is momentary. So is the pride of an accomplishment or the hearty applause of a crowd. These pleasures are powerful, but they wear off and leave us wanting more. What last longer (and remains more within our circle of control)? Wisdom, good character, sobriety, and kindness.</p>",
    "thoughts": ""
  },
  {
    "date": "October 9",
    "topic": "Set the Standards and Use Them",
    "quotes": [
      {
        "quote": "When the standards have been set, things are tested and weighed. And the work of philosophy is just this, to examine and uphold the standards, but the work of a truly good person is in using those standards when they know them.",
        "author": "Epictetus",
        "source": "Discourses, 2.11.23-25"
      }
    ],
    "notes": "<p>We go through our days responding and reacting, but it's rare to really pause and ask: <em>Is this thing I'm about to do consistent with what I believe?</em> Or better: <em>Is this the kind of thing the person I would like to be should do?</em> <p>The work of living is to set standards and then <em>not</em> compromise them. When you're brushing your teeth, choosing your friends, losing your temper, falling in love, instructing your child, or walking your dog&mdash;all of these are opportunities.</p><p>Not, <em>I want to do good</em>&mdash;that's an excuse. But, <em>I will do good in this particular instance, right now.</em> Set a standard; hold fast to it. That's all there is.</p>",
    "thoughts": ""
  },
  {
    "date": "October 10",
    "topic": "Reverence and Justice",
    "quotes": [
      {
        "quote": "Leave the past, let the grand design take care of the future, and instead only rightly guid the present to reverence and justice. Reverence so that you'll love what you've been allotted, for nature brought you both to each other. Justice so that you'll speak the truth freely and without evasion, and so that you'll act only as the law and value of things require.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 12.1"
      }
    ],
    "notes": "<p>Aulus Gellius relates that Epictetus once said, <q>If anyone would take two words to hear and take pains to govern and watch over themselves by them, they will live an impeccable and immensely tranquil life. The two words are: persist and resist.</q> That's great advice. But what principles should determine what we persist in and what ought to resist?</p><p>Marcus supplies that answer: reverence and justice. In other words, virtue.</p>",
    "thoughts": ""
  },
  {
    "date": "October 11",
    "topic": "Honesty as our Default",
    "quotes": [
      {
        "quote": "How rotten and fraudulent when people say they intend to 'give it to you straight.' What are you up to, dear friend? It shouldn't need your announcement, but be readily seen, as if written on your forehead, heard in the ring of your voice, a flash in you eyes&mdash;just as the beloved sees it all in the lover's glance. In short, the straight-forward and good person should be like a smelly goat&mdash;you know when they are in the room with you.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 11.15"
      }
    ],
    "notes": "<p>All of us have used phrases like that before.<q>I'm going to be straight-forward with you here...</q> <q>I'll be honest...</q> <q>No disrespect but...</q> Empty expressions or not, they prompt the question: If you have to preface your remarks with indicators of honesty or directness, what does that say about everything else you say? If you say you're being honest <em>now</em>, does that mean you usually aren't?</p><p>What if, instead, you cultivated a life and reputation in which honesty was as bankable as a note from the U.S. Treasury, as emphatic and explicit as a contract, as permanent as a tattoo? Not only would it save you from needing to use the reassurances that other, less scrupulous people must engage in, it will make you a better person.</p>",
    "thoughts": ""
  },
  {
    "date": "October 12",
    "topic": "Always Love",
    "quotes": [
      {
        "quote": "Hecto says, <q>I can teach you a love potion made without any drugs, herbs, or special spell&mdash;if you would be loved, love.</q>",
        "author": "Seneca",
        "source": "Moral Letters, 9.6"
      }
    ],
    "notes": "<p>In 1992, Barbara Jordan addressed the Democratic National Convention and railed against the greed and selfishness and divisiveness of the previous decade. People were ready for a change. <q>Change it to what?</q> she asked. <q>Change that environment of the 80s to an environment which is characterized by a devotion to the public interest, public service, tolerance, and love. Love. Love. Love.</q></p><p>Love. Love. Love. Love. Why? Because, as the Beatles put it, <q>In the end, the love you take is equal to the love you make.</q> Not just in politics, not just in tolerance, but in our personal lives. There is almost no situation in which hatred helps. Yet almost every situation is made better by love&mdash;or empathy, understanding, appreciation&mdash;even situations in which you are in opposition to someone.</p><p>And who knows, you might just get some of that love back.</p>",
    "thoughts": ""
  },
  {
    "date": "October 13",
    "topic": "Revenge is a Dish Best Not Served",
    "quotes": [
      {
        "quote": "The best way to avenge yourself is to not be like that.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 6.6"
      },
      {
        "quote": "How much better to heal than seek revenge from injury. Vengeance wastes a lot of time and exposes you to many more injuries than the first that sparked it. Anger always outlasts hurt. Best to take the opposite course. Would anyone think it normal to return a kick to a mule or a bite to a dog?",
        "author": "Seneca",
        "source": "On Anger, 3.27.2"
      }
    ],
    "notes": "<p>Let's say that someone has treated you rudely. Let's say someone got promoted ahead of you because they took credit for your work or did something dishonest. It's natural to think: <em>Oh, that's how the world works</em>, or <em>One day it will be my turn to be like that</em>. Or most common: <em>I'll get them for this</em>. Except these are the worst possible responses to bad behavior.</p><p>As Marcus and Seneca both wrote, the proper response&mdash;indeed the best revenge&mdash;is to exact no revenge at all. If someone treats you rudely and you respond with rudeness, you have not done anything but prove to them that they were justified in their actions. If you meet other people's dishonesty with dishonesty of your own, guess what? You're proving them right&mdash;now everyone <em>is</em> a liar.</p><p>Instead, today, let's seek to be better than the things that disappoint or hurt us. Let's try to be the example we'd like others to follow. It's awful to be a cheat, to be selfish, to feel the need to inflict pain on our fellow human beings. Meanwhile, living morally and well is quite nice.</p>",
    "thoughts": ""
  },
  {
    "date": "October 14",
    "topic": "Don't Get Mad, Help",
    "quotes": [
      {
        "quote": "Are you angry when someone's armpits stink or when their breath is bad? What would be the point? Having such a mouth and such armpits, there's going to be a smell emanating. You say, they must have sense, can't they tell how they are offending others? Well, you have sense too, congratulations! So, use your natural reason to awaken theirs, show them, call it out. If the person will listen, you will have cured them without useless anger. No drama nor unseemly show required.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 5.28"
      }
    ],
    "notes": "<p>The person sitting next to you on the plane, the one who is loudly chattering and knocking around in your space? The one you're grinding your teeth about, hating from the depth of your soul because they're rude, ignorant, obnoxious? In these situations, you might feel it takes everything you have to restrain yourself from murdering them.</p><p>It's funny how <em>that</em> thought comes into our heads before, you know, politely asking them to stop, or making the minor scene of asking for an awkward conversation that might actually help this person and make the world a better place. We don't just want people to be better, we expect it to magically happen&mdash;that we can simply will other people to change, burning holes into their skull with our angry stare.</p><p>Although when you think about it that way, it makes you wonder who the rude one actually is.</p>",
    "thoughts": ""
  },
  {
    "date": "October 15",
    "topic": "Spread the Word",
    "quotes": [
      {
        "quote": "Some people with exceptional minds quickly grasp virtue, or produce it within themselves. But other dim and lazy types, hindered by bad habits, must have their rusty souls constantly scrubbed down.... The weaker sorts will be helped and lifted from their bad opinions if we put them in the care of philosophy's principles.",
        "author": "Seneca",
        "source": "Moral Letters, 95.36-37"
      }
    ],
    "notes": "<p>Stoicism is not an evangelical religion. You're not obligated to save anyone&mdash;there's no hell if a soul remains in ignorance of the teachings of Epictetus or Marcus Aurelius.</p><p>But now that you've learned and studied a better path, you can be of service to others. You can share your wisdom or insight with a friend or stranger&mdash;remembering that behavior is always a better example than a lecture.</p><p>Everyone deserves to benefit from <q>philosophy's principles</q> as Seneca put it. If you see someone who is in need of help, or has asked for guidance, provide it. You owe them that much.</p>",
    "thoughts": ""
  },
  {
    "date": "October 16",
    "topic": "Spread the Word",
    "quotes": [
      {
        "quote": "Some people with exceptional minds quickly grasp virtue, or produce it within themselves. But other dim and lazy types, hindered by bad habits, must have their rusty souls constantly scrubbed down... The weaker sorts will be helped and lifted from their bad opinions if we put them in the care of philosophy's principles.",
        "author": "Seneca",
        "source": "Moral Letters, 95.36-37"
      }
    ],
    "notes": "<p>Stoicism is not an evangelical religion. You're not obligated to save anyone&mdash;there's no risk of hell if a soul remains in ignorance of the teachings of Epictetus or Marcus Aurelius.</p><p>But now that you've learned and studied a better path, you can be of service to others. You can share your wisdom or insight with a friend or stranger&mdash;remembering that behavior is always a better example than a lecture.</p><p>Everyone deserves to benefit from <q>philosophy's principles</q> as Seneca put it. If you see someone who is in need of help, or has asked for guidance, provide it. You owe them that much.</p>",
    "thoughts": ""
  },
  {
    "date": "October 17",
    "topic": "The Benefit of Kindness",
    "quotes": [
      {
        "quote": "A benefit should be kept like a buried treasure, only to be dug up in necessity....Nature bids us to do well by all....Wherever there is a human being, we have an opportunity for kindness.",
        "author": "Seneca",
        "source": "On The Happy Life, 24.2-3"
      }
    ],
    "notes": "<p>The first person you meet today&mdash;passing acquaintance or friend&mdash;no matter the context&mdash;positive or negative&mdash;is an opportunity for kindness. Or as different translators have taken this line from Seneca to mean, it is an opportunity for <em>benefit</em>. For both of you. You can seek to understand where they are coming from. You can seek to understand who they are, what they need, and what forces or impulses might be acting on them. And you can treat them well and be better off for it.</p><p>The same is true with the second person you encounter, and the third. Of course, there is no guarantee that they will return the favor, but that's not our concern. As always, we're going to focus on what we control: in this case, the ability to choose to respond with kindness.</p>",
    "thoughts": ""
  },
  {
    "date": "October 18",
    "topic": "Frenemies",
    "quotes": [
      {
        "quote": "There's nothing worse than a wolf befriending a sheep. Avoid false friendship at all costs. If you are good, straightforward, and well meaning it should show in your eyes and not escape notice.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 11.15"
      }
    ],
    "notes": "<p>It's pretty obvious that one should keep away from the wicked and two-faced as much as possible&mdash;the jealous friend, the narcissistic parent, the untrustworthy partner. At first glance, Marcus Aurelius is reminding us to avoid false friends.</p><p>But what if we turn it around? What if, instead, we ask about the times that we have been false to <em>our</em> friends.</p><p>We've all been a frenemy at one point or another. We've been nice to their face&mdash;usually because there was something in it for us&mdash;but later, in different company, we said how we really felt. Or we've strung someone along, cared only when things were going well, or declined to help even though someone really needed us.</p><p>This behavior is beneath us&mdash;and worth remembering the next time we accuse someone else of being a bad friend.</p>",
    "thoughts": ""
  },
  {
    "date": "October 19",
    "topic": "Good Habits Drive Out Bad Habits",
    "quotes": [
      {
        "quote": "Since habit is such a powerful influence, and we're used to pursuing our impulses to gain and avoid outside our own choice, we should set a contrary habit against that, and where appearances are really slippery, use the counterforce of our training.",
        "author": "Epictetus",
        "source": "Discourses, 3.12.6"
      }
    ],
    "notes": "<p>When a dog is barking loudly because someone is at the door, the worst thing you can do is yell. To the dog, it's like you're barking too! When a dog is running away, it's not helpful to chase it&mdash;again, now it's like you're both running. A better option in both scenarios is to give the dog something else to do. Tell it to sit. Tell it to go to its bed or kennel. Run in the other direction. Break the pattern, interrupt the negative impulse.</p><p>The same goes for us. When a bad habit reveals itself, counteract it with a commitment to a contrary virtue. For instance, let's say you find yourself procrastinating today&mdash;don't dig in and fight it. Get up and take a walk to clear your head and reset instead. If you find yourself saying something negative or nasty, don't kick yourself. Add something positive and nice to qualify the remark.</p><p>Oppose established habits, and use the counterforce of training to get traction and make progress. If you find yourself cutting corners during a a workout or on a project, say to yourself: <q>OK, now I am going to go even further or do even better.</q></p><p>Good habits have the power to drive out bad habits. And habits are easy to pick up&mdash;as we all know.</p>",
    "thoughts": ""
  },
  {
    "date": "October 20",
    "topic": "Marks of the Good Life",
    "quotes": [
      {
        "quote": "You have proof in the extent of your wanderings that you never found the art of living anywhere&mdash;not in logic, nor in wealth, fame, or in any indulgence. Nowhere. Where is it then? In doing what human nature demands. How is a person to do this? By having principles be the source of desire and action. What principles? Those to do with good and evil, indeed in the belief that there is no good for a human being except what creates justice, self-control, courage and freedom, and nothing evil except what destroys these things.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 8.1.(5)"
      }
    ],
    "notes": "<p><em>What is the meaning of life? Why was I born?</em> Most of us struggle with these questions&mdash;sometimes when we're young, sometimes not until we're older. Rarely do we find much in the way of direction. But that's simply because we miss the point. As Viktor Frankl points out in <cite>Man's Search for Meaning</cite>, it is not our question to ask. Instead, it is <em>we</em> who are being asked the question. It's our lives that are the answer.</p><p>No amount of travel or reading or clever sages can tell you what you want to know. Instead, it is <em>you</em> who must find the answer in your actions, in living the good life&mdash;by embodying the self-evident principles of justice, self-control, courage, freedom, and abstaining from evil.</p>",
    "thoughts": ""
  },
  {
    "date": "October 21",
    "topic": "Heroes, Here and Now",
    "quotes": [
      {
        "quote": "Such behavior! People don't want to praise their contemporaries whose lives they actually share, but hold great expectations for the praise of future generations&mdash;people they haven't met or ever will! This is akin to being upset that past generations didn't praise you.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 6.18"
      }
    ],
    "notes": "<p>Alexandria, the city in Egypt, still bears the name of its founder, Alexander the Great, some 2,300 years after he set foot there. How cool would it feel to have a city named after you for so many centuries? To know that people are still saying your name?</p><p>Here's a thought: it wouldn't be cool. Because, like Alexander, you'll be dead. You'll have no idea whether your name lasted down through the centuries. No one gets to enjoy their own legacy&mdash;by definition.</p><p>Worse, think of all the horrible things Alexander did to achieve what he did. He fought pointless wars. He had a terrible temper&mdash;even killing his best friend in a drunken fight. He was ruthless and a slave to his ambition. Is he really so admirable?</p><p>Instead of wasting even a second considering the opinions of future people&mdash;people who are not even born yet&mdash;focus every bit of yourself on being the best person you can be in the present moment. On doing the right, right now. The distant future is irrelevant. Be good and noble and impressive now&mdash;while is still matters.</p>",
    "thoughts": ""
  },
  {
    "date": "October 22",
    "topic": "It's Easy to Get Better, But Better at What?",
    "quotes": [
      {
        "quote": "So someone's good at taking down an opponent, but that doesn't make them more community-minded, or modest, or well-prepared for any circumstance, or more tolerant of the faults of others.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 7.52"
      }
    ],
    "notes": "<p>Self-improvement is a noble pursuit. Most people don't even bother. But among those who do, it's possible for vanity and superficiality to corrupt the process. Do you want six-pack abs because you are challenging yourself and committing to a difficult goal? Or is it because you want to impress people with your shirt off? Are you running that marathon because you want to test your limits or because you're running away from your problems at home?</p><p>Our will shouldn't be directed at becoming the person who is in perfect shape or who can speak multiple languages but who doesn't have a second for other people. What's the point of winning at sports but losing in the effort to be a good husband, wife, father, mother, son, or daughter? Let's not confuse getting better at <em>stuff</em> with being a better <em>person</em>. One is a much bigger priority that the other.</p>",
    "thoughts": ""
  },
  {
    "date": "October 23",
    "topic": "Show the Qualities You Were Made For",
    "quotes": [
      {
        "quote": "People aren't in awe of your sharp mind? So be it. But you have many other qualities you can't claim to have been deprived of at birth. Display then those qualities in your own power: honesty, dignity, endurance, chastity, contentment, frugality, kindness, freedom, persistence, avoiding gossip, and magnanimity.",
        "author": "Marcus Aurelius",
        "source": "Meditations 5.5"
      }
    ],
    "notes": "<p>It' easy to blame our circumstances. One person curses that they weren't born taller, another they're not smarter, with a different complexion, or born in a different country. It'd be hard to find a single person on this planet&mdash;from supermodels on down&mdash;who doesn't think they're deficient in a least some way. But whatever your perceived deficits are, remember that there are positive qualities that you can develop that don't depend on genetic accidents.</p><p>You have the <em>choice</em> to be truthful. You have the <em>choice</em> to be dignified. You can <em>choose</em> to endure. You can choose to be chaste. You can choose to be thrifty. You can choose to be kind to others. You can choose to be free. You can persist under difficult odds. You can avoid trafficking in gossip. You can choose to be gracious.</p><p>And honestly, aren't the traits that are the result of effort and skill more impressive anyway?</p>",
    "thoughts": ""
  },
  {
    "date": "October 24",
    "topic": "The Fountain of Goodness",
    "quotes": [
      {
        "quote": "Dig deep within yourself, for there is a fountain of goodness ever ready to flow if you will keep digging.",
        "author": "Marcus Aurelius",
        "source": "Meditations 7.59"
      }
    ],
    "notes": "<p>Today, we could hope that goodness comes our way&mdash;good news, good weather, good luck. Or we could <em>find</em> it ourselves, <em>in</em> ourselves. Goodness isn't something that's going to be delivered by mail. You have to dig it up inside your own soul. You find it within your own thoughts, and you make it with your own actions.</p>",
    "thoughts": ""
  },
  {
    "date": "October 25",
    "topic": "Two Tasks",
    "quotes": [
      {
        "quote": "What, then, makes a person free from hindrance and self-determining? For wealth doesn't, neither does high-office, state or kingdom&mdash;rather, something else must be found...in the case of living, it is the knowledge of how to live.",
        "author": "Epictetus",
        "source": "Discourses, 4.1.62-64"
      }
    ],
    "notes": "<p>You have two essential tasks in life: to be a good person and to pursue the occupation that you love. Everything else is a waste of energy and a squandering of your potential.</p><p>How does one do that? OK, that's a tougher question. But the philosophy we see from the Stoics makes it simple enough: say no to distractions, to destructive emotions, to outside pressure. Ask yourself: <em>What is it that only I can do? What is the best use of my limited time on this planet?</em> Try to do the right thing when the situation calls for it. Treat other people the way you would hope to be treated. And understand that every small choice and tiny matter is an opportunity to practice these larger principles.</p><p>That's it. that's what goes into the most important skill of all: how to live.</p>",
    "thoughts": ""
  },
  {
    "date": "October 26",
    "topic": "Three Parts, One Aim",
    "quotes": [
      {
        "quote": "The best and the greatest number of authors have asserted that philosophy consists of three parts: the moral, the natural, and the rational. The first puts the soul in order. The second thoroughly examines the natural order of things. The third inquires into the proper meaning of words, and their arrangements and proofs which keep falsehoods from creeping in to displace truth.",
        "author": "Seneca",
        "source": "Moral Letters, 89.9"
      }
    ],
    "notes": "<p>These three parts&mdash;the moral, the natural, and the rational&mdash;have one aim. As different as they are, they have the same purpose: to help you live a good life ruled by reason</p><p>Not in the future, but right now.</p>",
    "thoughts": ""
  },
  {
    "date": "October 27",
    "topic": "We Reap What We Sow",
    "quotes": [
      {
        "quote": "Crimes often return to their teacher.",
        "author": "Seneca",
        "source": "Thyestes, 311"
      }
    ],
    "notes": "<p>It's ironic that Seneca would have one of his characters utter this line. As we know, for many years Seneca served as the tutor and mentor to the emperor Nero. There is a lot of evidence that Seneca was, in fact, a positive moral influence on the deranged young man, but even at the time, Seneca's contemporaries found it strange that a philosopher would serve as the right hand to such an evil person. They even used the Greek word <em>tyrannodidaskalos</em>&mdash;tyrant teacher&mdash;to describe him. And just as Shakespeare observed in <cite>Macbeth</cite>, <q>Bloody instructions, which, being taught, return / To plague th'inventor,</q> Seneca's collaboration with Nero ultimately ended with the student murdering the teacher.</p><p>It's something to think about when you consider whom to work with and whom to do business with in life. If you show a client how to do something unethical or illegal, might they return the favor to an unsuspecting you later on? If you provide a bad example to your employees, to your associates, to your children, might they betray you or hurt you down the road? What goes around comes around, is the saying. Karma is a notion we have imported from the East, along similar lines.</p><p>Seneca paid a price for his instruction to Nero. As has been true throughout the ages, his hypocrisy&mdash;avoidable or not&mdash;was costly. So too will be yours.</p>",
    "thoughts": ""
  },
  {
    "date": "October 28",
    "topic": "We Were Made For Each Other",
    "quotes": [
      {
        "quote": "You'll more quickly find an early thing kept from the earth than you will a person cut off from other human beings.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 9.9.3"
      }
    ],
    "notes": "<p>Naturally, Marcus Aurelius and the rest of the Stoics were not familiar with Newtonian physics. But they knew that what went up must come down. That's the analogy he's using here: our mutual interdependence with our fellow human beings is stronger than the law of gravity.</p><p>Philosophy attracts introverts. The study of human nature can make you aware of other people's faults and can breed contempt for others. So do struggle and difficulty&mdash;they isolate us from the world.</p><p>But none of that changes that we are, as Aristotle put it, social animals. We need each other. We must be there for each other. We must take care of each other (and to allow others to care for us in return). To pretend otherwise is to violate our nature, to be more or less than what it means to be a human being.</p>",
    "thoughts": ""
  },
  {
    "date": "October 29",
    "topic": "Character is Fate",
    "quotes": [
      {
        "quote": "Each person acquires their own character, but their official roles are designated by chance. You should invite some to your table because they are deserving, others because they may come to deserve it.",
        "author": "Seneca",
        "source": "Moral Letters, 47.15b"
      }
    ],
    "notes": "<p>In the hiring process, most employers look at where someone went to school, what jobs they've held in the past. This is because past success can be an indicator of future successes. But is it always? There are plenty of people who were successful because of luck. Maybe they got into Oxford or Harvard because of their parents. And what about a young person who hasn't had time to build a track record? Are they worthless?</p><p>Of course not. This is why <em>character</em> is a far better measure of a man or woman. Not just for jobs, but for friendships, relationships, for everything. Heraclitus put it as a maxim: <q>Character is fate.</q></p><p>When you seek to advance your own position in life, character is the best lever&mdash;perhaps not in the short term, but certainly over the long term. And the same goes for the people you invite into your life.</p>",
    "thoughts": ""
  },
  {
    "date": "October 30",
    "topic": "Who Get's the Lion's Share?",
    "quotes": [
      {
        "quote": "Aren't you ashamed to reserve for yourself only the remnants of your life and to dedicate to wisdom only that time can't be directed to business?",
        "author": "Seneca",
        "source": "On the Brevity of Life, 3.5b"
      }
    ],
    "notes": "<p>In one of his letters, Seneca tells the story about Alexander the Great. Apparently as Alexander was conquering the world, certain countries would offer him pieces of their territory in hopes that he'd leave them alone in exchange. Alexander would tell them, writes Seneca, that he hadn't come all the way to Asia to accept whatever they would give him, but instead they were going to have to accept whatever he chose to leave them.</p><p>According to Seneca, we should treat philosophy the same way in our lives. Philosophy shouldn't have to accept what time or energy is left over from other occupations but instead we should graciously make time for those other pursuits only once our study is finished.</p><p>If real self-improvement is what we're after, why do we leave our reading until those few minutes before we shut off the lights and go to bed? Why do we block off eight to ten hours in the middle of the day to be at the office or to go to meetings but block out no time for thinking about the big questions? The average person somehow manages to squeeze in twenty-eight hours of television per week&mdash;but ask them if they had time to study philosophy, and they will probably tell you they're too busy.</p>",
    "thoughts": ""
  },
  {
    "date": "October 31",
    "topic": "You Were Born Good",
    "quotes": [
      {
        "quote": "The human being is born with an inclination toward virtue.",
        "author": "Musonius Rufus",
        "source": "Lectures, 2.7.1-2"
      }
    ],
    "notes": "<p>The notion of original sin has weighed down humankind for centuries. In reality, we're made to help each other and be good to each other. We wouldn't have survived as a species otherwise.</p><p>There is hardly an idea in Stoic philosophy that wouldn't be immediately agreeable to a child or that doesn't jibe with common sense. The ideas within it go to the core of who we are and what we know to be true. The only things they conflict with are the various inventions of society&mdash;which usually serve some selfish interest more than they benefit the common good.</p><p>You were born good. <q>All of us have been made by nature,</q> Rufus said, <q>so that we can live free from error and nobly&mdash;not that one can and another can't, but all.</q> You were born with an attraction to virtue and self-mastery. If you've gotten far from that, it's not out of some inborn corruption but from a nurturing of the wrong things and the wrong ideas. As Seneca pointed out, philosophy is a tool to strip it all away&mdash;to get back to our true nature.</p>",
    "thoughts": ""
  },
  {
    "date": "November 1",
    "topic": "Accepting What Is",
    "quotes": [
      {
        "quote": "Don't seek for everything to happen as you wish it would, but rather wish that everything happens as it actually will&mdash;then your life will flow well.",
        "author": "Epictetus",
        "source": "Enchiridion, 8"
      },
      {
        "quote": "It is easy to praise providence for anything that may happen if you have two qualities: a complete view of what has actually happened in each instance and a sense of gratitude. Without gratitude what is the point of seeing, and without seeing what is the object of gratitude?",
        "author": "Epictetus",
        "source": "Discourses, 1.6.1-2"
      }
    ],
    "notes": "<p>Something happened that we wish had not. Which of these is easiest to change: our opinion or the event that is past?</p><p>The answer is obvious. Accept what happened and change your wish that it had not happened. Stoicism calls this the <q>art of acquiescence</q>&mdash;to accept rather than fight every little thing.</p><p>And the most practiced Stoics take it a step further. Instead of simply <em>accepting</em> what happens, they urge us to actually <em>enjoy</em> what has happened&mdash;whatever it is. Nietzsche, many centuries later, coined the perfect expression to capture this idea: <em>amor fati</em> (a love of fate). It's not just accepting, it's <em>loving</em> everything that happens.</p><p>To wish for what happened to happen is a clever way to avoid disappointment because nothing is contrary to your desires. But to actually feel gratitude for what happens? To love it? That's a recipe for happiness and joy.</p>",
    "thoughts": ""
  },
  {
    "date": "November 2",
    "topic": "Binding Our Wishes to What Will Be",
    "quotes": [
      {
        "quote": "But I haven't at any time been hindered in my will, nor forced against it. And how is this possible? I have bound up my choice to act with the will of God. God wills that I be sick, such is my will. He wills that I should choose something, so do I. He wills that I reach for something, or something be given to me&mdash;I wish for the same. What God doesn't will, I do not wish for.",
        "author": "Epictetus",
        "source": "Discourses, 4.1.89"
      }
    ],
    "notes": "<p>When General Dwight D. Eisenhower wrote to his wife on the eve of the invasion of Normandy, he told her, <q>Everything we could think of has been done, the troops are fit everybody is doing his best. The answer is in the lap of the gods.</q> He'd done everything he could&mdash;and now, what would happen would happen and as Epictetus might say, he was ready to bear whatever that was. In fact, Eisenhower had written another letter that night and prepared it for release in case the invasion failed. If failure was what God&mdash;or fate or luck or whatever you want to call it&mdash;willed, he was ready.</p><p>There is a wonderful lesson there. The man in charge of perhaps the most powerful army the world had ever assembled, on the eve of the most expertly organized and planned invasion the world will hopefully ever know, was humble enough to know that the outcome ultimately belonged to someone or something bigger than him.</p><p>And so it goes with all our ventures. No matter how much preparation, no matter how skilled or smart we are, the ultimate outcome is in the lap of the gods. The sooner we know that, the better we will be.</p>",
    "thoughts": ""
  },
  {
    "date": "November 3",
    "topic": "Following the Doctor's Orders",
    "quotes": [
      {
        "quote": "Just as we commonly hear people say the doctor prescribed someone particular riding exercises, or ice baths, or walking without shoes, we should in the same way say that nature prescribed someone to be diseased, or disabled, or to suffer any kind of impairment. In the case of the doctor, prescribed means something ordered to help aid someone's healing. But in the case of nature, it means that what happens to each of us is ordered to help aid our destiny.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 5.8"
      }
    ],
    "notes": "<p>The Stoics were masters at analogies and used them as a tool to help strengthen their reasoning.</p><p>Here, Marcus observes how willingly we will put up with unpleasantness if commanded to by the magic words <q>doctor's orders.</q> The doctor says you've got to take this nasty medicine, and you'll do it. The doctor tells you you have to start sleeping hanging upside down like a bat. You'll feel silly, but soon enough you'll get to dangling because you think it will make you better.</p><p>On the other hand, when it comes to external events, we fight like hell if anything happens contrary to our plans. But what if, Marcus asks, a doctor had prescribed this exact thing as a part of our treatment? What if this was as good for us as medicine?</p><p>Well, what if?</p>",
    "thoughts": ""
  },
  {
    "date": "November 4",
    "topic": "Not Good, Nor Bad",
    "quotes": [
      {
        "quote": "There is no evil in things changing, just as there is no good in persisting in a new state.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 4.42"
      }
    ],
    "notes": "<p>When people say change is good, they're usually trying to reassure someone (or themselves). Because instinctively we view change as bad&mdash;or at lest we're suspicious of it.</p><p>The Stoics want you to do away with those labels altogether. Change isn't good. The status quo isn't bad. They just <em>are</em>.</p><p>Remember, events are objective. It's only our opinion that says something is good or bad (and thus worth fighting against or fighting for). A better attitude? To decide to make the most of everything. But to do that you must first cease fighting.</p>",
    "thoughts": ""
  },
  {
    "date": "November 5",
    "topic": "A Higher Power",
    "quotes": [
      {
        "quote": "This is the very thing which makes up the virtue of the happy person and a well-flowing life&mdash;when the affairs of life are in every way tuned to the harmony between the individual divine spirit and the will of the director of the universe.",
        "author": "Chrysippus, Quoted in Diogenes Laertius",
        "source": "Lives of the Eminent Philosophers, 7.1.88"
      }
    ],
    "notes": "<p>In undergoing a twelve-step program, many addicts struggle most with step 2: acknowledging a higher power. Addicts often fight this one. At first they claim it's because they're atheists or because they don't like religion or because they don't understand why it matters.</p><p>But they later realize that this is just the addiction talking&mdash;it's another form of selfishness and self-absorption. The actual language of the step is pretty easy to swallow: <q>[We] came to believe that a Power greater than ourselves could restore us to sanity.</q> Subsequent steps ask the addict to submit and let go. The second step really has less to do with <q>god</q> than those other steps&mdash;the letting go. It's about attuning to the universe and discarding the toxic idea that we're at the center of it.</p><p>It's no wonder tha the Stoics are popular with those in twelve-step programs. It's also clear that this wisdom is beneficial to us all. You don't have to believe there is a god directing the universe, you just need to stop believing that <em>you're</em> that director. As soon as you can attune your spirit to that idea, the easier and happier your life will be, because you will have given up the most potent addiction of all: control</p>",
    "thoughts": ""
  },
  {
    "date": "November 6",
    "topic": "Someone Else is Spinning the Thread",
    "quotes": [
      {
        "quote": "If the breaking day sees someone proud,<br />The ending day sees them brought low.<br />No one should put too much trust in triumph,<br />No one should give up hope of trials improving.<br />Clotho mixes one with the other and stops<br />Fortune from resting, spinning every fate around.<br />No one has had so much divine favor<br />That they could guarantee themselves tomorrow.<br />God keeps our lives hurtling on,<br />Spinning in a whirlwind.",
        "author": "Seneca",
        "source": "Thyestes, 613"
      }
    ],
    "notes": "<p>The novelist Cormac McCarthy was living in a motel room when he heard a knock at the door. It was a messenger&mdash;he'd been awarded the MacArthur <q>genius</q> grant and $250,000. Unexpected events can be good as well as bad.</p><p>Who could dream of such an unexpected twist? Who but Clothos, one of the three Greek goddesses of fate, who <q>spins</q> the thread of human life? To the ancients, she was the one who decided the course of the events of our lives&mdash;some good, some bad. As the playwright Aeschylus wrote, <q>When the gods send evil, one cannot escape it.</q> The same was true for great destiny and good fortune.</p><p>Their resigned attitude might seem strange to us today, but they understood who was really in control (not them, not us!). No amount of prosperity, no amount of difficulty, is certain or forever. A triumph becomes a trial, a trial becomes a triumph. Life can change in an instant. Remember, today, how often it does.</p>",
    "thoughts": ""
  },
  {
    "date": "November 7",
    "topic": "How to be Powerful",
    "quotes": [
      {
        "quote": "Don't trust in your reputation, money, or reputation, but in the strength that is yours&mdash;namely, your judgements about the things that you control and don't control. For this alone is what makes us free and unfettered, that picks us up by the neck from the depths and lifts us eye to eye with the rich and powerful.",
        "author": "Seneca",
        "source": "Discourses, 3.26.34-35"
      }
    ],
    "notes": "<p>In a scene in Steven Pressfield's classic novel about Alexander the Great, <cite>The Virtues of War</cite>, Alexander reaches a river crossing only to be confronted by a philosopher who refuses to move. <q>This man has conquered the world!</q> one of Alexander's men shouts. <q>What have you done?</q> The philosopher responds, with complete confidence, <q>I have conquered the need to conquer the world.</q></p><p>We do know that Alexander did clash with Diogenes the Cynic, a philosopher known for his rejection of what society prizes and, by extension, Alexander's self-image. Just as in Pressfield's fictional encounter, in Diogenes's real confrontation with Alexander, the philosopher was more powerful than the most powerful man in the world&mdash;because, unlike him, Diogenes had fewer wants. They were able to look each other in the eye and see who really had control over himself, who had achieved the self-mastery required for real and lasting power.</p><p>You can have that too. It just means focusing inward on acquiring power rather than outward. As Publilus Syrus, himself a former slave, put it: <q>Would you have a great empire? Rule over yourself!</q></p>",
    "thoughts": ""
  },
  {
    "date": "November 8",
    "topic": "Actors in a Play",
    "quotes": [
      {
        "quote": "Remember that you are an actor in a play, playing a character according to the will of the playwright&mdash;if a short play, then it's short; if long, long. If he wishes you to play the beggar, play even that role well, just as you would if it were a cripple, a honcho, or an everyday person. For this is your duty, to perform well the character assigned you. That selection belongs to another.",
        "author": "Epictetus",
        "source": "Enchiridion, 17"
      }
    ],
    "notes": "<p>Marcus Aurelius didn't want to be emperor. He wasn't a politician who sought office, and he wasn't a true heir to the throne. As far as we can tell from his letters and from history, what he really wanted was to be a philosopher. But the powerful elite in Rome, including the emperor Hadrian, saw something in him. Groomed for power, Marcus was adopted and put in line for the throne because they knew he could handle it. Meanwhile, Epictetus lived much of his life as a slave and was persecuted for his philosophical teachings. Both did quite a lot with the roles they were assigned. </p><p>Our station in life can be as random as a roll of the dice. Some of us are born into privilege, others into adversity. Sometimes we're given exactly the opportunities we want. At other times, we're given a lucky break, but to us it feels like a burden.</p><p>The Stoics remind us that whatever happens to us today or over the course of our lives, wherever we fall on the intellectual, social, or physical spectra, our job is not to complain or bemoan our plight but to do the best we can to accept it and fulfill it. Is there still room for flexibility or ambition? Of course! The history of the stage is littered with stories of bit parts that turned into starring roles and indelible characters that were expanded in future adaptations. But even this begins with acceptance and understanding&mdash;and a desire to excel at what we have been assigned.</p>",
    "thoughts": ""
  },
  {
    "date": "November 9",
    "topic": "All is Fluid",
    "quotes": [
      {
        "quote": "The universe is change. Life is opinion.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 4.3.4b"
      }
    ],
    "notes": "<p>In Plutarch's <cite>Life of Theseus</cite>, he describes how the ship of Theseus, an Athenian hero, was preserved by the people of Athens in battle-ready condition for many centuries. Each time a board decayed, it would be replaced until eventually every stick of wood in it had been replaced. Plutarch asks: Is it still the ship of Theseus, or is it a new one?</p><p>In Japan, a famous Shinto shrine is rebuilt every twenty-three years. It's gone through more than sixty of those cycles. Is it one shrine, 1,400 years old? Or sixty consecutive shrines? Even the U.S. Senate, given its staggered elections, could be said to have never been fully turned over. Is it the same body formed in the days of George Washington?</p><p>Our understanding of what something <em>is</em> is just a snapshot&mdash;an ephemeral opinion. The universe is in a constant state of change. Our nails grow and are cut and keep growing. New skin replaces dead skin. Old memories are replaced by new memories. Are we still the same people? Are the people around us the same? Nothing is exempt from this fluidity, not even the things we hold most sacred.</p>",
    "thoughts": ""
  },
  {
    "date": "November 10",
    "topic": "Always the Same",
    "quotes": [
      {
        "quote": "Think by way of example on the times of Vespasian, and you'll see all these things: marrying, raising children, falling ill, dying, wars, holiday feasts, commerce, farming, flattering, pretending, suspecting, scheming, praying that others die, grumbling over one's lot, falling in love, amassing fortunes, lusting after office and power. Now that life of theirs is dead and gone … the time of Trajan, again the same …",
        "author": "Marcus Aurelius",
        "source": "Meditations, 4.32"
      }
    ],
    "notes": "<p>Earnest Hemingway opens his book <cite>The Sun Also Rises</cite> with a Bible verse: <q>One generation passeth, and another generation cometh; but the earth abideth forever. The sun also ariseth, and the sun goeth down, and hasteth to his place where he arose.</q> It was this passage, his editor would say, that <q>contained all the wisdom of the ancient world.</q></p><p>And what wisdom is that? One of the most striking things about history is just how long human beings have been doing what they do. Though certain attitudes and practices have come and gone, what's left are people&mdash;living, dying, loving, fighting, crying, laughing.</p><p>Breathless media reports or popular books often perpetuate the belief that we've reached the apex of humanity, or that this time, things <e>really are different</e>. The irony is that people have believed that for centuries.</p><p>Strong people resist this notion. They know that with a few exceptions, things are the same as they've always been and always will be. You're just like the people who came before you, and you're but a brief stopover until the people just like you who will come after. The earth abides forever, but we will come and go.</p>",
    "thoughts": ""
  },
  {
    "date": "November 11",
    "topic": "It's Not The Thing, It's What We Make Of It",
    "quotes": [
      {
        "quote": "When you are distressed by an external thing, it's not the thing itself that troubles you, but only your judgement of it. And you can wipe this out at a moement's notice.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 8.47"
      }
    ],
    "notes": "<p>Imagine you've dreamed of a life in politics. You're young, you're vigorous, and you've held increasingly powerful positions over the course of your career. Then at thirty-nine, you start to feel run down. Your doctors tell you that you have polio and your life will never be the same. Your career is over&mdash;right?</p><p>This is the story of Franklin Delano Roosevelt, now widely regarded as one of America's greatest political leaders. He was, at middle age, diagnosed with polio after spending years preparing for and dreaming about the presidency.</p><p>It's impossible to understand FDR without understanding this disability. The <q>external thing</q> was that he was crippled&mdash;this was a literal fact&mdash;but his judgement of it was that it did not cripple his career or his personhood. Though he was certainly the victim of a then incurable disease, he wiped away&mdash;almost immediately&mdash;the victim's mentality.</p><p>Let's not confuse acceptance with passivity.</p>",
    "thoughts": ""
  },
  {
    "date": "November 12",
    "topic": "The Strong Accept Responsibility",
    "quotes": [
      {
        "quote": "If we judge as good and evil only the things in the power of our own choice, then there is no room left for blaming gods or being hostile to others.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 6.41"
      }
    ],
    "notes": "<p>A sign on President Harry Truman's desk read, THE BUCK STOPS HERE. As president, with more power and control than pretty much anyone else, he knew that, good or bad, there wasn't anyone he could blame for stuff other than himself. There was no one to pass the buck to. The chain ended there, in the Oval Office.</p><p>As the president of our own lives&mdash;and knowing that our powers begin and end with our reasoned choice&mdash;we would do well to internalize this same attitude. We don't control things outside that sphere, but we do control our attitudes and our responses to those events&mdash;and that's plenty. It's enough that we go into each and every day knowing that there is no one to pass the buck to. It ends with us.</p>",
    "thoughts": ""
  },
  {
    "date": "November 13",
    "topic": "Never Complain, Never Explain",
    "quotes": [
      {
        "quote": "Don't allow yourself to be heard any longer griping about public life, not even with your own ears!",
        "author": "Marcus Aurelius",
        "source": "Meditations, 8.9"
      }
    ],
    "notes": "<p>Not only do even the most fortunate of us complain, it often seems like the more fortunate we are, the more time we have to do so. Marcus Aurelius was a reluctant chief executive&mdash;just as you might be a reluctant accountant, kid's soccer coach, or lawyer. Or perhaps you generally like your job, but you could do without a few of its attendant responsibilities. Where does that thinking get you? Nowhere, other than in a negative state of mind.</p><p>It calls to mind a motto of British prime minister Benjamin Disraeli: <q>Never complain, never explain.</q> He said this because, like Marcus, he knew that the burdens of responsibility were immense. It's so easy to complain about this or that, or to try to make excuses and justifications for the things you've done. But that doesn't accomplish anything&mdash;and it never lightens the load.</p>",
    "thoughts": ""
  },
  {
    "date": "November 14",
    "topic": "You Choose The Outcome",
    "quotes": [
      {
        "quote": "He was sent to prison. But the observation &lsquo;he has suffered evil,&rsquo; is an addition coming from you.",
        "author": "Marcus Aurelius",
        "source": "Discourses, 3.8.5b-6a"
      }
    ],
    "notes": "<p>This is classic Stoic thinking, as you've gathered by now. An event itself is objective. How we describe it&mdash;that it was unfair, or it's a great calamity, or that they did it on purpose&mdash;is on us.</p><p>Malcom X (then Malcom Little) went into prison a criminal, but he left as an educated, religious, and motivated man who would hep in the struggle for civil rights. Did he suffer an evil? Or did he choose to make his experience a positive one?</p><p>Acceptance is passive. It's the first step in an active process toward self-improving.</p>",
    "thoughts": ""
  },
  {
    "date": "November 15",
    "topic": "Everything Is Change",
    "quotes": [
      {
        "quote": "Meditate often on the swiftness with which all that exists and is coming into being is swept by us and carried away. For substance is like a river's unending flow, its activities continually changing and causes infinitely shifting so that almost nothing at all stands still.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 5.23"
      }
    ],
    "notes": "<p>Marcus borrows this wonderful metaphor from Heraclitus, who said, <q>No man step in the same river twice.</q> Because the river has changed, and so has the man.</p><p>Life is in a constant state of change. And so are we. To get upset by things is to wrongly assume that they will last. To kick ourselves or blame others is grabbing at the wind. To resent change is to wrongly assume that you have a choice in the matter.</p><p>Everything is change. Embrace that. Flow with it.</p>",
    "thoughts": ""
  },
  {
    "date": "November 16",
    "topic": "Hope And Fear Are The Same",
    "quotes": [
      {
        "quote": "Hecato says, ‘cease to hope and you will cease to fear.' … The primary cause of both these ills is that instead of adapting ourselves to present circumstances we send out thoughts too far ahead.",
        "author": "Seneca",
        "source": "Moral Letters, 5.7b-8"
      }
    ],
    "notes": "<p>Hope is generally regarded as good. Fear is generally regarded as bad. To a Stoic like Hecato (known as Hecato of Rhodes), they are the same&mdash;both are projections into the future about things we do not control. Both are the enemy of this present moment that you are actually in. Both mean you're living a life in opposition to <em>amor fati</em>.</p><p>It's not about overcoming our fears but understanding that both hope and fear contain a dangerous amount of <em>want</em> and <em>worry</em> in them. And, sadly, the want is what causes the worry.</p>",
    "thoughts": ""
  },
  {
    "date": "November 17",
    "topic": "Judge Not, Lest...",
    "quotes": [
      {
        "quote": "When philosophy is wielded with arrogance and stubbornly, it is the cause for the ruin of many. Let philosophy scrape off your own faults, rather than be a way to rail against the faults of others.",
        "author": "Seneca",
        "source": "Moral Letters, 103.4b-5a"
      }
    ],
    "notes": "<p>Remember, the proper direction of philosophy&mdash;of all the things we're doing here&mdash;is focused inward. To make <em>ourselves</em> better and to leave other people to that task for themselves and their own journey. Our faults are in our control., and so we turn to philosophy to help scrape them off like barnacles from the hull of a ship. Other people's faults? Not so much. That's for them to do.</p><p>Leave other people to their faults. Nothing in Stoic philosophy empowers you to judge them&mdash;only to accept them. Especially when we have so many of our own.</p>",
    "thoughts": ""
  },
  {
    "date": "November 18",
    "topic": "Four Habits Of The Stoic Mind",
    "quotes": [
      {
        "quote": "Our rational nature moves freely forward in its impressions when it:<ol><li>accepts nothing false or uncertain;</li><li>directs its impulses only to acts for the common good;</li><li>limits its desires and aversions only to what's in its own power</li><li>embraces everything nature assigns it</li></ol>",
        "author": "Marcus Aurelius",
        "source": "Meditations, 8.7"
      }
    ],
    "notes": "<p>If you notice, Marcus repeatedly reminds himself what Stoicism is. These bullet points are helpful to those of us reading thousands of years later, but really they were intended to be helpful to him. Maybe that day he had accepted a bad impression or had acted selfishly. Maybe he had pinned his hopes on something outside his control or complained and fought against something that had happened. Or maybe it had just been awhile since he'd thought these things and wanted a reminder.</p><p>Whatever his case was, or whatever ours is today, let's align our minds along these four critical habits: <ol><li>Accept only what is true.</li><li>Work for the common good.</li><li>Match our needs and wants with what is in our control.</li><li>Embrace what nature has in store for us.</li></ol></p>",
    "thoughts": ""
  },
  {
    "date": "November 19",
    "topic": "Maxims From Three Wise Men",
    "quotes": [
      {
        "quote": "For any challenge we should hold three thoughts at our command:<br />'Lead on God and Destiny,<br />To that Goal fixed for me long ago.<br />I will follow and not stumble; even if my will<br />is weak I will soldier on.'",
        "author": "Cleanthes",
        "source": "Enchiridion, 53"
      },
      {
        "quote": "Whoever embraces necessity count as wise,<br />skilled in divine matters.",
        "author": "Euripides",
        "source": "Enchiridion, 53"
      },
      {
        "quote": "If it pleases the gods, so be it. They may well kill me, but they can't hurt me.",
        "author": "Plato's Crito and Apology",
        "source": "Enchiridion, 53"
      }
    ],
    "notes": "<p>These three quotes compiled by Epictetus show us&mdash;in wisdom across history&mdash;the themes of tolerance, flexibility, and, ultimately, acceptance. Cleanthes and Euripides evoke destiny and fate as concepts that help ease acceptance. When one has a belief in a greater or higher power (be it God or gods), then there is no such thing as an event going contrary to plan.</p><p>Even if you don't believe in a deity, you can take some comfort in the various laws of the universe or even the circle of life. What happens to us as individuals can seem random or upsetting or cruel or inexplicable, when in fact these events make perfect sense when our perspective is zoomed out, even just slightly.</p><p>Let's practice this perspective today. Pretend that each event&mdash;whether desired or unexpected&mdash;was willed to happen, willed specifically for you. You wouldn't fight that, would you?</p>",
    "thoughts": ""
  },
  {
    "date": "November 20",
    "topic": "Behold, Now As Ever",
    "quotes": [
      {
        "quote": "If you've seen the present, you've seen all things, from time immemorial into all of eternity. For everything that happens is related and the same.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 6.36"
      }
    ],
    "notes": "<p>The events that will transpire today are the same as the things that have always occurred. People living and dying, animals living and dying, clouds rolling in and rolling out, air sucked in and sucked out, as it has for aeons. This moment right now, to paraphrase Emerson, is a quotation of the moments that have come before and will come ever after.</p><p>This idea is expressed nowhere more beautifully than in the Christianity hymn <cite>Gloria Patri.</cite> <q>As it was in the beginning, and now, and always, and to the ages of ages.</q> This thought is not supposed to be depressing or uplifting. It's just a fact. However, it can have a calming, centering effect. No need to get excited, no need to wait on pins and needles. If you haven't seen this before, someone else has. That can be a relief.</p>",
    "thoughts": ""
  },
  {
    "date": "November 21",
    "topic": "Once Is Enough, Once Is Forever",
    "quotes": [
      {
        "quote": "A good isn't increased by the addition of time, but if one is wise for even a moment, they will be no less happy than the person who exercises virture for all time and happily passes their life in it.",
        "author": "Chrysippus",
        "source": "Quoted by Plutarch in Moralia: <q>Against the Stoics on Common Conceptions,</q> 1062 (Loeb, P.682)"
      }
    ],
    "notes": "<p>Perhaps wisdom and happiness are like winning a medal in the Olympics. It doesn't matter whether you won a hundred years ago or ten minutes ago, or whether you won just once or in multiple events. It doesn't matter whether someone beats your time or score down the rodd, and it doesn't matter whether you never compete agin. You'll always be a medalist, and you'll always know what if feels like. No one can take that away&mdash;and it would not be impossible to feel <em>more</em> of that feeling.</p><p>The Julliard-trained actor Evan Handler, who not only survived acute myeloid leukemia but also severe depression, has talked about his decision to take antidepressants, which he did for a deliberately brief time. He took them because he wanted to know what true, normal happiness felt like. Once he did, he knew he would stop. He could go back to the struggle like everyone else. He had the ideal for a moment and that was enough.</p><p>Perhaps today will be the day when we experience happiness or wisdom. Don't try to grab that moment and hold on to it with all your might. It's not under your control how long it lasts. Enjoy it, recognize it, remember it. Having it for a moment is the same as having it forever.</p>",
    "thoughts": ""
  },
  {
    "date": "November 22",
    "topic": "The Glass Is Already Broken",
    "quotes": [
      {
        "quote": "Fortune falls heavily on those for whom she's unexpected. The one always on the lookout easily endures.",
        "author": "Seneca",
        "source": "On Consolation To Helvia, 5.3"
      }
    ],
    "notes": "<p>There is a story of a Zen master who had a beautiful prized cup. The master would repeat to himself, <q>The glass is already broken.</q> He enjoyed the cup. He used it. He showed if off to visitors. But in his mind, it was already broken. And so one day, when it did break, he simply said, <q>Of course.</q></p><p>This is how the Stoics think too. There is supposedly a true story about Epictetus and a lamp. He never locked his house, and so his expensive lamp was stolen. When Epictetus replaced it, he replaced it with a cheaper one so he could be less attached to it if it were stolen again.</p><p>Devastation&mdash;that feeling that we're absolutely crushed and shocked by an event&mdash;is a factor of how unlikely we considered that event in the first place. No one is <em>wrecked</em> by the fact that it's snowing in the winter, because we've accepted (and even anticipated) this turn of events. What about the occurrences that surprise us? We might not be so shocked if we took the time to consider their possibility.</p>",
    "thoughts": ""
  },
  {
    "date": "November 23",
    "topic": "Attachments Are The Enemy",
    "quotes": [
      {
        "quote": "In short, you must remember this&mdash;that if you hold anything dear outside of your own reasoned choice, you will have destroyed your capacity for choice.",
        "author": "Epictetus",
        "source": "Discourses, 4.4.23"
      }
    ],
    "notes": "<p>According to Anthony de Mello, <q>there is one thing and only one thing that causes unhappiness. The name of that thing is Attachment.</q> Attachments to an image you have of a person, attachments to wealth and status, attachments to a certain place or time, attachments to a job or to a lifestyle. All of those things are dangerous for one reason: they are outside of our reasoned choice. How long we keep them is not in our control.</p><p>As Epictetus realized some two thousand years before de Mello, our attachments are what make it so hard to accept change. Once we have them, we don't want to let go. We become slaves to maintaining the status quo. We are like the Red Queen in <source>Alice in Wonderland</source>&mdash;running faster and faster to stay in the same place.</p><p>But everything is in a constant state of change. We have certain things for a while and then lose them. The only permanent thing is <em>prohairesis</em>, our capacity for reasoned choice. The things we are attached to can come and go, our choice is resilient and adaptable. The sooner we become aware of this the better. The easier it will be to accept and adapt to what does happen.</p>",
    "thoughts": ""
  },
  {
    "date": "November 24",
    "topic": "Train To Let Go Of What's Not Yours",
    "quotes": [
      {
        "quote": "Whenever you experience the pangs of losing something, don't treat it like a part of yourself but as a breakable glass, so when it falls you will remember that and won't be troubled. So too, whenever you kiss your child, sibling, or friend, don't layer on top of the experience all the things you might wish, but hold them back and stop them, just as those who ride behind triumphant generals remind them they are mortal. In the same way, remind yourself that your precious one isn't one of your possessions, but something given for now, not forever ...",
        "author": "Epictetus",
        "source": "Discourses, 3.24.84-86a"
      }
    ],
    "notes": "<p>At a Roman triumph, the majority of the public would have their eyes glued to the victorious general at the front&mdash;one of the most coveted spots during roman times. Only a few would notice the aide in the back, right behind the commander, whispering into his ear, <q>Remember, thou are mortal.</q> What a reminder to hear at the peak of glory and victory!</p><p>In our own lives, we can train to be that whisper. When there is something we prize&mdash;or someone that we love&mdash;we can whisper to ourselves that is is fragile, mortal, and not truly ours. No matter how strong or invincible something feels, it never is. We must remind ourselves that it can break, can die, can leave us.</p><p>Loss is one of our deepest fears. Ignorance and pretending don't make things any better. They just mean the loss will be all the more jarring when it occurs.</p>",
    "thoughts": "Per the Dhammacakkappavattana Sutta, the 4 noble truths are: <ol><li>Now this is the noble truth of suffering: birth is suffering, aging is suffering, illness is suffering, death is suffering; union with what is displeasing is suffering; separation from what is pleasing is suffering; not to get what one wants is suffering; in brief, the five aggregates (body, feelings, perceptions, mental activity, and consciousness) subject to clinging are suffering.</li><li>Now this is the noble truth of the origin of suffering: it is this craving which leads to re-becoming, accompanied by delight and lust, seeking delight here and there; that is, craving for sensual pleasures, craving for becoming, craving for disbecoming.</li><li>Now this is the noble truth of the cessation of suffering: it is the remainderless fading away and cessation of that same craving, the giving up and relinquishing of it, freedom from it, non-reliance on it.</li><li>Now this is the noble truth of the way leading to the cessation of suffering: it is this noble eightfold path; that is, right view, right intention, right speech, right action, right livelihood, right effort, right mindfulness, right concentration.</li></ol>"
  },
  {
    "date": "November 25",
    "topic": "Funny How That Works Out",
    "quotes": [
      {
        "quote": "As for me, I would choose being sick over living in luxury, for being sick only harms the body, whereas luxury destroys both the body and the soul, causing weakness and incapacity in the body, and lack of control and cowardice in the soul. What's more, luxury breeds injustice because it also breeds greediness.",
        "author": "Musonius Rufus",
        "source": "Lectures, 20.95.14-17"
      }
    ],
    "notes": "<p>Stories about lottery winners tend to share one lesson: suddenly coming into a great deal of money is a curse, not a blessing. Just a few years after they get their big check, many lottery winners are actually in worse financial shape. They've lost friends, they've gotten divorced. Their whole lives have been turned into a nightmare as a result of their obscenely good fortune.</p><p>It's like that Metallica lyric (fittingly from a song call <q>No Leaf Clover</q>): <q>Then it comes to be that the soothing light at the end of your tunnel / Is just a freight train coming your way.</q></p><p>And yet the most common response from a cancer survivor, the person who went through the thing we all dread and fear? <q>It was the best thing that ever happened to me.</q></p><p>Funny how that works out, isn't it?</p>",
    "thoughts": ""
  },
  {
    "date": "November 26",
    "topic": "The Altar Of No Difference",
    "quotes": [
      {
        "quote": "We are like many pellets of incense falling on the same altar. Some collapse sooner, others later, but it makes no difference.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 4.15"
      }
    ],
    "notes": "<p>What's the difference between you and richest person in the world? One has a little more money than the other. What's the difference between you and the oldest person in the world? One has been around a little longer than the other. Same goes for the tallest, smartest, fastest, and on down the line.</p><p>Measuring ourselves against other people makes acceptance difficult, because we want what <em>they</em> have, or we want how things <em>could</em> have gone, not what we happen to have. But that makes no difference.</p><p>Some might see this line from Marcus as pessimistic, whereas others see it as optimistic. It's really just <em>truth</em>. We're all here and we're all going to leave this earth eventually, so let's not concern ourselves with petty differences in the meantime. We have too much to do.</p>",
    "thoughts": ""
  },
  {
    "date": "November 27",
    "topic": "The Pleasure Of Tuning Out The Negative",
    "quotes": [
      {
        "quote": "How satisfying it is to dismiss and block out any upsetting or foreign impression, and immediately to have peace in all things.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 5.2"
      }
    ],
    "notes": "<p>The Stoics were mercifully spared the information overload endemic to today's society. They had no social media, no newspapers, no television chatter to rile them up. But even back then, an undisciplined person would have found plenty to be distracted and upset by.</p><p>Part of the Stoic mindset then was a sort of a cultivated ignorance. Publilius Syrus's epigram expresses it well: <q>Always shun that which makes you angry.</q> Meaning: turn your mind away from the things that provoke it. If you find that discussing politics at the dinner table leads to fighting, why do you keep bringing it up? If your sibling's life choices bother you, why don't you stop picking at them and making them your concern? The same goes for so many other sources of aggravation.</p><p>It's not a sign of weakness to shut them out. Instead, it's a sign of strong will. Try saying: <q>I know the reaction I typically take in these situations, and I'm not going to do it this time.</q> And then follow it with: <q>I'm also going to remove the stimulus from my life in the future was well.</q></p><p>Because what follows is peace and serenity.</p>",
    "thoughts": ""
  },
  {
    "date": "November 28",
    "topic": "It's Not On Them, It's On You",
    "quotes": [
      {
        "quote": "If someone is slipping up, kindly correct them and point out what they missed. But if you can't, blame yourself&mdash;or no one.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 10.4"
      }
    ],
    "notes": "<p>A good teacher knows that when a student is failing, the blame fall on the instructor, not the pupil. How much more generous and tolerant would we be if we could extend this understanding to other spheres in our life? To be able to see that if a friend is unreliable, maybe it's because they don't know what's wrong or because we haven't tried to help them fix their flaw. If an employee is underperforming, just talk to them or figure out if they're lacking in support. If someone is being annoying, try talking to them about the problem with their behavior, or ask yourself: <em>Why am I being so sensitive?</em></p><p>And if this doesn't work, try letting it go. It might be an isolated incident anyway.</p>",
    "thoughts": "<p>Let's get back to a time when a student, god forbid, could actually be blamed for their own exam performance. A time when the default position was one of trust in teachers and what they do. Let's support, respect and nurture our young people but never compromise on our pursuit of educational purity. Let's press the reset button and create a just equilibrium between student responsibility and teacher accountability. This is vital for our society in the long run, because in promoting the mantra that failure is always someone else's fault, we deprive our young people of one of the key drivers of change and progress: the realization of failure.<p><cite>Thomas Rogers, 'Let's get back to a time when students, not teachers, could be blamed for exam performance', 04 Jan 2016</cite><p>People make mistakes. When they do make a mistake, and you feel the need to point it out, at least do them the kindness of showing them how to avoid it next time. But if you point fingers and refuse to teach, the blame is on you. That's your failure, not theirs, because you're choosing to neglect an opportunity to do good. Of course, if you can't help them learn, no one is to blame. The mistake they made could have easily been made by you.</p><cite>Patrick Allan, <a href=https://lifehacker.com/dont-blame-others-if-you-refuse-to-help-them-learn-1820261236 target=_blank>lifehacker</a>, 08-NOV-17</cite>"
  },
  {
    "date": "November 29",
    "topic": "You're Going To Be OK",
    "quotes": [
      {
        "quote": "Don't lament this and don't get agitated.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 7.43"
      }
    ],
    "notes": "<p>There's that feeling we get when something happens: <em>It's all over now. All is lost.</em> What follows are complaints and pity and misery&mdash;the impotent struggle against something that's already occurred.</p><p>Why bother? We have no idea what the future holds. We have no idea what's coming up around the bend. It could be more problems, or this could be the darkness before the dawn.</p><p>If we're Stoic, there is one thing we can be sure of: whatever happens, we're going to be OK.</p>",
    "thoughts": ""
  },
  {
    "date": "November 30",
    "topic": "Follow The <em>Logos</em>",
    "quotes": [
      {
        "quote": "The person who follows reason in all things will have both leisure and a readiness to act&mdash;they are at once both cheerful and self-composed.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 10.12b"
      }
    ],
    "notes": "<p>The guiding reason of the world&mdash;the Stoics called this the <em>logos</em>&mdash;gives us what we want, other times it gives us precisely what we do not want. In either case, they believed that the <em>logos</em> was an all-powerful force that governed the universe.</p><p>There is a helpful analogy to explain the <em>logos</em>: We are like a dog leashed to a moving cart. The direction of the cart will determine where we go. Depending on the length of the leash, we also have a fair amount of room to explore and determine the pace, but ultimately what each of us must choose is whether we will go willingly or be painfully dragged. Which will it be?</p><p>Cheerful acceptance? Or ignorant refusal? In the end, they amount to the same.</p>",
    "thoughts": ""
  },
  {
    "date": "December 1",
    "topic": "Pretending Today Is The End",
    "quotes": [
      {
        "quote": "Let us prepare our minds as if we'd come to the very end of life. Let us postpone nothing. Let us balance life's books each day....The one who puts the finishing touches on their life each day is never short of time.",
        "author": "Seneca",
        "source": "Moral Letters, 101.7b-8a"
      }
    ],
    "notes": "<p><q>Live each day as if it were your last</q> is a clich&eacute;. Plenty say it, few actually do it. How reasonable would that be anyway? Surely Seneca isn't saying to forsake laws and considerations&mdash;to find some orgy to join because the world is ending.</p><p>A better analogy would be a soldier about to leave on deployment. Not knowing whether they'll return or not, what do they do?</p><p>They get their affairs in order. They handle their business. They tell their children or their family that they love them. They don't have time for quarreling or petty matters. And then in the morning they are ready to go&mdash;hoping to come back in one piece but prepared for the possibility that they might not.</p><p>Let us live today that same way.</p>",
    "thoughts": "<p><speaker>Capt. Ronald Speirs:</speaker> You know why you hid in that ditch, Blithe?<br /><speaker>Pvt. Albert Blithe:</speaker> I was scared.<br /><speaker>Capt. Ronald Speirs:</speaker> We're all scared. You hid in that ditch because you think there's still hope. But Blithe, the only hope you have is to accept the fact that you're already dead, and the sooner you accept that, the sooner you'll be able to function as a soldier's supposed to function. Without mercy, without compassion, without remorse. All war depends on it.</p><p><speaker>Nixon:</speaker> Harry... what exactly are you doing with your reserve chute? You've been hauling that thing around ever since we jumped.<br /><speaker>Harry Welsh:</speaker> Gonna send it back to Kitty when we get back to England. Silk. Figure it'll make a good wedding dress, you know. What with the rationing and all.<br /><speaker>Nixon:</speaker> [Chuckling] Jeez, Harry, I never would have guessed.<br /><speaker>Harry Welsh:</speaker> What? That I'm so sentimental?<br /><speaker>Nixon:</speaker> No, that you think we're gonna make it back to England.</p>"
  },
  {
    "date": "December 2",
    "topic": "Don't Mind Me, I'm Only Dying Slow",
    "quotes": [
      {
        "quote": "Let each thing you would do, say or intend be like that of a dying person.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 2.11.1"
      }
    ],
    "notes": "<p>Have you ever heard someone ask: <q>What would you do if you found out tomorrow that you had cancer?</q> The question is designed to make you consider how different life might be if you were suddenly given just a few months or weeks to live. There's nothing like a terminal illness to wake people up.</p><p>But here's the thing: you already have a terminal diagnosis. We all do! As the writer Edmund Wilson put it, <q>Death is one prophecy that never fails.</q> Every person is born with a death sentence. Each second that passes by is one you'll never get back.</p><p>Once you realize this, it will have  profound impact on what you do, say, and think. Don't let another day tick away in ignorance of the reality that you're a dying person. We all are. Can today be the day we stop pretending otherwise?</p>",
    "thoughts": ""
  },
  {
    "date": "December 3",
    "topic": "The Philosopher As An Artisan Of Life And Death",
    "quotes": [
      {
        "quote": "Philosophy does not claim to get a person an external possession. To do so would be beyond its field. As wood is to the carpenter, bronze to the sculptor, so our own lives are the proper material in the art of living.",
        "author": "Epictetus",
        "source": "Discourses, 1.15.2"
      }
    ],
    "notes": "<p>Philosophy is not some idle pursuit appropriate only for academics or the rich. Instead, it is one of the most essential activities that a human being can engage in. Its purpose, as Henry David Thoreau said a few thousand years after Epictetus, is to help us <q>solve the problems of life, not only theoretically but practically.</q> This aligns nicely with Cicero's famous line: <q><em>To philosophize is to learn how to die.</em></q></p><p>You're not reading these quotes and doing these thought exercises for fun. Though they may be enjoyable and help you lighten up, their aim is to help you sculpt and improve your life. And because all of us have but one life and one death, we should treat each experience like a sculptor with his chisels, carving until, to paraphrase Michelangelo, we set free the angel in the marble.</p><p>We are trying to do this difficult thing&mdash;living and dying&mdash;as well as we can. And to do that, we must remember what we've learned and the wise words we've been given.</p>",
    "thoughts": ""
  },
  {
    "date": "December 4",
    "topic": "You Don't Own That",
    "quotes": [
      {
        "quote": "Anything that can be prevented, taken away, or coerced is not a person's own&mdash;but those things that can't be blocked are their own",
        "author": "Epictetus",
        "source": "Discourses, 3.24.3"
      }
    ],
    "notes": "<p>The conservationist Daniel O'Brien has said that he doesn't <q>own</q> his several-thousand-acre buffalo ranch in South Dakota, he just lives there while the bank lets him make mortgage payments on it. It's a joke about the economic realities of ranching. But it also hints at the idea that land doesn't belong to one individual, that it will far outlast us and our descendants. Marcus Aurelius used to say that we don't own anything and that even our lives are held in trust.</p><p>We may claw and fight and work to own things, but those things can be taken away in a second. The same goes for other things we like to think are <q>ours</q> but are equally precarious: our status, our physical health or strength, our relationships. How can these really be ours if something other than us&mdash;fate, bad luck, death, and so on&mdash;can dispossess us of them without notice?</p><p>So what do we own? Just our lives&mdash;and not for long</p>",
    "thoughts": ""
  },
  {
    "date": "December 5",
    "topic": "The Benefits Of Sobering Thoughts",
    "quotes": [
      {
        "quote": "Keep death and exile before your eyes each day, along with everything that seems terrible&mdash;by doing so, you'll never have a base thought nor will you have excessive desire.",
        "author": "Epictetus",
        "source": "Enchiridion, 21"
      }
    ],
    "notes": "<p>Political winds could change in an instant, depriving you of the most basic freedoms you take for granted. Or, no matter who you are or how safely you've lived your life, there's someone out there who would rob and kill you for a couple of dollars.</p><p>As it's written in the timeless <cite>Epic of Gilgamesh</cite><blockquote><q>Man is snapped off like a reed in the canebreak!<br />The comely young man, the pretty young woman&mdash;<br />All too soon in their prime Death abducts them!</q></blockquote></p><p>Death is not the only unexpected interruption we might face&mdash;our plans can be dashed to pieces by a million things. Today might be a bit more pleasant if you ignore those possibilities, but at what cost?</p>",
    "thoughts": ""
  },
  {
    "date": "December 6",
    "topic": "The Sword Dangles Over You",
    "quotes": [
      {
        "quote": "Don't behave as if you are destine to live forever. What's fated hangs over you. As long as you live and while you can, become good now.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 4.17"
      }
    ],
    "notes": "<p>There is an ancient story of a courier who had made light of the responsibilities of his king. To prove he was mistaken, the king arranged to switch places with the courtier so he could experience what it was like to be a king. The king made one other adjustments: he hung a sword by a hair over the throne to illustrate the peril and burden of kingship as well as the constant fear of assassination We call that dangling reminder of death and difficulty the Sword of Damocles.</p><p>The reality is that a similar sword hangs over all of us&mdash;life can be taken from us at any moment. And that threat can send us in one of two directions: we can fear and dread it, or we can use it to motivate us. To do good, to be good. Because the sword is dangling, and there's nothing else to be concerned with, would you rather it catch you in the middle of some shameful, selfish act? Would you rather it catch you <em>waiting</em> to be good in the future?</p>",
    "thoughts": ""
  },
  {
    "date": "December 7",
    "topic": "The Cards We're Dealt",
    "quotes": [
      {
        "quote": "Think of the life you lived until now as over and, as a dead man, see what's left as a bonus and live it according to Nature. Love the hand that fate deals you and play it as your own, for what could be more fitting?",
        "author": "Marcus Aurelius",
        "source": "Meditations, 7.56-57"
      }
    ],
    "notes": "<p>We have an irrational fear of acknowledging our own mortality. We avoid thinking about it because we think it will be depressing. In fact, reflecting on mortality often has the opposite effect&mdash;invigorating us more than saddening us. Why? Because it give us clarity.</p><p>If you were suddenly told you had but a week to live, what changes would you make? If you died but were resuscitated, how different would your perspective be?</p><p>When, as Shakespeare's Prospero puts it, <q>every third thought shall be my grave,</q> there's no risk of getting caught up in petty matters or distractions. Instead of denying our fear of death, let's let it make the best people we can be.</p><p>Today.</p>",
    "thoughts": "<p><speaker>Keating:</speaker> <q>Seize the day. Gather ye rosebuds while ye may.</q> Why does the writer use these lines?<br /><speaker>Charlie:</speaker> Because he's in a hurry.<br /><speaker>Keating:</speaker> No. Ding! Thank you for playing anyway. Because we are food for worms, lads. Because, believe it or not, each and every one of us in this room is one day going to stop breathing, turn cold and die.<p>"
  },
  {
    "date": "December 8",
    "topic": "Don't Hide From Your Feelings",
    "quotes": [
      {
        "quote": "It's better to conquer grief than to deceive it.",
        "author": "Seneca",
        "source": "On Consolation To Helvia, 17.1b"
      }
    ],
    "notes": "<p>We've all lost people we were close to&mdash;a friend, a colleague, a parent, a grandparent. While we were suffering from our grief, some well-meaning person did their best to take our mind off it or make us think about something else for a couple hours. However kind, these gestures are misguided.</p><p>The Stoics are stereotyped as suppressing their emotions, but their philosophy was actually intended to teach us to face, process, and deal with emotions <em>immediately</em> instead of running from them. Tempting as it is to deceive yourself or hide form a powerful emotion like grief&mdash;by telling yourself and other people that you're fine&mdash;awareness and understanding are better. Distraction might be pleasant in the short term&mdash;by going to gladiatorial games, as a Roman might have done, for example. Focusing is better in the long term.</p><p>That means facing it now. Process and parse what you are feeling. Remove your expectations, your entitlements, your sense of having been wronged. Find the positive in the situation, but also sit with your pain and accept it, remembering that it is a part of life. That's how one conquers grief.</p>",
    "thoughts": ""
  },
  {
    "date": "December 9",
    "topic": "Spendthrifts of Time",
    "quotes": [
      {
        "quote": "Were all the geniuses of history to focus on this single theme, they could never fully express their bafflement at the darkness of the human mind. No person would give up even an inch of their estate, and the slightest dispute with a neighbor can mean hell to pay; yet we easily let others encroach on our lives&mdash;worse, we often pave the way for those who will take it over. No person hands out their money to passerby, but to how many do each of us hand out our lives! We're tight-fisted with property and money, yet think too little of wasting time, the one thing about which we should all be the toughest misers.",
        "author": "Seneca",
        "source": "On the Brevity of Life, 3.1-2"
      }
    ],
    "notes": "<p>Today there will be endless interruptions: phone calls, emails, visitors, unexpected events. Booker T. Washington observed that <q>the number of people who stand ready to consume one's time, to no purpose, is almost countless.</q></p><p>A philosopher, on the other hand, knows that their default state should be one of reflection and inner awareness. This is why they so diligently protect their personal space and thoughts from the intrusions of the world. They know that a few minutes of contemplation are worth more than any meeting or report. They also know how little time we're actually given in life&mdash;and how quickly our stores can be depleted.</p><p>Seneca reminds us that while we might be good at protecting our physical property, we are far too lax at enforcing our mental boundaries. Property can be regained; there is quite a bit of it out there&mdash;some of it still untouched by man. But time? Time is our most irreplaceable asset&mdash;we cannot buy more of it. We can only strive to waste as little as possible.</p>",
    "thoughts": "<blockquote>Gather ye rosebuds while ye may,<br />Old Time is still a-flying;<br />And this same flower that smiles today<br />To-morrow will be dying.<br />The glorious lamp of heaven, the sun,<br />The higher he's a-getting,<br />The sooner will his race be run,<br />And nearer he's to setting.<br />That age is best which is the first,<br />When youth and blood are warmer;<br />But being spent, the worse, and worst<br />Times still succeed the former.<br />Then be not coy, but use your time,<br />And, while ye may, go marry:<br />For having lost but once your prime,<br />You may forever tarry.<br /><br /><cite>To the Virgins, to Make Much of Time, Robert Herrick</cite></blockquote>"
  },
  {
    "date": "December 10",
    "topic": "Don't Sell Yourself Too Cheaply",
    "quotes": [
      {
        "quote": "I say, let no one rob me of a single day who isn't going to make a full return on the loss.",
        "author": "Seneca",
        "source": "On Tranquility of Mind, 1.11b"
      }
    ],
    "notes": "<p>People spend a lot more money when they use credit cards than when they have to pull out actual cash. If you ever wondered why credit card companies and banks push cards so aggressively, this is why. The more credit cards you have, the more you'll spend.</p><p>Do we treat the days of our lives like we treat our money? Because we don't exactly know how many days we'll be alive, and because we try our hardest <em>not</em> to think about the fact that someday we'll die, we're pretty liberal with how freely we spend our time. We let people and obligations impose on that time, only rarely asking: <em>What am I getting in return here?</em></p><p>Seneca's maxim is the equivalent of cutting up your credit cards and switching to cash. He says to put real thought into every transaction: <em>Am I getting my money's worth here? Is this a fair trade?</em></p>",
    "thoughts": ""
  },
  {
    "date": "December 11",
    "topic": "Dignity And Bravery",
    "quotes": [
      {
        "quote": "As Cicero says, we hate gladiators if they are quick to save their lives by any means; we favor them if they show contempt for thir lives.",
        "author": "Seneca",
        "source": "On Tranquility of Mind, 11.4b"
      }
    ],
    "notes": "<p>Lyndon Johnson's college classmates used to tell an embarrassing story about him. Johnson apparently had a big mouth and felt he had to constantly dominate and intimidate others. Yet his biographer, Robert Caro makes it clear that when someone stood up to young Lyndon, he proved himself to be a complete coward. In one instance, during an argument over a poker game, instead of fighting, Johnson threw himself on a bed and <q>began kicking his feet in the air with a frantic, windmilling motion…like a girl.</q> He shouted, <q>If you hit me, I'll kick you! If you hit me, I'll kick you!</q></p><p>Later in his life, Johnson also worked extremely hard to avoid serving in World War II and lived it up in California while other soldiers fought and died abroad. He later claimed to be a war hero. It was one of his most shameful lies.</p><p>We do not need to disregard our physical safety or engage in wanton acts of violence to be brave. But nobody respects a coward. Nobody like a shirker of duty. Nobody admires a person who puts too high a price on their own comfort and needs.</p><p>That's the irony of cowardice. It's aimed at self-protection, but it creates shameful secrets. Self-preservation is hardly worth it because of everything it costs in return.</p><p>Be brave. Be dignified.</p>",
    "thoughts": ""
  },
  {
    "date": "December 12",
    "topic": "The Beat Goes On",
    "quotes": [
      {
        "quote": "Walk the long gallery of the past, of empires, and kingdoms succeeding each other without number. And you can also see the future, for surely it will be exactly the same, unable to deviate from the present rhythm. It's all one whether we've experienced forty years or an aeon. What more is there to see?",
        "author": "Marcus Aurelius",
        "source": "Meditations, 7.49"
      }
    ],
    "notes": "<p>All things die. Not just people but companies, kingdoms, religions, and ideas&mdash;eventually. The Roman Republic lasted 450 years. The Roman Empire, of which Marcus Aurelius was considered to be one of the <q>five good emperors,</q> lasted 500 years. The longest recorded life of a human being is 122 years. The average life expectancy in the United States is a little over seventy-eight years. In other countries, in other eras, it has been more and it has been less. But in the end we all succumb, as Marcus said, to the rhythm of events&mdash;of which there is always a final, determined beat. There is no need to dwell on this fact, but there is no point in ignoring it either.</p>",
    "thoughts": ""
  },
  {
    "date": "December 13",
    "topic": "It's Just A Number",
    "quotes": [
      {
        "quote": "You aren't' bothered, are you, because you weight a certain amount and not twice as much? So why get worked up that you've been given a certain lifespan and not more? Just as you are satisfied with your normal weight, so you should be with the time you've been given.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 6.49"
      }
    ],
    "notes": "<p>They say age is just a number, but to some people it's a very important one&mdashotherwise, women wouldn't lie about being younger, and ambitious young men would like about being older. Rich people and health nuts spend billions of dollars in an effort to move their expiration date from around seventy-eight years to hopefully <em>forever</em>.</p><p>The number of years we manage to eke out doesn't matter, only what those years are composed of. Seneca put it best when he said, <q>Life is long if you know how to use it.</q> Sadly, most people don't&mdashthey waste the life they've been given. Only when it is too late do they try to compensate for that waste by vainly hoping to put more time on the clock.</p><p>Use today. Use every day. Make yourself satisfied with what you have been given.</p> ",
    "thoughts": ""
  },
  {
    "date": "December 14",
    "topic": "What We Should Know By The End",
    "quotes": [
      {
        "quote": "Soon you will die, and still aren't sincere, undisturbed, or free from suspicion that external things can harm you, nor are you gracious to all, knowing that wisdom and acting justly are one and the same.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 4.37"
      }
    ],
    "notes": "<p>From what we understand, Marcus wrote many of his meditations later in life, when we was suffering from serious illness. So when he says, <q>Soon you will die,</q> he was speaking frankly to himself about his own mortality. How scary that must have been. He was staring at the real possibility of death and not liking what he saw in these last minutes.</p><p>Sure, he's accomplished many things in his life, but his emotions were still the cause of discomfort, pain, and frustration. He knew that with his limited time left, better choices would provide relief.</p><p>Hopefully, you have a lot more time left&mdash;but that makes it even more important to make headway while you still can. We are unfinished products up until the end, as Marcus knew very well. But the earlier we learn it, the more we can enjoy the fruits of the labor on our character&mdash;and the sooner we can be free (or <em>freer</em>) of insincerity, anxiety, ungraciousness, and un-Stoic-ness.</p>",
    "thoughts": ""
  },
  {
    "date": "December 15",
    "topic": "A Simple Way To Measure Our Days",
    "quotes": [
      {
        "quote": "This is the mark of perfection of character&mdash;to spend each day as if it were your last, without frenzy, laziness, or any pretending.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 7.69"
      }
    ],
    "notes": "<p>The Stoics didn't think that anyone could be perfect. The idea of becoming a sage&mdash;the highest aspiration of a philosopher&mdash;wasn't realistic. This was just their Platonic ideal.</p><p>Still, they started every day hoping to get a little closer to that mark. There was much to gain in the trying. Can you actually live today like it is your last day? Is it even possible to embody completeness or perfection in our <em>ethos</em> (character), effortlessly doing the right thing for a full twenty-four hours? Is it possible for more than a minute?</p><p>Maybe not. But if trying was enough for the Stoics, it should be enough for us too.</p>",
    "thoughts": ""
  },
  {
    "date": "December 16",
    "topic": "Everlasting Good Health",
    "quotes": [
      {
        "quote": "I tell you, you only have to learn to live like the healthy person does ... living with complete confidence. What confidence? The only one worth holding, in what is trustworthy, unhindered, and can't be taken away&mdash;your own reasoned choice.",
        "author": "Epictetus",
        "source": "Discourses, 3.26.23b-24"
      }
    ],
    "notes": "<p>As the Stoics say repeatedly, it's dangerous to have faith in what you do not control. But your own reasoned choice? Well, for now that <em>is</em> in your control. Therefore it is one of the few things you can have confidence in. It's the only area of health that can't suddenly be given a terminal diagnosis (except for the one we all get the day we're born). It's the only one that remains pristine and never wears down&mdash;it's only the user who quits it; never will it quit the user.</p><p>In this passage, Epictetus points out that slaves and workers and philosophers alike can live this way. Socrates, Diogenes, and Cleanthes lived this way&mdash;even while they had families and while they were struggling students.</p><p>And so can you.</p>",
    "thoughts": ""
  },
  {
    "date": "December 17",
    "topic": "Know Thyself&mdash;Before It's Too Late",
    "quotes": [
      {
        "quote": "Death lies heavy upon me<br>who, known exceedingly well by all,<br>dies unknown to himself.",
        "author": "Seneca",
        "source": "Thyestes, 400"
      }
    ],
    "notes": "<p>Some of the most powerful and important people in the world seem to have almost no self-awareness. Although total strangers know endless amounts of trivia about them, celebrities&mdash;because they are too busy or because it hurts too much&mdash;appear to know very little about themselves.</p><p>We can be guilty of the same sin. We ignore Socrates's dictum to <q>know thyself</q>&mdash;often realizing we have done so at our peril, years later, when we wake up one day and realize how rarely we have asked ourselves questions like: <em>Who am I? What's important to me? What do I like? What do I need?</em></p><p>Now&mdash;right now&mdash;you have the time to explore yourself, to understand your own mind and body. Don't wait. Know yourself. Before it's impossibly late.</p>",
    "thoughts": ""
  },
  {
    "date": "December 18",
    "topic": "What Comes To Us All",
    "quotes": [
      {
        "quote": "Both Alexander the Great and his mule-keeper were both brought to the same place by death&mdash;they were either received into the all-generative reason, or scattered among the atoms.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 6.24"
      }
    ],
    "notes": "<p>In a world that is in many ways becoming more and more unequal, there aren't many truly equalitarian experiences left. When Benjamin Franklin observed that <q>in this world nothing can be said to be certain, except death and taxes,</q> he couldn't have known how good some people would get at avoiding their taxes. But death? That's still the one thing that everyone experiences.</p><p>We all face the same end. Whether you conquer the known world or shine the shoes of the people who do, at the end death will be a radical equalizer&mdash;a lesson in abject humility. Shakespeare had Hamlet trace out the logic in stark terms for both Alexander and Julius Ceasar:<blockquote>Imperious Ceasar, dead and turn'd to clay,<br>Might stop a hole to keep the wind away:<br>O, that that earth, which kept the world in awe,<br>Should patch a wall to expel the winter flaw!</blockquote></p><p>The next time you feel yourself getting high and mighty&mdash;or conversely, feeling low and inferior&mdash;just remember, we all end up the same way. In death, no one is better, no one is worse. All our stories have the same finale.</p>",
    "thoughts": ""
  },
  {
    "date": "December 19",
    "topic": "Human Scale",
    "quotes": [
      {
        "quote": "Think of the whole universe of matter and how small your share. Think about the expanse of time and how brief&mdash;almost momentary&mdash;the part marked for you. Think of the workings of fate and how infinitesimal your role.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 5.24"
      }
    ],
    "notes": "<p>The amount of matter in the universe is immense&mdash;on the order of trillions of atoms. What percentage of that matter does one human body constitute?</p><p>The earth, as far as science tells us, is some 4.5 billion years old and shows no sign of ending soon. Our time on the earth, on the other hand, will be what? Several decades, maybe?</p><p>Sometime we need to have the facts and the figures spelled out in front of us to fully realize the scale at which humans happen to exist in the big scheme of things.</p><p>Consider this the next time you feel self-important, or like everything rises and falls on what you do next. It doesn't. You're just one person among many, doing your best among many. That's all you need to do.</p>",
    "thoughts": ""
  },
  {
    "date": "December 20",
    "topic": "Fear The Fear Of Death",
    "quotes": [
      {
        "quote": "Do you ponder how the supreme of human evils, the surest mark of the base and cowardly, is not death, but the fear of death? I urge you to discipline yourself against such fear, direct all your thinking, exercises, and reading this way&mdash;and you will know the only path to human freedom.",
        "author": "Epictetus",
        "source": "Discourses, 3.26.38-39"
      }
    ],
    "notes": "<p>To steel himself before he committed suicide rather than submit to Julius Ceasar's destruction of the Roman Republic, the great Stoic philosopher Cato read a bit of Plato's <cite>Phaedo</cite>. In it, Plato writes, <q>It is the child within us that trembles before death.</q> Death is scary because it is such an unknown. No one can come back and tell us what it is like. We are in the dark about it.</p><p>As childlike and ultimately ignorant as we are about death, there are plenty of wise men and women who can at least provide some guidance. There's a reason that the world's oldest people never seem to be afraid of death: they've had more time to think about it than we have (and they realized how pointless worrying was). There are other wonderful resources: Florida Scott-Maxwell's Stoic diary during her terminal illness, <cite>The Measure of My Days</cite>, is one. Seneca's famous words to his family and friends, who had broken down and begged with his executioners, is another. <q>Where,</q> Seneca gently chided them, <q>are your maxims of philosophy, or the preparation of so many years' study against evils to come?</q> Throughout philosophy there are inspiring, brave words from brave men and women who can help us face this fear.</p><p>There is another helpful consideration about death from the Stoics. If death is truly the end, then what is there exactly to fear? For everything from your fears to your pain receptors to your worries and your remaining wishes, they will perish with you. As frightening as death might seem, remember: it contains within it the end of fear.</p>",
    "thoughts": ""
  },
  {
    "date": "December 21",
    "topic": "What Do You Have To Show For Your Years?",
    "quotes": [
      {
        "quote": "Many times an old man has no other evidence besides his age to prove he has lived a long time.",
        "author": "Seneca",
        "source": "On Tranquility Of Mind, 3.8b"
      }
    ],
    "notes": "<p>How long have you been alive? Take the years, multiply them by 365, and then by 24. How many hours have you lived? What do you have to show for all of them?</p><p>The answer for many people is: not enough. We had so many hours that we took them for granted. All we have to show for our time on this planet are rounds of golf, years spent at the office, time spent watching mediocre movies, a stack of mindless books we hardly remember reading, and maybe a garage full of toys. We're like the character in Raymond Chandler's <cite>The Long Goodbye:</cite> <q>Mostly, I just kill time,</q> he says, <q>and it dies hard.</q></p><p>One day, our hours will begin to run out. It would be nice to be able to say: <q>Hey, I really made the most of it.</q> Not in the form of achievements, not money, not status&mdash;you know what the Stoics think of all that&mdash;but in wisdom, insight, and real progress in the things that all humans struggle against.</p><p>What if you could say that you really made something of this time that you had? What if you could prove that you really did live [insert number] years? And not just lived them, but lived them <em>fully</em>.</p>",
    "thoughts": ""
  },
  {
    "date": "December 22",
    "topic": "Stake Your Own Claim",
    "quotes": [
      {
        "quote": "For it's disgraceful for an old person, or one in sight of old age, to have only the knowledge carried in their notebooks. Zeno said this … what do you say? Cleanthes said that … what do you say? How long will you be compelled by the claims of another? Take charge and stake your own claim&mdash;something posterity will carry in its notebook.",
        "author": "Seneca",
        "source": "Moral Letters, 33.7"
      }
    ],
    "notes": "<p>Musing in his notebook about the topic of immortality, Ralph Waldo Emerson complained how writers dance around a difficult topic by relying on quotes. <q>I hate quotation</q>, he wrote. <q>Tell me what you know.</q></p><p>Seneca was throwing down the same gauntlet some twenty centuries before. It's easier to quote, to rely on the wise words of others. Especially when the people you're deferring to are such towering figures.</p><p>It's harder (and more intimidating) to venture out on your own and express your own thoughts. But how do you think those wise and true quotes from those towering figures were created in the first place?</p><p>Your own experiences have value. You have accumulated your own wisdom too. Stake your claim. Put something down for the ages&mdash;in words and also in example.</p>",
    "thoughts": ""
  },
  {
    "date": "December 23",
    "topic": "What Are You So Afraid Of Losing?",
    "quotes": [
      {
        "quote": "You are afraid of dying. But, come now, how is this life or yours anything but death.",
        "author": "Seneca",
        "source": "Moral Letters, 77.18"
      }
    ],
    "notes": "<p>Seneca tells an amazing story about an obscenely wealthy Roman who was carried around by slaves on a litter. On one occasion, after being lifted out of a bath, the roman asked, <q>Am I sitting down yet?</q> Seneca's point was essentially: What kind of sad pathetic life is it if you're so disconnected from the world that you don't even know whether you're on the ground? How did the man know whether he was even <em>alive</em> at all?</p><p>Most of us are afraid of dying. But sometimes this fear begs the question: To protect what exactly? For a lot of people the answer is: hours of television, gossiping, gorging, wasting potential, reporting to a boring job, and on and on and on. Except, in the strictest sense, is this actually a life? Is this worth gripping so tightly and being afraid of losing?</p><p>It doesn't sound like it.</p>",
    "thoughts": "The same can be said for ill thoughts and feeling towards circumstances and people They are not worthy of my time. They are not worthy to occupy my mind and heart."
  },
  {
    "date": "December 24",
    "topic": "Meaningless ... Like A Fine Wine",
    "quotes": [
      {
        "quote": "You know what wine and liqueur tastes like. It makes no difference whether a hundred or a thousand bottles pass through your bladder&mdash;you are nothing more than a filter.",
        "author": "Seneca",
        "source": "Moral Letters, 77.16"
      }
    ],
    "notes": "<p>Here we have another contemptuous expression, this time from Seneca, who, given his reputation for opulence, probably enjoyed a nice drink from time to time. His point will probably rattle anyone for whom success and adulthood has turned them into a wine snob (though the logic can be applied just as easily to foodies, techies, audiophiles, and the like).</p><p>As fun and exciting and pleasurable as these pleasures are, it's worth putting them in their place. You don't get a prize at the end of your life for having consumed more, worked more, spent more, collected more, or learned more about the various vintages than everyone else. You are just a conduit, a vessel that temporarily held or interacted with these fancy items.</p><p>If you find yourself lusting over them, this meditation might help reduce their luster just a smidge.</p>",
    "thoughts": ""
  },
  {
    "date": "December 25",
    "topic": "Don't Burn The Candle At Both Ends",
    "quotes": [
      {
        "quote": "The mind must be given relaxation&mdash;it will rise improved and sharper after a good break. Just as rich fields must not be forced&mdash;for they will quickly lose their fertility if never given a break&mdash;so constant work on the anvil will fracture the force of the mind. But it regains its powers if it is set free and relaxed for a while. Constant work gives rise to a certain kind of dullness and feebleness in the rational soul.",
        "author": "Seneca",
        "source": "On Tranquility Of Mind, 17.5"
      }
    ],
    "notes": "<p>One can't read Marcus Aurelius and Seneca and not be struck by the difference between these two radically different personalities. Each had his own strengths and weaknesses. Which would you rather have entrusted with the immense responsibility of an empire? Probably Marcus. But who would you rather be as a person? Probably Seneca.</p><p>One of the reasons is that Seneca seems to have had what we would now refer to as work/life balance. Whereas Marcus can read as though he's worn down and tired, Seneca always feels energetic, fresh, robust. His philosophy of rest and realization&mdash;intermixed with his rigorous study and other Stoic rituals&mdash;probably had a lot to do with it.</p><p>The mind is a muscle, and like the rest, it can be strained, overworked, even injured. Our physical health is also worn down by over-commitment, a lack of rest, and bad habits. Remember the tall tale about John Henry&mdash;the man who challenged the machine? He died of exhaustion at the end. Don't forget that.</p><p>Today, you may face things that try your patience, require considerable focus or clarity, or demand creative breakthroughs. Life is a long haul&mdash;it will mean many such moments. Are you going to be able to handle them if you've burned the candle at both ends? If you've been abusing and overworking your body?</p>",
    "thoughts": ""
  },
  {
    "date": "December 26",
    "topic": "Life Is Long&mdash;If You Know How To Use It",
    "quotes": [
      {
        "quote": "It's not at all that we have too short a time to live, but that we squander a great deal of it. Life is long enough, and it's given in sufficient measure to do many great things if we spend it well. But when it's poured down the drain of luxury and neglect, when it's employed to no good end, we're finally driven to see that it has passed by before we even recognized it passing. And so it is&mdash;we don't receive a short life, we make it so.",
        "author": "Seneca",
        "source": "On The Brevity Of Life, 1.3-4a"
      }
    ],
    "notes": "<p>No one knows how long they have to live, but sadly, we can be sure of one thing: we'll waste far too much of life. Wasting it sitting around, waste it chasing the wrong things, waste it by refusing to take the time to ask ourselves what's actually important to us. Far too often, we're like the overconfident academics that Petrarch criticized in his classic essay on ignorance&mdash;the types who <q>fritter away their powers incessantly in caring for things outside of them and seek themselves there.</q> yet they have no idea this is what they're doing.</p><p>So today, if you find yourself rushed or uttering the words, <q>I just don't have enough time,</q> stop and take a second. Is this actually true? Or have you just committed to a lot of unnecessary things? Are you actually being efficient, or have you assumed a great deal of waste into your life? The average American spends something like forty hours a year in traffic. That's <em>months</em> over the course of a life. And for <q>traffic,</q> you can substitute so many activities&mdash;from fighting with others to watching television to daydreaming.</p><p>Your life is plenty long&mdash;just use it properly.</p>",
    "thoughts": ""
  },
  {
    "date": "December 27",
    "topic": "Don't Let Your Soul Go First",
    "quotes": [
      {
        "quote": "It's a disgrace in this life when the soul surrenders first while the body refuses to.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 6.29"
      }
    ],
    "notes": "<p>Despite his privileges, Marcus Aurelius had a difficult life. The Roman historian Cassius Dio mused that Marcus <q>did not meet with the good fortune that he deserved, for he was not strong in body and was involved in a multitude of troubles throughout practically his entire reign.</q> At one point, he was so sick that a rumor spread that he had died&mdash;and matters were made worse when his most trusted general used it as an opportunity to declare himself the new emperor.</p><p>But throughout these struggles&mdash;the years at war, the crippling illnesses, his troubled son&mdash;he never gave up. It's an inspiring example for us to think about today if we get tired, frustrated, or have to deal with some crisis. Here was a guy who had every reason to be angry and bitter, who could have abandoned his principles and lived in luxury or ease, who could have put his responsibilities aside and focused on his own health.</p><p>But he never did. His soul stayed strong even after his body became weak. He didn't give up, right up to the second until his body finally did&mdash;when he died near Vienna in 180 AD.</p>",
    "thoughts": ""
  },
  {
    "date": "December 28",
    "topic": "On Being Remembered",
    "quotes": [
      {
        "quote": "Everything lasts for a day, the one who remembers and the remembered.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 4.35"
      }
    ],
    "notes": "<p>Take a walk down Forty-first Street toward the beautiful New York City Public Library, with its majestic stone lions. On your way up <q>Library Way,</q> you'll pass a placard laid into the cement, part of a series of quotations from great writers throughout history. This one is from Marcus Aurelius: <q>Everything is only for a day, both that which remembers and that which is remembered.</q></p><p>The library itself was designed by the firm of John Merven Carr&egrave;re, one of the twentieth century's most accomplished architects. It combines the collections of such luminaries and philanthropists as Samuel Tilden, John Jacob Astor, and Lames Lenox, and their names are carved into the stone. Today, the naming rights go to hedge fund manager Stephen A. Schwarzman. The opening of the library in 1911 was attended by President William Howard Taft, Governor John Alden Dix, and New York City mayor William Jay Gaynor. The plaques you pass on your way were designed by the excellent Gregg LeFevre.</p><p>Marcus's quote makes us ponder: How many of these people have we even heard of? The people involved in the story of the library were some of the most famous men in the world. Masters of their respective crafts, rich beyond imagination in some cases. Even along <q>Library Way,</q> many of the famous authors are unfamiliar to the modern reader. They are long gone, as are the people who remembered them.</p><p>All of us, including Marcus&mdash;who is passed over by just as many unaware pedestrians&mdash;last for just a day, at most.</p>",
    "thoughts": ""
  },
  {
    "date": "December 29",
    "topic": "Give Thanks",
    "quotes": [
      {
        "quote": "In all things we should try to make ourselves be as grateful as possible. For gratitude is a good think for ourselves, in a manner in which justice, commonly held to belong to others, is not. Gratitude pays itself back in large measure.",
        "author": "Seneca",
        "source": "Moral Letters, 81.19"
      }
    ],
    "notes": "<p>Think of all the things you can be grateful for today. That you are alive, that you live in a time primarily of peace, that you have enough health and leisure to read this book. What of the little things? The person who smiled at you, the woman who held the door open, that song you like on the radio, the pleasant weather.</p><p>Gratitude is infectious. Its positivity is radiant.</p><p>Even if today was your last day on the earth&mdash;if you knew in advance that it was going to end in a few short hours&mdash;would there still be plenty to be grateful for? How much better would your life be if you kicked off every day like that? If you let it carry through from morning to night and touch every part of your life?</p>",
    "thoughts": ""
  },
  {
    "date": "December 30",
    "topic": "Taking The Bite Out Of It",
    "quotes": [
      {
        "quote": "To bear trials with a calm mind<br>robs misfortune of its strength and burden.",
        "author": "Seneca",
        "source": "Hercules Oetaeus, 231-232"
      }
    ],
    "notes": "<p>The people you admire, the ones who seem to be able to successfully handle and deal with adversity and difficulty, what do they have in common? Their sense of equilibrium, their orderly discipline. On the one-yard line, in the midst of criticism, after a heartbreaking tragedy, during a stressful period, they keep going.</p><p>Not because they are better than you. Not because they're smarter. But because they have learned a little secret. You can take the bite out of any tough situation by bringing in a calm mind to it. By considering it and meditating on it in advance.</p><p>And this is true not just for our day-to-day adversities but for the greatest and most unavoidable trial of all: our own eventual death. It could come tomorrow, it could come in forty years. It could be quick and painless, or it could be excruciating. Our greatest asset in that ordeal will not be religion, it will not even be the wise words of the philosophers. It will be, simply, our calm and reasoned mind.</p>",
    "thoughts": ""
  },
  {
    "date": "December 31",
    "topic": "Get Active In Your Own Rescue",
    "quotes": [
      {
        "quote": "Stop wandering about! You aren't likely to read your own notebooks, or ancient histories, or the anthologies you've collected to enjoy in your old age. Get busy with life's purpose, toss aside empty hopes, get active in your own rescue&mdash;if you care for yourself at all&mdash;and do it while you can.",
        "author": "Marcus Aurelius",
        "source": "Meditations, 3.14"
      }
    ],
    "notes": "<p>The purpose of all our reading and studying is to aid us in the pursuit of the good life (and death). At some point, we must put our books aside and take action. So that, as Seneca put it, the <q>words become works.</q> There is an old saying that a <q>scholar made is a soldier spoiled.</q> We want to be both scholars and soldiers&mdash;soldiers in the good fight.</p><p>That's what's next for you. Move forward, move onward. Another book isn't the answer. The right choices and decisions are. Who knows how much time you have left, or what awaits us tomorrow?</p>",
    "thoughts": ""
  }
]
"
}